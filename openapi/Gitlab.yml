openapi: 3.0.0
info:
  title: Gitlab
  description: >-
    The platform for modern developers. GitLab unifies issues, code review, CI
    and CD into a single experience.


    Contact Support:
     Name: No Contact
     Email: email@example.com
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
tags:
  - name: dockerfiles
  - name: gitignores
  - name: gitlab ci ymls
  - name: groups
  - name: groups > {id}
  - name: groups > {id} > access requests
  - name: groups > {id} > access requests > {user id}
  - name: groups > {id} > members
  - name: groups > {id} > projects
  - name: hooks
  - name: internal
  - name: licenses
  - name: projects
  - name: projects > {id}
  - name: projects > {id} > access requests
  - name: projects > {id} > access requests > {user id}
  - name: projects > {id} > boards
  - name: projects > {id} > boards > {board id}/lists
  - name: projects > {id} > builds
  - name: projects > {id} > builds > {build id}
  - name: projects > {id} > builds > {build id} > artifacts
  - name: projects > {id} > deploy keys
  - name: projects > {id} > deploy keys > {key id}
  - name: projects > {id} > deployments
  - name: projects > {id} > environments
  - name: projects > {id} > fork
  - name: projects > {id} > hooks
  - name: projects > {id} > issues
  - name: projects > {id} > issues > {issue id}
  - name: projects > {id} > issues > {issue id} > award emoji
  - name: projects > {id} > issues > {issue id} > notes/{note id}/award emoji
  - name: projects > {id} > issues > {noteable id}/notes
  - name: projects > {id} > keys
  - name: projects > {id} > keys > {key id}
  - name: projects > {id} > labels
  - name: projects > {id} > members
  - name: projects > {id} > merge request
  - name: projects > {id} > merge request > {merge request id}
  - name: projects > {id} > merge requests
  - name: projects > {id} > merge requests > {merge request id}
  - name: projects > {id} > merge requests > {merge request id} > award emoji
  - name: >-
      projects > {id} > merge requests > {merge request id} > notes/{note
      id}/award emoji
  - name: projects > {id} > merge requests > {merge request id} > versions
  - name: projects > {id} > merge requests > {noteable id}/notes
  - name: projects > {id} > milestones
  - name: projects > {id} > milestones > {milestone id}
  - name: projects > {id} > pipelines
  - name: projects > {id} > pipelines > {pipeline id}
  - name: projects > {id} > repository
  - name: projects > {id} > repository > branches
  - name: projects > {id} > repository > branches > {branch}
  - name: projects > {id} > repository > commits
  - name: projects > {id} > repository > commits > {sha}
  - name: projects > {id} > repository > tags
  - name: projects > {id} > repository > tags > {tag name}
  - name: projects > {id} > runners
  - name: projects > {id} > services
  - name: projects > {id} > share
  - name: projects > {id} > snippets
  - name: projects > {id} > snippets > {noteable id}/notes
  - name: projects > {id} > snippets > {snippet id}
  - name: projects > {id} > snippets > {snippet id} > award emoji
  - name: projects > {id} > snippets > {snippet id} > notes/{note id}/award emoji
  - name: projects > {id} > triggers
  - name: projects > {id} > variables
  - name: runners
  - name: sidekiq
  - name: snippets
  - name: snippets > {id}
  - name: templates
  - name: templates > dockerfiles
  - name: templates > gitignores
  - name: templates > gitlab ci ymls
  - name: templates > licenses
  - name: todos
  - name: user
  - name: user > emails
  - name: user > keys
  - name: users
  - name: users > {id}
  - name: users > {id} > emails
  - name: users > {id} > keys
  - name: v3
  - name: v3 > dockerfiles
  - name: v3 > gitignores
  - name: v3 > gitlab ci ymls
paths:
  /dockerfiles:
    get:
      tags:
        - dockerfiles
      summary: Get Dockerfiles
      description: >-
        This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /dockerfiles/{name}:
    get:
      tags:
        - dockerfiles
      summary: Get Dockerfiles Name
      description: >-
        This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /gitignores:
    get:
      tags:
        - gitignores
      summary: Get Gitignores
      description: >-
        This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /gitignores/{name}:
    get:
      tags:
        - gitignores
      summary: Get Gitignores Name
      description: >-
        This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /gitlab_ci_ymls:
    get:
      tags:
        - gitlab ci ymls
      summary: Get Gitlab Ci Ymls
      description: >-
        This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /gitlab_ci_ymls/{name}:
    get:
      tags:
        - gitlab ci ymls
      summary: Get Gitlab Ci Ymls Name
      description: >-
        This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/access_requests/{user_id}:
    delete:
      tags:
        - groups > {id} > access requests > {user id}
      summary: Delete Groups  Access Requests User
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/access_requests/{user_id}/approve:
    put:
      tags:
        - groups > {id} > access requests > {user id}
      summary: Put Groups  Access Requests User  Approve
      description: This feature was introduced in GitLab 8.11.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/access_requests:
    get:
      tags:
        - groups > {id} > access requests
      summary: Get Groups  Access Requests
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/members:
    get:
      tags:
        - groups > {id} > members
      summary: Get Groups  Members
      description: >-
        Gets a list of group or project members viewable by the authenticated
        user.
      parameters:
        - name: query
          in: query
          schema:
            type: string
          description: A query string to search for members
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/members/{user_id}:
    delete:
      tags:
        - groups > {id} > members
      summary: Delete Groups  Members User
      description: Removes a user from a group or project.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/projects:
    get:
      tags:
        - groups > {id} > projects
      summary: Get Groups  Projects
      description: Get a list of projects in this group.
      parameters:
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/projects/{project_id}:
    post:
      tags:
        - groups > {id} > projects
      summary: Add Groups  Projects Project
      description: Transfer a project to the group namespace. Available only for admin.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          description: The ID or path of the project
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}:
    delete:
      tags:
        - groups > {id}
      summary: Delete Groups
      description: Remove a group.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/issues:
    get:
      tags:
        - groups > {id}
      summary: Get Groups  Issues
      description: Get a list of group issues
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Return opened, closed, or all issues
          example: <get>
        - name: labels
          in: query
          schema:
            type: string
          description: Comma-separated list of label names
          example: <get>
        - name: milestone
          in: query
          schema:
            type: string
          description: Return issues for a specific milestone
          example: <object>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/{id}/notification_settings:
    get:
      tags:
        - groups > {id}
      summary: Get Groups  Notification Settings
      description: This feature was introduced in GitLab 8.12
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups:
    get:
      tags:
        - groups
      summary: Get Groups
      description: Get a groups list
      parameters:
        - name: statistics
          in: query
          schema:
            type: string
          description: Include project statistics
          example: <get>
        - name: all_available
          in: query
          schema:
            type: string
          description: Show all group that you have access to
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /groups/owned:
    get:
      tags:
        - groups
      summary: Get Groups Owned
      description: Get list of owned groups for authenticated user
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: statistics
          in: query
          schema:
            type: string
          description: Include project statistics
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /hooks:
    get:
      tags:
        - hooks
      summary: Get Hooks
      description: Get the list of system hooks
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /hooks/{id}:
    delete:
      tags:
        - hooks
      summary: Delete Hooks
      description: Delete a hook
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/allowed:
    post:
      tags:
        - internal
      summary: Add Internal Allowed
      description: Post internal allowed
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/broadcast_message:
    get:
      tags:
        - internal
      summary: Get Internal Broadcast Message
      description: Get internal broadcast message
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/check:
    get:
      tags:
        - internal
      summary: Get Internal Check
      description: Get internal check
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/discover:
    get:
      tags:
        - internal
      summary: Get Internal Discover
      description: Get internal discover
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/lfs_authenticate:
    post:
      tags:
        - internal
      summary: Add Internal Lfs Authenticate
      description: Post internal lfs authenticate
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/merge_request_urls:
    get:
      tags:
        - internal
      summary: Get Internal Merge Request Urls
      description: Get internal merge request urls
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /internal/two_factor_recovery_codes:
    post:
      tags:
        - internal
      summary: Add Internal Two Factor Recovery Codes
      description: Post internal two factor recovery codes
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /licenses:
    get:
      tags:
        - licenses
      summary: Get Licenses
      description: >-
        This feature was introduced in GitLab 8.7. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: popular
          in: query
          schema:
            type: string
          description: If passed, returns only popular licenses
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /licenses/{name}:
    get:
      tags:
        - licenses
      summary: Get Licenses Name
      description: >-
        This feature was introduced in GitLab 8.7. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/access_requests/{user_id}:
    delete:
      tags:
        - projects > {id} > access requests > {user id}
      summary: Delete Projects  Access Requests User
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/access_requests/{user_id}/approve:
    put:
      tags:
        - projects > {id} > access requests > {user id}
      summary: Put Projects  Access Requests User  Approve
      description: This feature was introduced in GitLab 8.11.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/access_requests:
    get:
      tags:
        - projects > {id} > access requests
      summary: Get Projects  Access Requests
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/boards/{board_id}/lists:
    get:
      tags:
        - projects > {id} > boards > {board id}/lists
      summary: Get Projects  Boards Board  Lists
      description: >-
        Does not include `backlog` and `done` lists. This feature was introduced
        in 8.13
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a board
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/boards/{board_id}/lists/{list_id}:
    delete:
      tags:
        - projects > {id} > boards > {board id}/lists
      summary: Delete Projects  Boards Board  Lists List
      description: Delete projects  boards board  lists list
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a board
          example: <>
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a board list
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/boards:
    get:
      tags:
        - projects > {id} > boards
      summary: Get Projects  Boards
      description: This feature was introduced in 8.13
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/artifacts:
    get:
      tags:
        - projects > {id} > builds > {build id} > artifacts
      summary: Get Projects  Builds Build  Artifacts
      description: This feature was introduced in GitLab 8.5
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/artifacts/keep:
    post:
      tags:
        - projects > {id} > builds > {build id} > artifacts
      summary: Add Projects  Builds Build  Artifacts Keep
      description: Keep the artifacts to prevent them from being deleted
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}:
    get:
      tags:
        - projects > {id} > builds > {build id}
      summary: Get Projects  Builds Build
      description: Get a specific build of a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/cancel:
    post:
      tags:
        - projects > {id} > builds > {build id}
      summary: Add Projects  Builds Build  Cancel
      description: Cancel a specific build of a project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/erase:
    post:
      tags:
        - projects > {id} > builds > {build id}
      summary: Add Projects  Builds Build  Erase
      description: Erase build (remove artifacts and build trace)
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/play:
    post:
      tags:
        - projects > {id} > builds > {build id}
      summary: Add Projects  Builds Build  Play
      description: This feature was added in GitLab 8.11
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/retry:
    post:
      tags:
        - projects > {id} > builds > {build id}
      summary: Add Projects  Builds Build  Retry
      description: Retry a specific build of a project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/{build_id}/trace:
    get:
      tags:
        - projects > {id} > builds > {build id}
      summary: Get Projects  Builds Build  Trace
      description: Get a trace of a specific build of a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: build_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a build
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds:
    get:
      tags:
        - projects > {id} > builds
      summary: Get Projects  Builds
      description: Get a project builds
      parameters:
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/builds/artifacts/{ref_name}/download:
    get:
      tags:
        - projects > {id} > builds
      summary: Get Projects  Builds Artifacts Ref Name Download
      description: Get projects  builds artifacts ref name download
      parameters:
        - name: job
          in: query
          schema:
            type: string
          description: The name for the build
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: ref_name
          in: path
          schema:
            type: string
          required: true
          description: The ref from repository
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deploy_keys/{key_id}:
    delete:
      tags:
        - projects > {id} > deploy keys > {key id}
      summary: Delete Projects  Deploy Keys Key
      description: Delete projects  deploy keys key
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deploy_keys/{key_id}/disable:
    delete:
      tags:
        - projects > {id} > deploy keys > {key id}
      summary: Delete Projects  Deploy Keys Key  Disable
      description: Delete projects  deploy keys key  disable
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deploy_keys/{key_id}/enable:
    post:
      tags:
        - projects > {id} > deploy keys > {key id}
      summary: Add Projects  Deploy Keys Key  Enable
      description: Post projects  deploy keys key  enable
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deploy_keys:
    get:
      tags:
        - projects > {id} > deploy keys
      summary: Get Projects  Deploy Keys
      description: Get a specific project's deploy keys
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deployments:
    get:
      tags:
        - projects > {id} > deployments
      summary: Get Projects  Deployments
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/deployments/{deployment_id}:
    get:
      tags:
        - projects > {id} > deployments
      summary: Get Projects  Deployments Deployment
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: deployment_id
          in: path
          schema:
            type: string
          required: true
          description: The deployment ID
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/environments:
    get:
      tags:
        - projects > {id} > environments
      summary: Get Projects  Environments
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/environments/{environment_id}:
    delete:
      tags:
        - projects > {id} > environments
      summary: Delete Projects  Environments Environment
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
          description: The environment ID
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/fork:
    delete:
      tags:
        - projects > {id} > fork
      summary: Delete Projects  Fork
      description: Remove a forked_from relationship
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/fork/{forked_from_id}:
    post:
      tags:
        - projects > {id} > fork
      summary: Add Projects  Fork Forked From
      description: Mark this project as forked from another
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: forked_from_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the project it was forked from
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/hooks:
    get:
      tags:
        - projects > {id} > hooks
      summary: Get Projects  Hooks
      description: Get projects  hooks
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/hooks/{hook_id}:
    delete:
      tags:
        - projects > {id} > hooks
      summary: Delete Projects  Hooks Hook
      description: Delete projects  hooks hook
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the hook to delete
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/award_emoji:
    get:
      tags:
        - projects > {id} > issues > {issue id} > award emoji
      summary: Get Projects  Issues Issue  Award Emoji
      description: Get projects  issues issue  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/award_emoji/{award_id}:
    delete:
      tags:
        - projects > {id} > issues > {issue id} > award emoji
      summary: Delete Projects  Issues Issue  Award Emoji Award
      description: Delete projects  issues issue  award emoji award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji:
    get:
      tags:
        - projects > {id} > issues > {issue id} > notes/{note id}/award emoji
      summary: Get Projects  Issues Issue  Notes Note  Award Emoji
      description: Get projects  issues issue  notes note  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      tags:
        - projects > {id} > issues > {issue id} > notes/{note id}/award emoji
      summary: Delete Projects  Issues Issue  Notes Note  Award Emoji Award
      description: Delete projects  issues issue  notes note  award emoji award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}:
    delete:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Delete Projects  Issues Issue
      description: Delete projects  issues issue
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/add_spent_time:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Add Spent Time
      description: Post projects  issues issue  add spent time
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/move:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Move
      description: Post projects  issues issue  move
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/reset_spent_time:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Reset Spent Time
      description: Post projects  issues issue  reset spent time
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/reset_time_estimate:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Reset Time Estimate
      description: Post projects  issues issue  reset time estimate
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/time_estimate:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Time Estimate
      description: Post projects  issues issue  time estimate
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/time_stats:
    get:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Get Projects  Issues Issue  Time Stats
      description: Get projects  issues issue  time stats
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{issue_id}/todo:
    post:
      tags:
        - projects > {id} > issues > {issue id}
      summary: Add Projects  Issues Issue  Todo
      description: Post projects  issues issue  todo
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: issue_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project issue
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{noteable_id}/notes:
    get:
      tags:
        - projects > {id} > issues > {noteable id}/notes
      summary: Get Projects  Issues Noteable  Notes
      description: Get a list of project +noteable+ notes
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{noteable_id}/notes/{note_id}:
    delete:
      tags:
        - projects > {id} > issues > {noteable id}/notes
      summary: Delete Projects  Issues Noteable  Notes Note
      description: Delete projects  issues noteable  notes note
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues:
    get:
      tags:
        - projects > {id} > issues
      summary: Get Projects  Issues
      description: Get a list of project issues
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Return opened, closed, or all issues
          example: <get>
        - name: iid
          in: query
          schema:
            type: string
          description: Return the issue having the given `iid`
          example: <get>
        - name: labels
          in: query
          schema:
            type: string
          description: Comma-separated list of label names
          example: <get>
        - name: milestone
          in: query
          schema:
            type: string
          description: Return issues for a specific milestone
          example: <object>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/issues/{subscribable_id}/subscription:
    delete:
      tags:
        - projects > {id} > issues
      summary: Delete Projects  Issues Subscribable  Subscription
      description: Delete projects  issues subscribable  subscription
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: subscribable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a resource
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/keys/{key_id}:
    delete:
      tags:
        - projects > {id} > keys > {key id}
      summary: Delete Projects  Keys Key
      description: Delete deploy key for a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/keys/{key_id}/disable:
    delete:
      tags:
        - projects > {id} > keys > {key id}
      summary: Delete Projects  Keys Key  Disable
      description: This feature was added in GitLab 8.11
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/keys/{key_id}/enable:
    post:
      tags:
        - projects > {id} > keys > {key id}
      summary: Add Projects  Keys Key  Enable
      description: This feature was added in GitLab 8.11
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/keys:
    get:
      tags:
        - projects > {id} > keys
      summary: Get Projects  Keys
      description: Get a specific project's deploy keys
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/labels:
    delete:
      tags:
        - projects > {id} > labels
      summary: Delete Projects  Labels
      description: Delete an existing label
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: The name of the label to be deleted
          example: <get>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/labels/{subscribable_id}/subscription:
    delete:
      tags:
        - projects > {id} > labels
      summary: Delete Projects  Labels Subscribable  Subscription
      description: Delete projects  labels subscribable  subscription
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: subscribable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a resource
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/members:
    get:
      tags:
        - projects > {id} > members
      summary: Get Projects  Members
      description: >-
        Gets a list of group or project members viewable by the authenticated
        user.
      parameters:
        - name: query
          in: query
          schema:
            type: string
          description: A query string to search for members
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/members/{user_id}:
    delete:
      tags:
        - projects > {id} > members
      summary: Delete Projects  Members User
      description: Removes a user from a group or project.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}:
    get:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Get Projects  Merge Request Merge Request
      description: This endpoint is deprecated and will be removed in GitLab 9.0.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds:
    post:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: >-
        Add Projects  Merge Request Merge Request  Cancel Merge When Build
        Succeeds
      description: >-
        Post projects  merge request merge request  cancel merge when build
        succeeds
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/changes:
    get:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Get Projects  Merge Request Merge Request  Changes
      description: Get projects  merge request merge request  changes
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/closes_issues:
    get:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Get Projects  Merge Request Merge Request  Closes Issues
      description: Get projects  merge request merge request  closes issues
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/comments:
    get:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Get Projects  Merge Request Merge Request  Comments
      description: Get projects  merge request merge request  comments
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/commits:
    get:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Get Projects  Merge Request Merge Request  Commits
      description: Get projects  merge request merge request  commits
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{merge_request_id}/merge:
    put:
      tags:
        - projects > {id} > merge request > {merge request id}
      summary: Put Projects  Merge Request Merge Request  Merge
      description: Put projects  merge request merge request  merge
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_request/{subscribable_id}/subscription:
    delete:
      tags:
        - projects > {id} > merge request
      summary: Delete Projects  Merge Request Subscribable  Subscription
      description: Delete projects  merge request subscribable  subscription
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: subscribable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a resource
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/award_emoji:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id} > award emoji
      summary: Get Projects  Merge Requests Merge Request  Award Emoji
      description: Get projects  merge requests merge request  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}:
    delete:
      tags:
        - projects > {id} > merge requests > {merge request id} > award emoji
      summary: Delete Projects  Merge Requests Merge Request  Award Emoji Award
      description: Delete projects  merge requests merge request  award emoji award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji:
    get:
      tags:
        - >-
          projects > {id} > merge requests > {merge request id} > notes/{note
          id}/award emoji
      summary: Get Projects  Merge Requests Merge Request  Notes Note  Award Emoji
      description: Get projects  merge requests merge request  notes note  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      tags:
        - >-
          projects > {id} > merge requests > {merge request id} > notes/{note
          id}/award emoji
      summary: >-
        Delete Projects  Merge Requests Merge Request  Notes Note  Award Emoji
        Award
      description: >-
        Delete projects  merge requests merge request  notes note  award emoji
        award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/versions:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id} > versions
      summary: Get Projects  Merge Requests Merge Request  Versions
      description: Get projects  merge requests merge request  versions
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id} > versions
      summary: Get Projects  Merge Requests Merge Request  Versions Version
      description: Get projects  merge requests merge request  versions version
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
        - name: version_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request diff version
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}:
    delete:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Delete Projects  Merge Requests Merge Request
      description: Delete projects  merge requests merge request
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/add_spent_time:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Add Projects  Merge Requests Merge Request  Add Spent Time
      description: Post projects  merge requests merge request  add spent time
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: >-
        Add Projects  Merge Requests Merge Request  Cancel Merge When Build
        Succeeds
      description: >-
        Post projects  merge requests merge request  cancel merge when build
        succeeds
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/changes:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Get Projects  Merge Requests Merge Request  Changes
      description: Get projects  merge requests merge request  changes
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/closes_issues:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Get Projects  Merge Requests Merge Request  Closes Issues
      description: Get projects  merge requests merge request  closes issues
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/comments:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Get Projects  Merge Requests Merge Request  Comments
      description: Get projects  merge requests merge request  comments
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/commits:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Get Projects  Merge Requests Merge Request  Commits
      description: Get projects  merge requests merge request  commits
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/merge:
    put:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Put Projects  Merge Requests Merge Request  Merge
      description: Put projects  merge requests merge request  merge
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/reset_spent_time:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Add Projects  Merge Requests Merge Request  Reset Spent Time
      description: Post projects  merge requests merge request  reset spent time
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Add Projects  Merge Requests Merge Request  Reset Time Estimate
      description: Post projects  merge requests merge request  reset time estimate
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/time_estimate:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Add Projects  Merge Requests Merge Request  Time Estimate
      description: Post projects  merge requests merge request  time estimate
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/time_stats:
    get:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Get Projects  Merge Requests Merge Request  Time Stats
      description: Get projects  merge requests merge request  time stats
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{merge_request_id}/todo:
    post:
      tags:
        - projects > {id} > merge requests > {merge request id}
      summary: Add Projects  Merge Requests Merge Request  Todo
      description: Post projects  merge requests merge request  todo
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: merge_request_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a merge request
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{noteable_id}/notes:
    get:
      tags:
        - projects > {id} > merge requests > {noteable id}/notes
      summary: Get Projects  Merge Requests Noteable  Notes
      description: Get projects  merge requests noteable  notes
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{noteable_id}/notes/{note_id}:
    delete:
      tags:
        - projects > {id} > merge requests > {noteable id}/notes
      summary: Delete Projects  Merge Requests Noteable  Notes Note
      description: Delete projects  merge requests noteable  notes note
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests:
    get:
      tags:
        - projects > {id} > merge requests
      summary: Get Projects  Merge Requests
      description: Get projects  merge requests
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Return opened, closed, or all issues
          example: <get>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/merge_requests/{subscribable_id}/subscription:
    delete:
      tags:
        - projects > {id} > merge requests
      summary: Delete Projects  Merge Requests Subscribable  Subscription
      description: Delete projects  merge requests subscribable  subscription
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: subscribable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a resource
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/milestones/{milestone_id}:
    get:
      tags:
        - projects > {id} > milestones > {milestone id}
      summary: Get Projects  Milestones Milestone
      description: Get projects  milestones milestone
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: milestone_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project milestone
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/milestones/{milestone_id}/issues:
    get:
      tags:
        - projects > {id} > milestones > {milestone id}
      summary: Get Projects  Milestones Milestone  Issues
      description: Get all issues for a single project milestone
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: milestone_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project milestone
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/milestones:
    get:
      tags:
        - projects > {id} > milestones
      summary: Get Projects  Milestones
      description: Get a list of project milestones
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Return opened, closed, or all issues
          example: <get>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/pipelines/{pipeline_id}:
    get:
      tags:
        - projects > {id} > pipelines > {pipeline id}
      summary: Get Projects  Pipelines Pipeline
      description: This feature was introduced in GitLab 8.11
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          description: The pipeline ID
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/pipelines/{pipeline_id}/cancel:
    post:
      tags:
        - projects > {id} > pipelines > {pipeline id}
      summary: Add Projects  Pipelines Pipeline  Cancel
      description: This feature was introduced in GitLab 8.11.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          description: The pipeline ID
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/pipelines/{pipeline_id}/retry:
    post:
      tags:
        - projects > {id} > pipelines > {pipeline id}
      summary: Add Projects  Pipelines Pipeline  Retry
      description: This feature was introduced in GitLab 8.11.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          description: The pipeline ID
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/pipelines:
    get:
      tags:
        - projects > {id} > pipelines
      summary: Get Projects  Pipelines
      description: This feature was introduced in GitLab 8.11.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/branches/{branch}:
    delete:
      tags:
        - projects > {id} > repository > branches > {branch}
      summary: Delete Projects  Repository Branches Branch
      description: Delete projects  repository branches branch
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: The name of the branch
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/branches/{branch}/protect:
    put:
      tags:
        - projects > {id} > repository > branches > {branch}
      summary: Put Projects  Repository Branches Branch Protect
      description: Put projects  repository branches branch protect
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: The name of the branch
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/branches/{branch}/unprotect:
    put:
      tags:
        - projects > {id} > repository > branches > {branch}
      summary: Put Projects  Repository Branches Branch Unprotect
      description: Put projects  repository branches branch unprotect
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: branch
          in: path
          schema:
            type: string
          required: true
          description: The name of the branch
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/branches:
    get:
      tags:
        - projects > {id} > repository > branches
      summary: Get Projects  Repository Branches
      description: Get a project repository branches
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha
      description: Get projects  repository commits sha
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/blob:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha Blob
      description: Get projects  repository commits sha blob
      parameters:
        - name: filepath
          in: query
          schema:
            type: string
          description: The path to the file to display
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/builds:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha Builds
      description: Get builds for a specific commit of a project
      parameters:
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/cherry_pick:
    post:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Add Projects  Repository Commits Sha Cherry Pick
      description: Post projects  repository commits sha cherry pick
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/comments:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha Comments
      description: Get projects  repository commits sha comments
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/diff:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha Diff
      description: Get the diff for a specific commit of a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits/{sha}/statuses:
    get:
      tags:
        - projects > {id} > repository > commits > {sha}
      summary: Get Projects  Repository Commits Sha Statuses
      description: Get projects  repository commits sha statuses
      parameters:
        - name: ref
          in: query
          schema:
            type: string
          description: The ref
          example: <get>
        - name: stage
          in: query
          schema:
            type: string
          description: The stage
          example: <get>
        - name: name
          in: query
          schema:
            type: string
          description: The name of the label to be deleted
          example: <get>
        - name: all
          in: query
          schema:
            type: string
          description: 'Show all statuses, default: false'
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/commits:
    get:
      tags:
        - projects > {id} > repository > commits
      summary: Get Projects  Repository Commits
      description: Get a project repository commits
      parameters:
        - name: ref_name
          in: query
          schema:
            type: string
          description: >-
            The name of a repository branch or tag, if not given the default
            branch is used
          example: <>
        - name: since
          in: query
          schema:
            type: string
          description: Only commits after or in this date will be returned
          example: <>
        - name: until
          in: query
          schema:
            type: string
          description: Only commits before or in this date will be returned
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: path
          in: query
          schema:
            type: string
          description: The file path
          example: <get>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/tags/{tag_name}:
    delete:
      tags:
        - projects > {id} > repository > tags > {tag name}
      summary: Delete Projects  Repository Tags Tag Name
      description: Delete projects  repository tags tag name
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: The name of the tag
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/tags/{tag_name}/release:
    post:
      tags:
        - projects > {id} > repository > tags > {tag name}
      summary: Add Projects  Repository Tags Tag Name Release
      description: Post projects  repository tags tag name release
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: The name of the tag
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/tags:
    get:
      tags:
        - projects > {id} > repository > tags
      summary: Get Projects  Repository Tags
      description: Get a project repository tags
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/archive:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Archive
      description: Get an archive of the repository
      parameters:
        - name: sha
          in: query
          schema:
            type: string
          description: The commit sha of the archive to be downloaded
          example: <get>
        - name: format
          in: query
          schema:
            type: string
          description: The archive format
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/blobs/{sha}:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Blobs Sha
      description: Get projects  repository blobs sha
      parameters:
        - name: filepath
          in: query
          schema:
            type: string
          description: The path to the file to display
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/compare:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Compare
      description: Compare two branches, tags, or commits
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: The commit, branch name, or tag name to start comparison
          example: <>
        - name: to
          in: query
          schema:
            type: string
          description: The commit, branch name, or tag name to stop comparison
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/contributors:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Contributors
      description: Get projects  repository contributors
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/files:
    delete:
      tags:
        - projects > {id} > repository
      summary: Delete Projects  Repository Files
      description: Delete an existing file in repository
      parameters:
        - name: file_path
          in: query
          schema:
            type: string
          description: The path to new file. Ex. lib/class.rb
          example: <>
        - name: branch_name
          in: query
          schema:
            type: string
          description: The name of branch
          example: <>
        - name: commit_message
          in: query
          schema:
            type: string
          description: Commit Message
          example: <>
        - name: author_email
          in: query
          schema:
            type: string
          description: The email of the author
          example: <get>
        - name: author_name
          in: query
          schema:
            type: string
          description: The name of the author
          example: <get>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/merged_branches:
    delete:
      tags:
        - projects > {id} > repository
      summary: Delete Projects  Repository Merged Branches
      description: Delete projects  repository merged branches
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/raw_blobs/{sha}:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Raw Blobs Sha
      description: Get projects  repository raw blobs sha
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/repository/tree:
    get:
      tags:
        - projects > {id} > repository
      summary: Get Projects  Repository Tree
      description: Get a project repository tree
      parameters:
        - name: ref_name
          in: query
          schema:
            type: string
          description: >-
            The name of a repository branch or tag, if not given the default
            branch is used
          example: <>
        - name: path
          in: query
          schema:
            type: string
          description: The file path
          example: <get>
        - name: recursive
          in: query
          schema:
            type: string
          description: Used to get a recursive tree
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/runners:
    get:
      tags:
        - projects > {id} > runners
      summary: Get Projects  Runners
      description: Get runners available for project
      parameters:
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/runners/{runner_id}:
    delete:
      tags:
        - projects > {id} > runners
      summary: Delete Projects  Runners Runner
      description: Delete projects  runners runner
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: runner_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the runner
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/asana:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Asana
      description: Set asana service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/assembla:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Assembla
      description: Set assembla service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/bamboo:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Bamboo
      description: Set bamboo service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/bugzilla:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Bugzilla
      description: Set bugzilla service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/buildkite:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Buildkite
      description: Set buildkite service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/builds-email:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Builds Email
      description: Set builds-email service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/campfire:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Campfire
      description: Set campfire service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/custom-issue-tracker:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Custom Issue Tracker
      description: Set custom-issue-tracker service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/drone-ci:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Drone Ci
      description: Set drone-ci service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/emails-on-push:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Emails On Push
      description: Set emails-on-push service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/external-wiki:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services External Wiki
      description: Set external-wiki service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/flowdock:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Flowdock
      description: Set flowdock service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/gemnasium:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Gemnasium
      description: Set gemnasium service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/hipchat:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Hipchat
      description: Set hipchat service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/irker:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Irker
      description: Set irker service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/jira:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Jira
      description: Set jira service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/kubernetes:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Kubernetes
      description: Set kubernetes service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/mattermost:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Mattermost
      description: Set mattermost service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/mattermost-slash-commands:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Mattermost Slash Commands
      description: Set mattermost-slash-commands service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/mattermost_slash_commands/trigger:
    post:
      tags:
        - projects > {id} > services
      summary: Add Projects  Services Mattermost Slash Commands Trigger
      description: Post projects  services mattermost slash commands trigger
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/pipelines-email:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Pipelines Email
      description: Set pipelines-email service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/pivotaltracker:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Pivotaltracker
      description: Set pivotaltracker service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/pushover:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Pushover
      description: Set pushover service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/redmine:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Redmine
      description: Set redmine service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/slack:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Slack
      description: Set slack service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/slack-slash-commands:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Slack Slash Commands
      description: Set slack-slash-commands service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/slack_slash_commands/trigger:
    post:
      tags:
        - projects > {id} > services
      summary: Add Projects  Services Slack Slash Commands Trigger
      description: Post projects  services slack slash commands trigger
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/teamcity:
    put:
      tags:
        - projects > {id} > services
      summary: Put Projects  Services Teamcity
      description: Set teamcity service for project
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/services/{service_slug}:
    delete:
      tags:
        - projects > {id} > services
      summary: Delete Projects  Services Service Slug
      description: Delete projects  services service slug
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: service_slug
          in: path
          schema:
            type: string
          required: true
          description: The name of the service
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/share:
    post:
      tags:
        - projects > {id} > share
      summary: Add Projects  Share
      description: Share the project with a group
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/share/{group_id}:
    delete:
      tags:
        - projects > {id} > share
      summary: Delete Projects  Share Group
      description: Delete projects  share group
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: group_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{noteable_id}/notes:
    get:
      tags:
        - projects > {id} > snippets > {noteable id}/notes
      summary: Get Projects  Snippets Noteable  Notes
      description: Get a list of project +noteable+ notes
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{noteable_id}/notes/{note_id}:
    delete:
      tags:
        - projects > {id} > snippets > {noteable id}/notes
      summary: Delete Projects  Snippets Noteable  Notes Note
      description: Delete projects  snippets noteable  notes note
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: noteable_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the noteable
          example: <get>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}/award_emoji:
    get:
      tags:
        - projects > {id} > snippets > {snippet id} > award emoji
      summary: Get Projects  Snippets Snippet  Award Emoji
      description: Get projects  snippets snippet  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}:
    delete:
      tags:
        - projects > {id} > snippets > {snippet id} > award emoji
      summary: Delete Projects  Snippets Snippet  Award Emoji Award
      description: Delete projects  snippets snippet  award emoji award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji:
    get:
      tags:
        - >-
          projects > {id} > snippets > {snippet id} > notes/{note id}/award
          emoji
      summary: Get Projects  Snippets Snippet  Notes Note  Award Emoji
      description: Get projects  snippets snippet  notes note  award emoji
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      tags:
        - >-
          projects > {id} > snippets > {snippet id} > notes/{note id}/award
          emoji
      summary: Delete Projects  Snippets Snippet  Notes Note  Award Emoji Award
      description: Delete projects  snippets snippet  notes note  award emoji award
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
        - name: note_id
          in: path
          schema:
            type: string
          required: true
          description:
            content: ''
            type: text/plain
          example: <>
        - name: award_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of an award emoji
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}:
    delete:
      tags:
        - projects > {id} > snippets > {snippet id}
      summary: Delete Projects  Snippets Snippet
      description: Delete projects  snippets snippet
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets/{snippet_id}/raw:
    get:
      tags:
        - projects > {id} > snippets > {snippet id}
      summary: Get Projects  Snippets Snippet  Raw
      description: Get projects  snippets snippet  raw
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: snippet_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a project snippet
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/snippets:
    get:
      tags:
        - projects > {id} > snippets
      summary: Get Projects  Snippets
      description: Get all project snippets
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/triggers:
    get:
      tags:
        - projects > {id} > triggers
      summary: Get Projects  Triggers
      description: Get projects  triggers
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/triggers/{token}:
    delete:
      tags:
        - projects > {id} > triggers
      summary: Delete Projects  Triggers Token
      description: Delete projects  triggers token
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: The unique token of trigger
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/variables:
    get:
      tags:
        - projects > {id} > variables
      summary: Get Projects  Variables
      description: Get projects  variables
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/variables/{key}:
    delete:
      tags:
        - projects > {id} > variables
      summary: Delete Projects  Variables Key
      description: Delete an existing variable from a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key
          in: path
          schema:
            type: string
          required: true
          description: The key of the variable
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}:
    delete:
      tags:
        - projects > {id}
      summary: Delete Projects
      description: Remove a project
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/(ref/{ref}/)trigger/builds:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  (ref Ref )trigger Builds
      description: Post projects  (ref ref )trigger builds
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: ref
          in: path
          schema:
            type: string
          required: true
          description: The commit sha or name of a branch or tag
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/archive:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  Archive
      description: Post projects  archive
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/events:
    get:
      tags:
        - projects > {id}
      summary: Get Projects  Events
      description: Get events for a single project
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/notification_settings:
    get:
      tags:
        - projects > {id}
      summary: Get Projects  Notification Settings
      description: This feature was introduced in GitLab 8.12
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/pipeline:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  Pipeline
      description: This feature was introduced in GitLab 8.14
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/star:
    delete:
      tags:
        - projects > {id}
      summary: Delete Projects  Star
      description: Delete projects  star
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/statuses/{sha}:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  Statuses Sha
      description: Post projects  statuses sha
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: sha
          in: path
          schema:
            type: string
          required: true
          description: The commit, branch name, or tag name
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/unarchive:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  Unarchive
      description: Post projects  unarchive
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/uploads:
    post:
      tags:
        - projects > {id}
      summary: Add Projects  Uploads
      description: Post projects  uploads
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{id}/users:
    get:
      tags:
        - projects > {id}
      summary: Get Projects  Users
      description: Get the users list of a project
      parameters:
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects:
    get:
      tags:
        - projects
      summary: Get Projects
      description: Get a projects list for authenticated user
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/all:
    get:
      tags:
        - projects
      summary: Get Projects All
      description: Get all projects for admin user
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
        - name: statistics
          in: query
          schema:
            type: string
          description: Include project statistics
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/fork/{id}:
    post:
      tags:
        - projects
      summary: Add Projects Fork
      description: Fork new project for the current user or provided namespace.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/owned:
    get:
      tags:
        - projects
      summary: Get Projects Owned
      description: Get an owned projects list for authenticated user
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
        - name: statistics
          in: query
          schema:
            type: string
          description: Include project statistics
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/search/{query}:
    get:
      tags:
        - projects
      summary: Get Projects Search Query
      description: Search for projects the current user has access to
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: query
          in: path
          schema:
            type: string
          required: true
          description: The project name to be searched
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/starred:
    get:
      tags:
        - projects
      summary: Get Projects Starred
      description: Gets starred project for the authenticated user
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/user/{user_id}:
    post:
      tags:
        - projects
      summary: Add Projects User User
      description: Create new project for a specified user. Only available to admin users.
      requestBody:
        content: {}
      parameters:
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: The user ID of the access requester
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/visible:
    get:
      tags:
        - projects
      summary: Get Projects Visible
      description: Get a list of visible projects for authenticated user
      parameters:
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: archived
          in: query
          schema:
            type: string
          description: Limit by archived status
          example: <get>
        - name: visibility
          in: query
          schema:
            type: string
          description: Limit by visibility
          example: <>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: simple
          in: query
          schema:
            type: string
          description: Return only the ID, URL, name, and path of each project
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /runners:
    get:
      tags:
        - runners
      summary: Get Runners
      description: Get runners available for user
      parameters:
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /runners/all:
    get:
      tags:
        - runners
      summary: Get Runners All
      description: Get all runners - shared and specific
      parameters:
        - name: scope
          in: query
          schema:
            type: string
          description: The scope of builds to show
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /runners/{id}:
    delete:
      tags:
        - runners
      summary: Delete Runners
      description: Remove a runner
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sidekiq/compound_metrics:
    get:
      tags:
        - sidekiq
      summary: Get Sekiq Compound Metrics
      description: >-
        Get the Sidekiq Compound metrics. Includes queue, process, and job
        statistics
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sidekiq/job_stats:
    get:
      tags:
        - sidekiq
      summary: Get Sekiq Job Stats
      description: Get the Sidekiq job statistics
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sidekiq/process_metrics:
    get:
      tags:
        - sidekiq
      summary: Get Sekiq Process Metrics
      description: Get the Sidekiq process metrics
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sidekiq/queue_metrics:
    get:
      tags:
        - sidekiq
      summary: Get Sekiq Queue Metrics
      description: Get the Sidekiq queue metrics
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /snippets/{id}:
    delete:
      tags:
        - snippets > {id}
      summary: Delete Snippets
      description: This feature was introduced in GitLab 8.15.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /snippets/{id}/raw:
    get:
      tags:
        - snippets > {id}
      summary: Get Snippets  Raw
      description: This feature was introduced in GitLab 8.15.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /snippets:
    get:
      tags:
        - snippets
      summary: Get Snippets
      description: This feature was introduced in GitLab 8.15.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /snippets/public:
    get:
      tags:
        - snippets
      summary: Get Snippets Public
      description: This feature was introduced in GitLab 8.15.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/dockerfiles:
    get:
      tags:
        - templates > dockerfiles
      summary: Get Templates Dockerfiles
      description: This feature was introduced in GitLab 8.15.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/dockerfiles/{name}:
    get:
      tags:
        - templates > dockerfiles
      summary: Get Templates Dockerfiles Name
      description: This feature was introduced in GitLab 8.15.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/gitignores:
    get:
      tags:
        - templates > gitignores
      summary: Get Templates Gitignores
      description: This feature was introduced in GitLab 8.8.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/gitignores/{name}:
    get:
      tags:
        - templates > gitignores
      summary: Get Templates Gitignores Name
      description: This feature was introduced in GitLab 8.8.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/gitlab_ci_ymls:
    get:
      tags:
        - templates > gitlab ci ymls
      summary: Get Templates Gitlab Ci Ymls
      description: This feature was introduced in GitLab 8.9.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/gitlab_ci_ymls/{name}:
    get:
      tags:
        - templates > gitlab ci ymls
      summary: Get Templates Gitlab Ci Ymls Name
      description: This feature was introduced in GitLab 8.9.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/licenses:
    get:
      tags:
        - templates > licenses
      summary: Get Templates Licenses
      description: This feature was introduced in GitLab 8.7.
      parameters:
        - name: popular
          in: query
          schema:
            type: string
          description: If passed, returns only popular licenses
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /templates/licenses/{name}:
    get:
      tags:
        - templates > licenses
      summary: Get Templates Licenses Name
      description: This feature was introduced in GitLab 8.7.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /todos:
    delete:
      tags:
        - todos
      summary: Delete Todos
      description: Mark all todos as done
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /todos/{id}:
    delete:
      tags:
        - todos
      summary: Delete Todos
      description: Mark a todo as done
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/emails:
    get:
      tags:
        - user > emails
      summary: Get User Emails
      description: Get the currently authenticated user's email addresses
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/emails/{email_id}:
    delete:
      tags:
        - user > emails
      summary: Delete User Emails Email
      description: Delete an email address from the currently authenticated user
      parameters:
        - name: email_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the email
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/keys:
    get:
      tags:
        - user > keys
      summary: Get User Keys
      description: Get the currently authenticated user's SSH keys
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/keys/{key_id}:
    delete:
      tags:
        - user > keys
      summary: Delete User Keys Key
      description: Delete an SSH key from the currently authenticated user
      parameters:
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user:
    get:
      tags:
        - user
      summary: Get User
      description: Get the currently authenticated user
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/emails:
    get:
      tags:
        - users > {id} > emails
      summary: Get Users  Emails
      description: Get the emails addresses of a specified user. Available only for admins.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/emails/{email_id}:
    delete:
      tags:
        - users > {id} > emails
      summary: Delete Users  Emails Email
      description: Delete an email address of a specified user. Available only for admins.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: email_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the email
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/keys:
    get:
      tags:
        - users > {id} > keys
      summary: Get Users  Keys
      description: Get the SSH keys of a specified user. Available only for admins.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/keys/{key_id}:
    delete:
      tags:
        - users > {id} > keys
      summary: Delete Users  Keys Key
      description: >-
        Delete an existing SSH key from a specified user. Available only for
        admins.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
        - name: key_id
          in: path
          schema:
            type: string
          required: true
          description: The ID of the deploy key
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}:
    delete:
      tags:
        - users > {id}
      summary: Delete Users
      description: Delete a user. Available only for admins.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/block:
    put:
      tags:
        - users > {id}
      summary: Put Users  Block
      description: Block a user. Available only for admins.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/events:
    get:
      tags:
        - users > {id}
      summary: Get Users  Events
      description: This feature was introduced in GitLab 8.13.
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}/unblock:
    put:
      tags:
        - users > {id}
      summary: Put Users  Unblock
      description: Unblock a user. Available only for admins.
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users:
    get:
      tags:
        - users
      summary: Get Users
      description: Get the list of users
      parameters:
        - name: username
          in: query
          schema:
            type: string
          description: Get a single user with a specific username
          example: <get>
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: active
          in: query
          schema:
            type: string
          description: Filters only active users
          example: <get>
        - name: external
          in: query
          schema:
            type: string
          description: Filters only external users
          example: <get>
        - name: blocked
          in: query
          schema:
            type: string
          description: Filters only blocked users
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/dockerfiles:
    get:
      tags:
        - v3 > dockerfiles
      summary: Get the list of the available template
      description: >-
        This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/dockerfiles/{name}:
    get:
      tags:
        - v3 > dockerfiles
      summary: Get the text for a specific template present in local filesystem
      description: >-
        This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/gitignores:
    get:
      tags:
        - v3 > gitignores
      summary: Get the list of the available template
      description: >-
        This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/gitignores/{name}:
    get:
      tags:
        - v3 > gitignores
      summary: Get the text for a specific template present in local filesystem
      description: >-
        This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/gitlab_ci_ymls:
    get:
      tags:
        - v3 > gitlab ci ymls
      summary: Get the list of the available template
      description: >-
        This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/gitlab_ci_ymls/{name}:
    get:
      tags:
        - v3 > gitlab ci ymls
      summary: Get the text for a specific template present in local filesystem
      description: >-
        This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
          description: The name of the template
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/application/settings:
    get:
      tags:
        - v3
      summary: Get the current application settings
      description: Get the current application settings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/ci/lint:
    post:
      tags:
        - v3
      summary: Validation of .gitlab-ci.yml content
      description: Validation of .gitlab-ci.yml content
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/deploy_keys:
    get:
      tags:
        - v3
      summary: get V3Deploy Keys
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /application/settings:
    get:
      tags:
        - General
      summary: Get Application Settings
      description: Get the current application settings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /ci/lint:
    post:
      tags:
        - General
      summary: Add Ci Lint
      description: Validation of .gitlab-ci.yml content
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /deploy_keys:
    get:
      tags:
        - General
      summary: Get Deploy Keys
      description: Get deploy keys
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /issues:
    get:
      tags:
        - General
      summary: Get Issues
      description: Get currently authenticated user's issues
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Return opened, closed, or all issues
          example: <get>
        - name: labels
          in: query
          schema:
            type: string
          description: Comma-separated list of label names
          example: <get>
        - name: milestone
          in: query
          schema:
            type: string
          description: Return issues for a specific milestone
          example: <object>
        - name: order_by
          in: query
          schema:
            type: string
          description: Order by name or path
          example: <>
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by asc (ascending) or desc (descending)
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /keys/{id}:
    get:
      tags:
        - General
      summary: Get Keys
      description: Get single ssh key by id. Only available to admin users
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The ID of a group
          example: <get>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /namespaces:
    get:
      tags:
        - General
      summary: Get Namespaces
      description: Get a namespaces list
      parameters:
        - name: search
          in: query
          schema:
            type: string
          description: Search for a specific group
          example: <>
        - name: page
          in: query
          schema:
            type: string
          description: Current page number
          example: <>
        - name: per_page
          in: query
          schema:
            type: string
          description: Number of items per page
          example: <>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /notification_settings:
    get:
      tags:
        - General
      summary: Get Notification Settings
      description: This feature was introduced in GitLab 8.12
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /session:
    post:
      tags:
        - General
      summary: Add Session
      description: Login to get token
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /version:
    get:
      tags:
        - General
      summary: Get Version
      description: This feature was introduced in GitLab 8.13.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
