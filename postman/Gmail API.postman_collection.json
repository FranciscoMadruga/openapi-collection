{
	"info": {
		"_postman_id": "0d073c40-6ad8-43d0-8baf-8ee3606819e0",
		"name": "Gmail API",
		"description": "The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.\n\nContact Support:\n Name: Google",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27825666",
		"_collection_link": "https://www.postman.com/api-evangelist/workspace/google/collection/35240-0d073c40-6ad8-43d0-8baf-8ee3606819e0?action=share&creator=27825666&source=collection_link"
	},
	"item": [
		{
			"name": "gmail/v1/users/{user Id}",
			"item": [
				{
					"name": "drafts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "gmail.users.drafts.delete",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the draft to delete."
												}
											]
										},
										"description": "Immediately and permanently deletes the specified draft. Does not simply trash it."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"drafts",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "gmail.users.drafts.get",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?format=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts",
												":id"
											],
											"query": [
												{
													"key": "format",
													"value": "<string>",
													"description": "The format to return the draft in."
												},
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the draft to retrieve."
												}
											]
										},
										"description": "Gets the specified draft."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?format=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"drafts",
														":id"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<string>\",\n \"message\": {\n  \"historyId\": \"culpa\",\n  \"id\": \"id magna\",\n  \"internalDate\": \"Lorem nisi enim id\",\n  \"labelIds\": [\n   \"occaec\",\n   \"exercitation sint nulla minim anim\"\n  ],\n  \"payload\": {\n   \"body\": {\n    \"attachmentId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"data\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"size\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"filename\": \"cupidatat exercit\",\n   \"headers\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"mimeType\": \"sit do\",\n   \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n   \"parts\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    }\n   ]\n  },\n  \"raw\": \"exercitation et esse cillum nostrud\",\n  \"sizeEstimate\": -633773,\n  \"snippet\": \"enim incididunt commodo\",\n  \"threadId\": \"nostrud cillum ea Lorem\"\n }\n}"
										}
									]
								},
								{
									"name": "gmail.users.drafts.update",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "message/cpim"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"incididunt eu\",\n        \"id\": \"pro\",\n        \"internalDate\": \"dolor\",\n        \"labelIds\": [\n            \"est sed\",\n            \"sint commodo voluptate enim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"aute\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"quis ut consectetur\",\n            \"partId\": \"fugiat exercitation esse et officia\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"ipsum Lorem irure\",\n        \"sizeEstimate\": 55613833,\n        \"snippet\": \"exercitation in eiusmod\",\n        \"threadId\": \"labore dolore\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the draft to update."
												}
											]
										},
										"description": "Replaces a draft's content."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"culpa\",\n        \"id\": \"id magna\",\n        \"internalDate\": \"Lorem nisi enim id\",\n        \"labelIds\": [\n            \"occaec\",\n            \"exercitation sint nulla minim anim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"cupidatat exercit\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"sit do\",\n            \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"exercitation et esse cillum nostrud\",\n        \"sizeEstimate\": -633773,\n        \"snippet\": \"enim incididunt commodo\",\n        \"threadId\": \"nostrud cillum ea Lorem\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"drafts",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<string>\",\n \"message\": {\n  \"historyId\": \"culpa\",\n  \"id\": \"id magna\",\n  \"internalDate\": \"Lorem nisi enim id\",\n  \"labelIds\": [\n   \"occaec\",\n   \"exercitation sint nulla minim anim\"\n  ],\n  \"payload\": {\n   \"body\": {\n    \"attachmentId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"data\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"size\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"filename\": \"cupidatat exercit\",\n   \"headers\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"mimeType\": \"sit do\",\n   \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n   \"parts\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    }\n   ]\n  },\n  \"raw\": \"exercitation et esse cillum nostrud\",\n  \"sizeEstimate\": -633773,\n  \"snippet\": \"enim incididunt commodo\",\n  \"threadId\": \"nostrud cillum ea Lorem\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "gmail.users.drafts.list",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts?includeSpamTrash=<boolean>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"drafts"
									],
									"query": [
										{
											"key": "includeSpamTrash",
											"value": "<boolean>",
											"description": "Include drafts from `SPAM` and `TRASH` in the results."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Maximum number of drafts to return."
										},
										{
											"key": "pageToken",
											"value": "<string>",
											"description": "Page token to retrieve a specific page of results in the list."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Only return draft messages matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`."
										},
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Lists the drafts in the user's mailbox."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts?includeSpamTrash=<boolean>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts"
											],
											"query": [
												{
													"key": "includeSpamTrash",
													"value": "<boolean>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												},
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"drafts\": [\n  {\n   \"id\": \"veniam Duis exercitati\",\n   \"message\": {\n    \"historyId\": \"dolore sint Excepteur ipsum reprehenderit\",\n    \"id\": \"minim et dolore\",\n    \"internalDate\": \"proident Excepteur\",\n    \"labelIds\": [\n     \"irure dolore fugiat aliquip eiusmod\",\n     \"do sint laboris occaecat\"\n    ],\n    \"payload\": {\n     \"body\": {\n      \"attachmentId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"filename\": \"laborum\",\n     \"headers\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"mimeType\": \"labore Excepteur\",\n     \"partId\": \"anim eu tempor velit\",\n     \"parts\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n      }\n     ]\n    },\n    \"raw\": \"aute qui\",\n    \"sizeEstimate\": -56161869,\n    \"snippet\": \"consectetur occaecat irure elit\",\n    \"threadId\": \"ex eu proident in magna\"\n   }\n  },\n  {\n   \"id\": \"elit Duis dolore\",\n   \"message\": {\n    \"historyId\": \"ut\",\n    \"id\": \"deserunt laborum\",\n    \"internalDate\": \"mollit minim\",\n    \"labelIds\": [\n     \"cillum laboris\",\n     \"do velit magna aute laboris\"\n    ],\n    \"payload\": {\n     \"body\": {\n      \"attachmentId\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     \"filename\": \"aute Lorem sed irure\",\n     \"headers\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"mimeType\": \"ullamco i\",\n     \"partId\": \"nisi laboris sunt\",\n     \"parts\": [\n      {\n       \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n      },\n      {\n       \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n      }\n     ]\n    },\n    \"raw\": \"\",\n    \"sizeEstimate\": -54111262,\n    \"snippet\": \"id quis in do\",\n    \"threadId\": \"pariatur ut Excep\"\n   }\n  }\n ],\n \"nextPageToken\": \"in aliquip culpa\",\n \"resultSizeEstimate\": 99349769\n}"
								}
							]
						},
						{
							"name": "gmail.users.drafts.create",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "message/cpim"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"incididunt eu\",\n        \"id\": \"pro\",\n        \"internalDate\": \"dolor\",\n        \"labelIds\": [\n            \"est sed\",\n            \"sint commodo voluptate enim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"aute\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"quis ut consectetur\",\n            \"partId\": \"fugiat exercitation esse et officia\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"ipsum Lorem irure\",\n        \"sizeEstimate\": 55613833,\n        \"snippet\": \"exercitation in eiusmod\",\n        \"threadId\": \"labore dolore\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"drafts"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Creates a new draft with the `DRAFT` label."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"culpa\",\n        \"id\": \"id magna\",\n        \"internalDate\": \"Lorem nisi enim id\",\n        \"labelIds\": [\n            \"occaec\",\n            \"exercitation sint nulla minim anim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"cupidatat exercit\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"sit do\",\n            \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"exercitation et esse cillum nostrud\",\n        \"sizeEstimate\": -633773,\n        \"snippet\": \"enim incididunt commodo\",\n        \"threadId\": \"nostrud cillum ea Lorem\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<string>\",\n \"message\": {\n  \"historyId\": \"culpa\",\n  \"id\": \"id magna\",\n  \"internalDate\": \"Lorem nisi enim id\",\n  \"labelIds\": [\n   \"occaec\",\n   \"exercitation sint nulla minim anim\"\n  ],\n  \"payload\": {\n   \"body\": {\n    \"attachmentId\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"data\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"size\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"filename\": \"cupidatat exercit\",\n   \"headers\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"mimeType\": \"sit do\",\n   \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n   \"parts\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n    }\n   ]\n  },\n  \"raw\": \"exercitation et esse cillum nostrud\",\n  \"sizeEstimate\": -633773,\n  \"snippet\": \"enim incididunt commodo\",\n  \"threadId\": \"nostrud cillum ea Lorem\"\n }\n}"
								}
							]
						},
						{
							"name": "gmail.users.drafts.send",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "message/cpim"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"incididunt eu\",\n        \"id\": \"pro\",\n        \"internalDate\": \"dolor\",\n        \"labelIds\": [\n            \"est sed\",\n            \"sint commodo voluptate enim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"aute\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"quis ut consectetur\",\n            \"partId\": \"fugiat exercitation esse et officia\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"ipsum Lorem irure\",\n        \"sizeEstimate\": 55613833,\n        \"snippet\": \"exercitation in eiusmod\",\n        \"threadId\": \"labore dolore\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/send?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"drafts",
										"send"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Sends the specified, existing draft to the recipients in the `To`, `Cc`, and `Bcc` headers."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"message\": {\n        \"historyId\": \"culpa\",\n        \"id\": \"id magna\",\n        \"internalDate\": \"Lorem nisi enim id\",\n        \"labelIds\": [\n            \"occaec\",\n            \"exercitation sint nulla minim anim\"\n        ],\n        \"payload\": {\n            \"body\": {\n                \"attachmentId\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"data\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"size\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"filename\": \"cupidatat exercit\",\n            \"headers\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"mimeType\": \"sit do\",\n            \"partId\": \"nulla aliqua ipsum tempor consectetur\",\n            \"parts\": [\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                },\n                {\n                    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n                }\n            ]\n        },\n        \"raw\": \"exercitation et esse cillum nostrud\",\n        \"sizeEstimate\": -633773,\n        \"snippet\": \"enim incididunt commodo\",\n        \"threadId\": \"nostrud cillum ea Lorem\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/drafts/send?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"drafts",
												"send"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"historyId\": \"cupidatat \",\n \"id\": \"sit aliquip minim Excepteur\",\n \"internalDate\": \"nostrud consectetur\",\n \"labelIds\": [\n  \"veniam magna sed reprehenderit\",\n  \"nulla do sunt\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"mollit magna nisi\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"mollit laborum \",\n  \"partId\": \"quis laboris ea id\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"tempor id ut consequat\",\n \"sizeEstimate\": 35793331,\n \"snippet\": \"eu cillum fugiat Ut\",\n \"threadId\": \"proident te\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "labels",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "gmail.users.labels.delete",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the label to delete."
												}
											]
										},
										"description": "Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"labels",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "gmail.users.labels.get",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the label to retrieve."
												}
											]
										},
										"description": "Gets the specified label."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"labels",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"color\": {\n  \"backgroundColor\": \"sit\",\n  \"textColor\": \"tempor aliqua\"\n },\n \"id\": \"<string>\",\n \"labelListVisibility\": \"<string>\",\n \"messageListVisibility\": \"<string>\",\n \"messagesTotal\": \"<integer>\",\n \"messagesUnread\": \"<integer>\",\n \"name\": \"<string>\",\n \"threadsTotal\": \"<integer>\",\n \"threadsUnread\": \"<integer>\",\n \"type\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.labels.patch",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"aliquip fugiat occaecat\",\n        \"textColor\": \"nulla laboris sed\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the label to update."
												}
											]
										},
										"description": "Patch the specified label."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"sit\",\n        \"textColor\": \"tempor aliqua\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"labels",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"color\": {\n  \"backgroundColor\": \"sit\",\n  \"textColor\": \"tempor aliqua\"\n },\n \"id\": \"<string>\",\n \"labelListVisibility\": \"<string>\",\n \"messageListVisibility\": \"<string>\",\n \"messagesTotal\": \"<integer>\",\n \"messagesUnread\": \"<integer>\",\n \"name\": \"<string>\",\n \"threadsTotal\": \"<integer>\",\n \"threadsUnread\": \"<integer>\",\n \"type\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.labels.update",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"aliquip fugiat occaecat\",\n        \"textColor\": \"nulla laboris sed\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the label to update."
												}
											]
										},
										"description": "Updates the specified label."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"sit\",\n        \"textColor\": \"tempor aliqua\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"labels",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"color\": {\n  \"backgroundColor\": \"sit\",\n  \"textColor\": \"tempor aliqua\"\n },\n \"id\": \"<string>\",\n \"labelListVisibility\": \"<string>\",\n \"messageListVisibility\": \"<string>\",\n \"messagesTotal\": \"<integer>\",\n \"messagesUnread\": \"<integer>\",\n \"name\": \"<string>\",\n \"threadsTotal\": \"<integer>\",\n \"threadsUnread\": \"<integer>\",\n \"type\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "gmail.users.labels.list",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"labels"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Lists all labels in the user's mailbox."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"labels\": [\n  {\n   \"color\": {\n    \"backgroundColor\": \"proident ex\",\n    \"textColor\": \"dolor consequat\"\n   },\n   \"id\": \"mollit nulla\",\n   \"labelListVisibility\": \"labelShow\",\n   \"messageListVisibility\": \"hide\",\n   \"messagesTotal\": -23275177,\n   \"messagesUnread\": -17621138,\n   \"name\": \"aliquip in non adipisicing eiusmod\",\n   \"threadsTotal\": -88136780,\n   \"threadsUnread\": 7144716,\n   \"type\": \"user\"\n  },\n  {\n   \"color\": {\n    \"backgroundColor\": \"aliqua fugiat labore Ut\",\n    \"textColor\": \"est cillum voluptate culpa\"\n   },\n   \"id\": \"incididunt laborum nostrud\",\n   \"labelListVisibility\": \"labelHide\",\n   \"messageListVisibility\": \"show\",\n   \"messagesTotal\": -50116616,\n   \"messagesUnread\": 54809636,\n   \"name\": \"in Ut\",\n   \"threadsTotal\": 82213471,\n   \"threadsUnread\": 95204107,\n   \"type\": \"user\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "gmail.users.labels.create",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"aliquip fugiat occaecat\",\n        \"textColor\": \"nulla laboris sed\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"labels"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Creates a new label."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"color\": {\n        \"backgroundColor\": \"sit\",\n        \"textColor\": \"tempor aliqua\"\n    },\n    \"id\": \"<string>\",\n    \"labelListVisibility\": \"<string>\",\n    \"messageListVisibility\": \"<string>\",\n    \"messagesTotal\": \"<integer>\",\n    \"messagesUnread\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"threadsTotal\": \"<integer>\",\n    \"threadsUnread\": \"<integer>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/labels?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"labels"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"color\": {\n  \"backgroundColor\": \"sit\",\n  \"textColor\": \"tempor aliqua\"\n },\n \"id\": \"<string>\",\n \"labelListVisibility\": \"<string>\",\n \"messageListVisibility\": \"<string>\",\n \"messagesTotal\": \"<integer>\",\n \"messagesUnread\": \"<integer>\",\n \"name\": \"<string>\",\n \"threadsTotal\": \"<integer>\",\n \"threadsUnread\": \"<integer>\",\n \"type\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "messages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "gmail.users.messages.delete",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the message to delete."
												}
											]
										},
										"description": "Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer `messages.trash` instead."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"messages",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "gmail.users.messages.get",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id?format=<string>&metadataHeaders=<string>&metadataHeaders=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":id"
											],
											"query": [
												{
													"key": "format",
													"value": "<string>",
													"description": "The format to return the message in."
												},
												{
													"key": "metadataHeaders",
													"value": "<string>",
													"description": "When given and format is `METADATA`, only include headers specified."
												},
												{
													"key": "metadataHeaders",
													"value": "<string>",
													"description": "When given and format is `METADATA`, only include headers specified."
												},
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the message to retrieve."
												}
											]
										},
										"description": "Gets the specified message."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id?format=<string>&metadataHeaders=<string>&metadataHeaders=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"messages",
														":id"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "metadataHeaders",
															"value": "<string>"
														},
														{
															"key": "metadataHeaders",
															"value": "<string>"
														},
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.messages.modify",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/modify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":id",
												"modify"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the message to modify."
												}
											]
										},
										"description": "Modifies the labels on the specified message."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/modify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"messages",
														":id",
														"modify"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.messages.trash",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/trash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":id",
												"trash"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the message to Trash."
												}
											]
										},
										"description": "Moves the specified message to the trash."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/trash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"messages",
														":id",
														"trash"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.messages.untrash",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/untrash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":id",
												"untrash"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the message to remove from Trash."
												}
											]
										},
										"description": "Removes the specified message from the trash."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:id/untrash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"messages",
														":id",
														"untrash"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "gmail.users.messages.list",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages?includeSpamTrash=<boolean>&labelIds=<string>&labelIds=<string>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages"
									],
									"query": [
										{
											"key": "includeSpamTrash",
											"value": "<boolean>",
											"description": "Include messages from `SPAM` and `TRASH` in the results."
										},
										{
											"key": "labelIds",
											"value": "<string>",
											"description": "Only return messages with labels that match all of the specified label IDs."
										},
										{
											"key": "labelIds",
											"value": "<string>",
											"description": "Only return messages with labels that match all of the specified label IDs."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Maximum number of messages to return."
										},
										{
											"key": "pageToken",
											"value": "<string>",
											"description": "Page token to retrieve a specific page of results in the list."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`. Parameter cannot be used when accessing the api using the gmail.metadata scope."
										},
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Lists the messages in the user's mailbox."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages?includeSpamTrash=<boolean>&labelIds=<string>&labelIds=<string>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages"
											],
											"query": [
												{
													"key": "includeSpamTrash",
													"value": "<boolean>"
												},
												{
													"key": "labelIds",
													"value": "<string>"
												},
												{
													"key": "labelIds",
													"value": "<string>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												},
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"messages\": [\n  {\n   \"historyId\": \"aliqua elit\",\n   \"id\": \"in nisi\",\n   \"internalDate\": \"aliquip laboris Duis consectetur\",\n   \"labelIds\": [\n    \"l\",\n    \"adi\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"sed incididunt fugiat mollit\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"Excepteur qui consectetur irure\",\n    \"partId\": \"conseq\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"dolore occaecat eu sed\",\n   \"sizeEstimate\": -81125746,\n   \"snippet\": \"elit incididunt pariatur\",\n   \"threadId\": \"ut proident ea velit id\"\n  },\n  {\n   \"historyId\": \"veniam dolore ea ut reprehenderit\",\n   \"id\": \"reprehenderit Duis eu\",\n   \"internalDate\": \"adipisicing ex est ut\",\n   \"labelIds\": [\n    \"incididunt veniam\",\n    \"cupidatat esse aute magna\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"eli\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"ut do aliquip tempor\",\n    \"partId\": \"proident pariatur occaecat velit\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"sunt exercitation in\",\n   \"sizeEstimate\": -16598599,\n   \"snippet\": \"dolor dolore\",\n   \"threadId\": \"sed sit enim\"\n  }\n ],\n \"nextPageToken\": \"velit cupidatat eu ullamco Lorem\",\n \"resultSizeEstimate\": -51081423\n}"
								}
							]
						},
						{
							"name": "gmail.users.messages.insert",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "message/cpim"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"laborum cupidatat laboris dolore commodo\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"pariatur consectetur culpa\",\n        \"partId\": \"nisi laboris cillum enim\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages?deleted=<boolean>&internalDateSource=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages"
									],
									"query": [
										{
											"key": "deleted",
											"value": "<boolean>",
											"description": "Mark the email as permanently deleted (not TRASH) and only visible in Google Vault to a Vault administrator. Only used for G Suite accounts."
										},
										{
											"key": "internalDateSource",
											"value": "<string>",
											"description": "Source for Gmail's internal date of the message."
										},
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Directly inserts a message into only this user's mailbox similar to `IMAP APPEND`, bypassing most scanning and classification. Does not send a message."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"aliqua exercitation dolore ullam\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"est commodo\",\n        \"partId\": \"esse velit in\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages?deleted=<boolean>&internalDateSource=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages"
											],
											"query": [
												{
													"key": "deleted",
													"value": "<boolean>"
												},
												{
													"key": "internalDateSource",
													"value": "<string>"
												},
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "gmail.users.messages.batch Delete",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/batchDelete?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages",
										"batchDelete"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Deletes many messages by message ID. Provides no guarantees that messages were not already deleted or even existed at all."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/batchDelete?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												"batchDelete"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "gmail.users.messages.batch Modify",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/batchModify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages",
										"batchModify"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Modifies the labels on the specified messages."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/batchModify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												"batchModify"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "gmail.users.messages.import",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "message/cpim"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"laborum cupidatat laboris dolore commodo\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"pariatur consectetur culpa\",\n        \"partId\": \"nisi laboris cillum enim\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/import?deleted=<boolean>&internalDateSource=<string>&neverMarkSpam=<boolean>&processForCalendar=<boolean>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages",
										"import"
									],
									"query": [
										{
											"key": "deleted",
											"value": "<boolean>",
											"description": "Mark the email as permanently deleted (not TRASH) and only visible in Google Vault to a Vault administrator. Only used for G Suite accounts."
										},
										{
											"key": "internalDateSource",
											"value": "<string>",
											"description": "Source for Gmail's internal date of the message."
										},
										{
											"key": "neverMarkSpam",
											"value": "<boolean>",
											"description": "Ignore the Gmail spam classifier decision and never mark this email as SPAM in the mailbox."
										},
										{
											"key": "processForCalendar",
											"value": "<boolean>",
											"description": "Process calendar invites in the email and add any extracted meetings to the Google Calendar for this user."
										},
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Imports a message into only this user's mailbox, with standard email delivery scanning and classification similar to receiving via SMTP. Does not send a message. Note: This function doesn't trigger forwarding rules or filters set up by the user."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"aliqua exercitation dolore ullam\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"est commodo\",\n        \"partId\": \"esse velit in\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/import?deleted=<boolean>&internalDateSource=<string>&neverMarkSpam=<boolean>&processForCalendar=<boolean>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												"import"
											],
											"query": [
												{
													"key": "deleted",
													"value": "<boolean>"
												},
												{
													"key": "internalDateSource",
													"value": "<string>"
												},
												{
													"key": "neverMarkSpam",
													"value": "<boolean>"
												},
												{
													"key": "processForCalendar",
													"value": "<boolean>"
												},
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "gmail.users.messages.send",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "message/cpim"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"laborum cupidatat laboris dolore commodo\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"pariatur consectetur culpa\",\n        \"partId\": \"nisi laboris cillum enim\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/send?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages",
										"send"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Sends the specified message to the recipients in the `To`, `Cc`, and `Bcc` headers."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internalDate\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"payload\": {\n        \"body\": {\n            \"attachmentId\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"data\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"size\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"filename\": \"aliqua exercitation dolore ullam\",\n        \"headers\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"mimeType\": \"est commodo\",\n        \"partId\": \"esse velit in\",\n        \"parts\": [\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            },\n            {\n                \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n            }\n        ]\n    },\n    \"raw\": \"<string>\",\n    \"sizeEstimate\": \"<integer>\",\n    \"snippet\": \"<string>\",\n    \"threadId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/send?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												"send"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"historyId\": \"<string>\",\n \"id\": \"<string>\",\n \"internalDate\": \"<string>\",\n \"labelIds\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"payload\": {\n  \"body\": {\n   \"attachmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"data\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"size\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"filename\": \"aliqua exercitation dolore ullam\",\n  \"headers\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"mimeType\": \"est commodo\",\n  \"partId\": \"esse velit in\",\n  \"parts\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n   }\n  ]\n },\n \"raw\": \"<string>\",\n \"sizeEstimate\": \"<integer>\",\n \"snippet\": \"<string>\",\n \"threadId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "gmail.users.messages.attachments.get",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:messageId/attachments/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"messages",
										":messageId",
										"attachments",
										":id"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										},
										{
											"key": "messageId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the message containing the attachment."
										},
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the attachment."
										}
									]
								},
								"description": "Gets the specified message attachment."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/messages/:messageId/attachments/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"messages",
												":messageId",
												"attachments",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												},
												{
													"key": "messageId"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"attachmentId\": \"et Lorem proident anim\",\n \"data\": \"labore consectetur\",\n \"size\": 24857801\n}"
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "auto Forwarding",
							"item": [
								{
									"name": "gmail.users.settings.get Auto Forwarding",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/autoForwarding?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"autoForwarding"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Gets the auto-forwarding setting for the specified account."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/autoForwarding?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"autoForwarding"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"disposition\": \"archive\",\n \"emailAddress\": \"sed irure eu\",\n \"enabled\": false\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.update Auto Forwarding",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"disposition\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/autoForwarding?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"autoForwarding"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Updates the auto-forwarding setting for the specified account. A verified forwarding address must be specified when auto-forwarding is enabled. This method is only available to service account clients that have been delegated domain-wide authority."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"disposition\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/autoForwarding?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"autoForwarding"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"disposition\": \"<string>\",\n \"emailAddress\": \"<string>\",\n \"enabled\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delegates",
							"item": [
								{
									"name": "{delegate Email}",
									"item": [
										{
											"name": "gmail.users.settings.delegates.delete",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates/:delegateEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"delegates",
														":delegateEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "delegateEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The email address of the user to be removed as a delegate."
														}
													]
												},
												"description": "Removes the specified delegate (which can be of any verification status), and revokes any verification that may have been required for using it. Note that a delegate user must be referred to by their primary email address, and not an email alias. This method is only available to service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates/:delegateEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"delegates",
																":delegateEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "delegateEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "gmail.users.settings.delegates.get",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates/:delegateEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"delegates",
														":delegateEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "delegateEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The email address of the user whose delegate relationship is to be retrieved."
														}
													]
												},
												"description": "Gets the specified delegate. Note that a delegate user must be referred to by their primary email address, and not an email alias. This method is only available to service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates/:delegateEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"delegates",
																":delegateEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "delegateEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"delegateEmail\": \"<string>\",\n \"verificationStatus\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "gmail.users.settings.delegates.list",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"delegates"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Lists the delegates for the specified account. This method is only available to service account clients that have been delegated domain-wide authority."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"delegates"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"delegates\": [\n  {\n   \"delegateEmail\": \"consectetur tempor in id\",\n   \"verificationStatus\": \"rejected\"\n  },\n  {\n   \"delegateEmail\": \"veniam Lorem in et\",\n   \"verificationStatus\": \"accepted\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.delegates.create",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"delegateEmail\": \"<string>\",\n    \"verificationStatus\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"delegates"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Adds a delegate with its verification status set directly to `accepted`, without sending any verification email. The delegate user must be a member of the same G Suite organization as the delegator user. Gmail imposes limitations on the number of delegates and delegators each user in a G Suite organization can have. These limits depend on your organization, but in general each user can have up to 25 delegates and up to 10 delegators. Note that a delegate user must be referred to by their primary email address, and not an email alias. Also note that when a new delegate is created, there may be up to a one minute delay before the new delegate is available for use. This method is only available to service account clients that have been delegated domain-wide authority."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"delegateEmail\": \"<string>\",\n    \"verificationStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/delegates?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"delegates"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"delegateEmail\": \"<string>\",\n \"verificationStatus\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "filters",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "gmail.users.settings.filters.delete",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"filters",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the filter to be deleted."
														}
													]
												},
												"description": "Deletes a filter."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"filters",
																":id"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "gmail.users.settings.filters.get",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"filters",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the filter to be fetched."
														}
													]
												},
												"description": "Gets a filter."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"filters",
																":id"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"action\": {\n  \"addLabelIds\": [\n   \"ipsum sunt cillum dolore nostrud\",\n   \"fugiat aute dolor quis\"\n  ],\n  \"forward\": \"cillum Duis l\",\n  \"removeLabelIds\": [\n   \"aliqua non voluptate\",\n   \"sunt occaecat deserunt\"\n  ]\n },\n \"criteria\": {\n  \"excludeChats\": false,\n  \"from\": \"Duis\",\n  \"hasAttachment\": false,\n  \"negatedQuery\": \"ullamco ipsum aliquip amet incididunt\",\n  \"query\": \"qui et labore eu\",\n  \"size\": 18871642,\n  \"sizeComparison\": \"larger\",\n  \"subject\": \"sint nos\",\n  \"to\": \"fugiat nisi\"\n },\n \"id\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "gmail.users.settings.filters.list",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"filters"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Lists the message filters of a Gmail user."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"filters"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"filter\": [\n  {\n   \"action\": {\n    \"addLabelIds\": [\n     \"mollit fugiat in\",\n     \"in labore irure eiusmod culpa\"\n    ],\n    \"forward\": \"qui aute Lorem cupidatat\",\n    \"removeLabelIds\": [\n     \"do ullamco eiusmod\",\n     \"enim labore\"\n    ]\n   },\n   \"criteria\": {\n    \"excludeChats\": true,\n    \"from\": \"aliquip et\",\n    \"hasAttachment\": true,\n    \"negatedQuery\": \"laborum id ullamco sit\",\n    \"query\": \"ad amet exercitation ex\",\n    \"size\": -92388150,\n    \"sizeComparison\": \"smaller\",\n    \"subject\": \"amet minim ipsum\",\n    \"to\": \"esse Lorem\"\n   },\n   \"id\": \"sint Excepteur\"\n  },\n  {\n   \"action\": {\n    \"addLabelIds\": [\n     \"mollit ea esse\",\n     \"laborum\"\n    ],\n    \"forward\": \"nisi\",\n    \"removeLabelIds\": [\n     \"quis do minim dolor culpa\",\n     \"mollit eu culpa\"\n    ]\n   },\n   \"criteria\": {\n    \"excludeChats\": true,\n    \"from\": \"non in cupidatat culpa irure\",\n    \"hasAttachment\": true,\n    \"negatedQuery\": \"est commodo sed amet\",\n    \"query\": \"commodo\",\n    \"size\": 67292189,\n    \"sizeComparison\": \"smaller\",\n    \"subject\": \"ea Duis velit\",\n    \"to\": \"velit ea dolor tempor\"\n   },\n   \"id\": \"labore Duis eiusmod\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.filters.create",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": {\n        \"addLabelIds\": [\n            \"cillum velit consequat\",\n            \"in deserunt\"\n        ],\n        \"forward\": \"labore occaecat mag\",\n        \"removeLabelIds\": [\n            \"in cupida\",\n            \"dolore in aliqua\"\n        ]\n    },\n    \"criteria\": {\n        \"excludeChats\": true,\n        \"from\": \"sint\",\n        \"hasAttachment\": true,\n        \"negatedQuery\": \"dolore elit\",\n        \"query\": \"officia reprehenderit Lorem\",\n        \"size\": -27945833,\n        \"sizeComparison\": \"larger\",\n        \"subject\": \"velit officia\",\n        \"to\": \"in laborum\"\n    },\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"filters"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Creates a filter. Note: you can only create a maximum of 1,000 filters."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"addLabelIds\": [\n            \"ipsum sunt cillum dolore nostrud\",\n            \"fugiat aute dolor quis\"\n        ],\n        \"forward\": \"cillum Duis l\",\n        \"removeLabelIds\": [\n            \"aliqua non voluptate\",\n            \"sunt occaecat deserunt\"\n        ]\n    },\n    \"criteria\": {\n        \"excludeChats\": false,\n        \"from\": \"Duis\",\n        \"hasAttachment\": false,\n        \"negatedQuery\": \"ullamco ipsum aliquip amet incididunt\",\n        \"query\": \"qui et labore eu\",\n        \"size\": 18871642,\n        \"sizeComparison\": \"larger\",\n        \"subject\": \"sint nos\",\n        \"to\": \"fugiat nisi\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/filters?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"filters"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": {\n  \"addLabelIds\": [\n   \"ipsum sunt cillum dolore nostrud\",\n   \"fugiat aute dolor quis\"\n  ],\n  \"forward\": \"cillum Duis l\",\n  \"removeLabelIds\": [\n   \"aliqua non voluptate\",\n   \"sunt occaecat deserunt\"\n  ]\n },\n \"criteria\": {\n  \"excludeChats\": false,\n  \"from\": \"Duis\",\n  \"hasAttachment\": false,\n  \"negatedQuery\": \"ullamco ipsum aliquip amet incididunt\",\n  \"query\": \"qui et labore eu\",\n  \"size\": 18871642,\n  \"sizeComparison\": \"larger\",\n  \"subject\": \"sint nos\",\n  \"to\": \"fugiat nisi\"\n },\n \"id\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "forwarding Addresses",
							"item": [
								{
									"name": "{forwarding Email}",
									"item": [
										{
											"name": "gmail.users.settings.forwarding Addresses.delete",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses/:forwardingEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"forwardingAddresses",
														":forwardingEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "forwardingEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The forwarding address to be deleted."
														}
													]
												},
												"description": "Deletes the specified forwarding address and revokes any verification that may have been required. This method is only available to service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses/:forwardingEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"forwardingAddresses",
																":forwardingEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "forwardingEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "gmail.users.settings.forwarding Addresses.get",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses/:forwardingEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"forwardingAddresses",
														":forwardingEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "forwardingEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The forwarding address to be retrieved."
														}
													]
												},
												"description": "Gets the specified forwarding address."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses/:forwardingEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"forwardingAddresses",
																":forwardingEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "forwardingEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"forwardingEmail\": \"<string>\",\n \"verificationStatus\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "gmail.users.settings.forwarding Addresses.list",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"forwardingAddresses"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Lists the forwarding addresses for the specified account."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"forwardingAddresses"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"forwardingAddresses\": [\n  {\n   \"forwardingEmail\": \"ad commodo\",\n   \"verificationStatus\": \"accepted\"\n  },\n  {\n   \"forwardingEmail\": \"dolore i\",\n   \"verificationStatus\": \"verificationStatusUnspecified\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.forwarding Addresses.create",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forwardingEmail\": \"<string>\",\n    \"verificationStatus\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"forwardingAddresses"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Creates a forwarding address. If ownership verification is required, a message will be sent to the recipient and the resource's verification status will be set to `pending`; otherwise, the resource will be created with verification status set to `accepted`. This method is only available to service account clients that have been delegated domain-wide authority."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"forwardingEmail\": \"<string>\",\n    \"verificationStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/forwardingAddresses?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"forwardingAddresses"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"forwardingEmail\": \"<string>\",\n \"verificationStatus\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "imap",
							"item": [
								{
									"name": "gmail.users.settings.get Imap",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/imap?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"imap"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Gets IMAP settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/imap?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"imap"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"autoExpunge\": true,\n \"enabled\": false,\n \"expungeBehavior\": \"trash\",\n \"maxFolderSize\": -77503352\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.update Imap",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"autoExpunge\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"expungeBehavior\": \"<string>\",\n    \"maxFolderSize\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/imap?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"imap"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Updates IMAP settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"autoExpunge\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"expungeBehavior\": \"<string>\",\n    \"maxFolderSize\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/imap?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"imap"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"autoExpunge\": \"<boolean>\",\n \"enabled\": \"<boolean>\",\n \"expungeBehavior\": \"<string>\",\n \"maxFolderSize\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "language",
							"item": [
								{
									"name": "gmail.users.settings.get Language",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/language?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"language"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Gets language settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/language?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"language"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"displayLanguage\": \"ullamco magna aute\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.update Language",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayLanguage\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/language?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"language"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Updates language settings. If successful, the return object contains the `displayLanguage` that was saved for the user, which may differ from the value passed into the request. This is because the requested `displayLanguage` may not be directly supported by Gmail but have a close variant that is, and so the variant may be chosen and saved instead."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayLanguage\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/language?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"language"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"displayLanguage\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "pop",
							"item": [
								{
									"name": "gmail.users.settings.get Pop",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/pop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"pop"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Gets POP settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/pop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"pop"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accessWindow\": \"accessWindowUnspecified\",\n \"disposition\": \"archive\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.update Pop",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accessWindow\": \"<string>\",\n    \"disposition\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/pop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"pop"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Updates POP settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accessWindow\": \"<string>\",\n    \"disposition\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/pop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"pop"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accessWindow\": \"<string>\",\n \"disposition\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "send As",
							"item": [
								{
									"name": "{send As Email}",
									"item": [
										{
											"name": "smime Info",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "gmail.users.settings.send As.smime Info.delete",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gmail",
																		"v1",
																		"users",
																		":userId",
																		"settings",
																		"sendAs",
																		":sendAsEmail",
																		"smimeInfo",
																		":id"
																	],
																	"query": [
																		{
																			"key": "$.xgafv",
																			"value": "<string>",
																			"description": "V1 error format."
																		},
																		{
																			"key": "access_token",
																			"value": "<string>",
																			"description": "OAuth access token."
																		},
																		{
																			"key": "alt",
																			"value": "<string>",
																			"description": "Data format for response."
																		},
																		{
																			"key": "callback",
																			"value": "<string>",
																			"description": "JSONP"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Selector specifying which fields to include in a partial response."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
																		},
																		{
																			"key": "oauth_token",
																			"value": "<string>",
																			"description": "OAuth 2.0 token for the current user."
																		},
																		{
																			"key": "prettyPrint",
																			"value": "<boolean>",
																			"description": "Returns response with indentations and line breaks."
																		},
																		{
																			"key": "quotaUser",
																			"value": "<string>",
																			"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
																		},
																		{
																			"key": "upload_protocol",
																			"value": "<string>",
																			"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
																		},
																		{
																			"key": "uploadType",
																			"value": "<string>",
																			"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
																		}
																	],
																	"variable": [
																		{
																			"key": "userId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
																		},
																		{
																			"key": "sendAsEmail",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The email address that appears in the \"From:\" header for mail sent using this alias."
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The immutable ID for the SmimeInfo."
																		}
																	]
																},
																"description": "Deletes the specified S/MIME config for the specified send-as alias."
															},
															"response": [
																{
																	"name": "Successful response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"gmail",
																				"v1",
																				"users",
																				":userId",
																				"settings",
																				"sendAs",
																				":sendAsEmail",
																				"smimeInfo",
																				":id"
																			],
																			"query": [
																				{
																					"key": "$.xgafv",
																					"value": "<string>"
																				},
																				{
																					"key": "access_token",
																					"value": "<string>"
																				},
																				{
																					"key": "alt",
																					"value": "<string>"
																				},
																				{
																					"key": "callback",
																					"value": "<string>"
																				},
																				{
																					"key": "fields",
																					"value": "<string>"
																				},
																				{
																					"key": "key",
																					"value": "<string>"
																				},
																				{
																					"key": "oauth_token",
																					"value": "<string>"
																				},
																				{
																					"key": "prettyPrint",
																					"value": "<boolean>"
																				},
																				{
																					"key": "quotaUser",
																					"value": "<string>"
																				},
																				{
																					"key": "upload_protocol",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "userId"
																				},
																				{
																					"key": "sendAsEmail"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "gmail.users.settings.send As.smime Info.get",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gmail",
																		"v1",
																		"users",
																		":userId",
																		"settings",
																		"sendAs",
																		":sendAsEmail",
																		"smimeInfo",
																		":id"
																	],
																	"query": [
																		{
																			"key": "$.xgafv",
																			"value": "<string>",
																			"description": "V1 error format."
																		},
																		{
																			"key": "access_token",
																			"value": "<string>",
																			"description": "OAuth access token."
																		},
																		{
																			"key": "alt",
																			"value": "<string>",
																			"description": "Data format for response."
																		},
																		{
																			"key": "callback",
																			"value": "<string>",
																			"description": "JSONP"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Selector specifying which fields to include in a partial response."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
																		},
																		{
																			"key": "oauth_token",
																			"value": "<string>",
																			"description": "OAuth 2.0 token for the current user."
																		},
																		{
																			"key": "prettyPrint",
																			"value": "<boolean>",
																			"description": "Returns response with indentations and line breaks."
																		},
																		{
																			"key": "quotaUser",
																			"value": "<string>",
																			"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
																		},
																		{
																			"key": "upload_protocol",
																			"value": "<string>",
																			"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
																		},
																		{
																			"key": "uploadType",
																			"value": "<string>",
																			"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
																		}
																	],
																	"variable": [
																		{
																			"key": "userId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
																		},
																		{
																			"key": "sendAsEmail",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The email address that appears in the \"From:\" header for mail sent using this alias."
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The immutable ID for the SmimeInfo."
																		}
																	]
																},
																"description": "Gets the specified S/MIME config for the specified send-as alias."
															},
															"response": [
																{
																	"name": "Successful response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"gmail",
																				"v1",
																				"users",
																				":userId",
																				"settings",
																				"sendAs",
																				":sendAsEmail",
																				"smimeInfo",
																				":id"
																			],
																			"query": [
																				{
																					"key": "$.xgafv",
																					"value": "<string>"
																				},
																				{
																					"key": "access_token",
																					"value": "<string>"
																				},
																				{
																					"key": "alt",
																					"value": "<string>"
																				},
																				{
																					"key": "callback",
																					"value": "<string>"
																				},
																				{
																					"key": "fields",
																					"value": "<string>"
																				},
																				{
																					"key": "key",
																					"value": "<string>"
																				},
																				{
																					"key": "oauth_token",
																					"value": "<string>"
																				},
																				{
																					"key": "prettyPrint",
																					"value": "<boolean>"
																				},
																				{
																					"key": "quotaUser",
																					"value": "<string>"
																				},
																				{
																					"key": "upload_protocol",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "userId"
																				},
																				{
																					"key": "sendAsEmail"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"encryptedKeyPassword\": \"<string>\",\n \"expiration\": \"<string>\",\n \"id\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"issuerCn\": \"<string>\",\n \"pem\": \"<string>\",\n \"pkcs12\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "gmail.users.settings.send As.smime Info.set Default",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id/setDefault?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gmail",
																		"v1",
																		"users",
																		":userId",
																		"settings",
																		"sendAs",
																		":sendAsEmail",
																		"smimeInfo",
																		":id",
																		"setDefault"
																	],
																	"query": [
																		{
																			"key": "$.xgafv",
																			"value": "<string>",
																			"description": "V1 error format."
																		},
																		{
																			"key": "access_token",
																			"value": "<string>",
																			"description": "OAuth access token."
																		},
																		{
																			"key": "alt",
																			"value": "<string>",
																			"description": "Data format for response."
																		},
																		{
																			"key": "callback",
																			"value": "<string>",
																			"description": "JSONP"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Selector specifying which fields to include in a partial response."
																		},
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
																		},
																		{
																			"key": "oauth_token",
																			"value": "<string>",
																			"description": "OAuth 2.0 token for the current user."
																		},
																		{
																			"key": "prettyPrint",
																			"value": "<boolean>",
																			"description": "Returns response with indentations and line breaks."
																		},
																		{
																			"key": "quotaUser",
																			"value": "<string>",
																			"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
																		},
																		{
																			"key": "upload_protocol",
																			"value": "<string>",
																			"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
																		},
																		{
																			"key": "uploadType",
																			"value": "<string>",
																			"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
																		}
																	],
																	"variable": [
																		{
																			"key": "userId",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
																		},
																		{
																			"key": "sendAsEmail",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The email address that appears in the \"From:\" header for mail sent using this alias."
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The immutable ID for the SmimeInfo."
																		}
																	]
																},
																"description": "Sets the default S/MIME config for the specified send-as alias."
															},
															"response": [
																{
																	"name": "Successful response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo/:id/setDefault?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"gmail",
																				"v1",
																				"users",
																				":userId",
																				"settings",
																				"sendAs",
																				":sendAsEmail",
																				"smimeInfo",
																				":id",
																				"setDefault"
																			],
																			"query": [
																				{
																					"key": "$.xgafv",
																					"value": "<string>"
																				},
																				{
																					"key": "access_token",
																					"value": "<string>"
																				},
																				{
																					"key": "alt",
																					"value": "<string>"
																				},
																				{
																					"key": "callback",
																					"value": "<string>"
																				},
																				{
																					"key": "fields",
																					"value": "<string>"
																				},
																				{
																					"key": "key",
																					"value": "<string>"
																				},
																				{
																					"key": "oauth_token",
																					"value": "<string>"
																				},
																				{
																					"key": "prettyPrint",
																					"value": "<boolean>"
																				},
																				{
																					"key": "quotaUser",
																					"value": "<string>"
																				},
																				{
																					"key": "upload_protocol",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "userId"
																				},
																				{
																					"key": "sendAsEmail"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "gmail.users.settings.send As.smime Info.list",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail",
																"smimeInfo"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>",
																	"description": "V1 error format."
																},
																{
																	"key": "access_token",
																	"value": "<string>",
																	"description": "OAuth access token."
																},
																{
																	"key": "alt",
																	"value": "<string>",
																	"description": "Data format for response."
																},
																{
																	"key": "callback",
																	"value": "<string>",
																	"description": "JSONP"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Selector specifying which fields to include in a partial response."
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
																},
																{
																	"key": "oauth_token",
																	"value": "<string>",
																	"description": "OAuth 2.0 token for the current user."
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>",
																	"description": "Returns response with indentations and line breaks."
																},
																{
																	"key": "quotaUser",
																	"value": "<string>",
																	"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>",
																	"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
																},
																{
																	"key": "uploadType",
																	"value": "<string>",
																	"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
																},
																{
																	"key": "sendAsEmail",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The email address that appears in the \"From:\" header for mail sent using this alias."
																}
															]
														},
														"description": "Lists S/MIME configs for the specified send-as alias."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gmail",
																		"v1",
																		"users",
																		":userId",
																		"settings",
																		"sendAs",
																		":sendAsEmail",
																		"smimeInfo"
																	],
																	"query": [
																		{
																			"key": "$.xgafv",
																			"value": "<string>"
																		},
																		{
																			"key": "access_token",
																			"value": "<string>"
																		},
																		{
																			"key": "alt",
																			"value": "<string>"
																		},
																		{
																			"key": "callback",
																			"value": "<string>"
																		},
																		{
																			"key": "fields",
																			"value": "<string>"
																		},
																		{
																			"key": "key",
																			"value": "<string>"
																		},
																		{
																			"key": "oauth_token",
																			"value": "<string>"
																		},
																		{
																			"key": "prettyPrint",
																			"value": "<boolean>"
																		},
																		{
																			"key": "quotaUser",
																			"value": "<string>"
																		},
																		{
																			"key": "upload_protocol",
																			"value": "<string>"
																		},
																		{
																			"key": "uploadType",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "sendAsEmail"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"smimeInfo\": [\n  {\n   \"encryptedKeyPassword\": \"ut eu\",\n   \"expiration\": \"sit eu do\",\n   \"id\": \"Lorem et sint in\",\n   \"isDefault\": true,\n   \"issuerCn\": \"reprehenderit dolore pariatur laborum sed\",\n   \"pem\": \"minim sunt laborum\",\n   \"pkcs12\": \"irure voluptate do esse adipisicing\"\n  },\n  {\n   \"encryptedKeyPassword\": \"mollit exercitation\",\n   \"expiration\": \"labore ut occaecat sed\",\n   \"id\": \"aliquip\",\n   \"isDefault\": true,\n   \"issuerCn\": \"et minim\",\n   \"pem\": \"laborum dolore\",\n   \"pkcs12\": \"quis velit adipisicing\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "gmail.users.settings.send As.smime Info.insert",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"encryptedKeyPassword\": \"<string>\",\n    \"expiration\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"issuerCn\": \"<string>\",\n    \"pem\": \"<string>\",\n    \"pkcs12\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail",
																"smimeInfo"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>",
																	"description": "V1 error format."
																},
																{
																	"key": "access_token",
																	"value": "<string>",
																	"description": "OAuth access token."
																},
																{
																	"key": "alt",
																	"value": "<string>",
																	"description": "Data format for response."
																},
																{
																	"key": "callback",
																	"value": "<string>",
																	"description": "JSONP"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Selector specifying which fields to include in a partial response."
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
																},
																{
																	"key": "oauth_token",
																	"value": "<string>",
																	"description": "OAuth 2.0 token for the current user."
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>",
																	"description": "Returns response with indentations and line breaks."
																},
																{
																	"key": "quotaUser",
																	"value": "<string>",
																	"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>",
																	"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
																},
																{
																	"key": "uploadType",
																	"value": "<string>",
																	"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
																},
																{
																	"key": "sendAsEmail",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The email address that appears in the \"From:\" header for mail sent using this alias."
																}
															]
														},
														"description": "Insert (upload) the given S/MIME config for the specified send-as alias. Note that pkcs12 format is required for the key."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"encryptedKeyPassword\": \"<string>\",\n    \"expiration\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"issuerCn\": \"<string>\",\n    \"pem\": \"<string>\",\n    \"pkcs12\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/smimeInfo?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gmail",
																		"v1",
																		"users",
																		":userId",
																		"settings",
																		"sendAs",
																		":sendAsEmail",
																		"smimeInfo"
																	],
																	"query": [
																		{
																			"key": "$.xgafv",
																			"value": "<string>"
																		},
																		{
																			"key": "access_token",
																			"value": "<string>"
																		},
																		{
																			"key": "alt",
																			"value": "<string>"
																		},
																		{
																			"key": "callback",
																			"value": "<string>"
																		},
																		{
																			"key": "fields",
																			"value": "<string>"
																		},
																		{
																			"key": "key",
																			"value": "<string>"
																		},
																		{
																			"key": "oauth_token",
																			"value": "<string>"
																		},
																		{
																			"key": "prettyPrint",
																			"value": "<boolean>"
																		},
																		{
																			"key": "quotaUser",
																			"value": "<string>"
																		},
																		{
																			"key": "upload_protocol",
																			"value": "<string>"
																		},
																		{
																			"key": "uploadType",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "sendAsEmail"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"encryptedKeyPassword\": \"<string>\",\n \"expiration\": \"<string>\",\n \"id\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"issuerCn\": \"<string>\",\n \"pem\": \"<string>\",\n \"pkcs12\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "gmail.users.settings.send As.delete",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs",
														":sendAsEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "sendAsEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The send-as alias to be deleted."
														}
													]
												},
												"description": "Deletes the specified send-as alias. Revokes any verification that may have been required for using it. This method is only available to service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "sendAsEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "gmail.users.settings.send As.get",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs",
														":sendAsEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "sendAsEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The send-as alias to be retrieved."
														}
													]
												},
												"description": "Gets the specified send-as alias. Fails with an HTTP 404 error if the specified address is not a member of the collection."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "sendAsEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"displayName\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"isPrimary\": \"<boolean>\",\n \"replyToAddress\": \"<string>\",\n \"sendAsEmail\": \"<string>\",\n \"signature\": \"<string>\",\n \"smtpMsa\": {\n  \"host\": \"aute Ut dolor ad sint\",\n  \"password\": \"nulla sint\",\n  \"port\": -64579657,\n  \"securityMode\": \"starttls\",\n  \"username\": \"id officia amet commodo\"\n },\n \"treatAsAlias\": \"<boolean>\",\n \"verificationStatus\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "gmail.users.settings.send As.patch",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"in est reprehenderit mollit adipisicing\",\n        \"password\": \"consequat ad\",\n        \"port\": -89662965,\n        \"securityMode\": \"ssl\",\n        \"username\": \"aute incididunt\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs",
														":sendAsEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "sendAsEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The send-as alias to be updated."
														}
													]
												},
												"description": "Patch the specified send-as alias."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"aute Ut dolor ad sint\",\n        \"password\": \"nulla sint\",\n        \"port\": -64579657,\n        \"securityMode\": \"starttls\",\n        \"username\": \"id officia amet commodo\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "sendAsEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"displayName\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"isPrimary\": \"<boolean>\",\n \"replyToAddress\": \"<string>\",\n \"sendAsEmail\": \"<string>\",\n \"signature\": \"<string>\",\n \"smtpMsa\": {\n  \"host\": \"aute Ut dolor ad sint\",\n  \"password\": \"nulla sint\",\n  \"port\": -64579657,\n  \"securityMode\": \"starttls\",\n  \"username\": \"id officia amet commodo\"\n },\n \"treatAsAlias\": \"<boolean>\",\n \"verificationStatus\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "gmail.users.settings.send As.update",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"in est reprehenderit mollit adipisicing\",\n        \"password\": \"consequat ad\",\n        \"port\": -89662965,\n        \"securityMode\": \"ssl\",\n        \"username\": \"aute incididunt\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs",
														":sendAsEmail"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "sendAsEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The send-as alias to be updated."
														}
													]
												},
												"description": "Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. Addresses other than the primary address for the account can only be updated by service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"aute Ut dolor ad sint\",\n        \"password\": \"nulla sint\",\n        \"port\": -64579657,\n        \"securityMode\": \"starttls\",\n        \"username\": \"id officia amet commodo\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "sendAsEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"displayName\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"isPrimary\": \"<boolean>\",\n \"replyToAddress\": \"<string>\",\n \"sendAsEmail\": \"<string>\",\n \"signature\": \"<string>\",\n \"smtpMsa\": {\n  \"host\": \"aute Ut dolor ad sint\",\n  \"password\": \"nulla sint\",\n  \"port\": -64579657,\n  \"securityMode\": \"starttls\",\n  \"username\": \"id officia amet commodo\"\n },\n \"treatAsAlias\": \"<boolean>\",\n \"verificationStatus\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "gmail.users.settings.send As.verify",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/verify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs",
														":sendAsEmail",
														"verify"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>",
															"description": "V1 error format."
														},
														{
															"key": "access_token",
															"value": "<string>",
															"description": "OAuth access token."
														},
														{
															"key": "alt",
															"value": "<string>",
															"description": "Data format for response."
														},
														{
															"key": "callback",
															"value": "<string>",
															"description": "JSONP"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Selector specifying which fields to include in a partial response."
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
														},
														{
															"key": "oauth_token",
															"value": "<string>",
															"description": "OAuth 2.0 token for the current user."
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>",
															"description": "Returns response with indentations and line breaks."
														},
														{
															"key": "quotaUser",
															"value": "<string>",
															"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
														},
														{
															"key": "upload_protocol",
															"value": "<string>",
															"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
														},
														{
															"key": "uploadType",
															"value": "<string>",
															"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
														},
														{
															"key": "sendAsEmail",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The send-as alias to be verified."
														}
													]
												},
												"description": "Sends a verification email to the specified send-as alias address. The verification status must be `pending`. This method is only available to service account clients that have been delegated domain-wide authority."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs/:sendAsEmail/verify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gmail",
																"v1",
																"users",
																":userId",
																"settings",
																"sendAs",
																":sendAsEmail",
																"verify"
															],
															"query": [
																{
																	"key": "$.xgafv",
																	"value": "<string>"
																},
																{
																	"key": "access_token",
																	"value": "<string>"
																},
																{
																	"key": "alt",
																	"value": "<string>"
																},
																{
																	"key": "callback",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "key",
																	"value": "<string>"
																},
																{
																	"key": "oauth_token",
																	"value": "<string>"
																},
																{
																	"key": "prettyPrint",
																	"value": "<boolean>"
																},
																{
																	"key": "quotaUser",
																	"value": "<string>"
																},
																{
																	"key": "upload_protocol",
																	"value": "<string>"
																},
																{
																	"key": "uploadType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "sendAsEmail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "gmail.users.settings.send As.list",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"sendAs"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Lists the send-as aliases for the specified account. The result includes the primary send-as address associated with the account as well as any custom \"from\" aliases."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"sendAs\": [\n  {\n   \"displayName\": \"cupidatat in Lorem velit dolore\",\n   \"isDefault\": false,\n   \"isPrimary\": false,\n   \"replyToAddress\": \"incididunt\",\n   \"sendAsEmail\": \"sed\",\n   \"signature\": \"non ullamco\",\n   \"smtpMsa\": {\n    \"host\": \"dolor fugiat\",\n    \"password\": \"dolor\",\n    \"port\": 16790091,\n    \"securityMode\": \"none\",\n    \"username\": \"in exercitation tempor cupidatat\"\n   },\n   \"treatAsAlias\": false,\n   \"verificationStatus\": \"verificationStatusUnspecified\"\n  },\n  {\n   \"displayName\": \"ipsum labore sunt dolore\",\n   \"isDefault\": false,\n   \"isPrimary\": true,\n   \"replyToAddress\": \"quis aliquip fugiat\",\n   \"sendAsEmail\": \"fugiat\",\n   \"signature\": \"qui\",\n   \"smtpMsa\": {\n    \"host\": \"Excepteur pariatur qui laboris eli\",\n    \"password\": \"cillum culpa et laborum sint\",\n    \"port\": -42247806,\n    \"securityMode\": \"ssl\",\n    \"username\": \"veniam dolore enim deserunt aliqu\"\n   },\n   \"treatAsAlias\": false,\n   \"verificationStatus\": \"pending\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.send As.create",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"in est reprehenderit mollit adipisicing\",\n        \"password\": \"consequat ad\",\n        \"port\": -89662965,\n        \"securityMode\": \"ssl\",\n        \"username\": \"aute incididunt\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"sendAs"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Creates a custom \"from\" send-as alias. If an SMTP MSA is specified, Gmail will attempt to connect to the SMTP service to validate the configuration before creating the alias. If ownership verification is required for the alias, a message will be sent to the email address and the resource's verification status will be set to `pending`; otherwise, the resource will be created with verification status set to `accepted`. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. This method is only available to service account clients that have been delegated domain-wide authority."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"isPrimary\": \"<boolean>\",\n    \"replyToAddress\": \"<string>\",\n    \"sendAsEmail\": \"<string>\",\n    \"signature\": \"<string>\",\n    \"smtpMsa\": {\n        \"host\": \"aute Ut dolor ad sint\",\n        \"password\": \"nulla sint\",\n        \"port\": -64579657,\n        \"securityMode\": \"starttls\",\n        \"username\": \"id officia amet commodo\"\n    },\n    \"treatAsAlias\": \"<boolean>\",\n    \"verificationStatus\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/sendAs?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"sendAs"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"displayName\": \"<string>\",\n \"isDefault\": \"<boolean>\",\n \"isPrimary\": \"<boolean>\",\n \"replyToAddress\": \"<string>\",\n \"sendAsEmail\": \"<string>\",\n \"signature\": \"<string>\",\n \"smtpMsa\": {\n  \"host\": \"aute Ut dolor ad sint\",\n  \"password\": \"nulla sint\",\n  \"port\": -64579657,\n  \"securityMode\": \"starttls\",\n  \"username\": \"id officia amet commodo\"\n },\n \"treatAsAlias\": \"<boolean>\",\n \"verificationStatus\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "vacation",
							"item": [
								{
									"name": "gmail.users.settings.get Vacation",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/vacation?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"vacation"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Gets vacation responder settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/vacation?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"vacation"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"enableAutoReply\": true,\n \"endTime\": \"cupidatat\",\n \"responseBodyHtml\": \"voluptate\",\n \"responseBodyPlainText\": \"Lorem Excepteur\",\n \"responseSubject\": \"labore consequat voluptate nisi\",\n \"restrictToContacts\": false,\n \"restrictToDomain\": false,\n \"startTime\": \"aliquip nulla in Duis\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.settings.update Vacation",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enableAutoReply\": \"<boolean>\",\n    \"endTime\": \"<string>\",\n    \"responseBodyHtml\": \"<string>\",\n    \"responseBodyPlainText\": \"<string>\",\n    \"responseSubject\": \"<string>\",\n    \"restrictToContacts\": \"<boolean>\",\n    \"restrictToDomain\": \"<boolean>\",\n    \"startTime\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/vacation?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"settings",
												"vacation"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User's email address. The special value \"me\" can be used to indicate the authenticated user."
												}
											]
										},
										"description": "Updates vacation responder settings."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enableAutoReply\": \"<boolean>\",\n    \"endTime\": \"<string>\",\n    \"responseBodyHtml\": \"<string>\",\n    \"responseBodyPlainText\": \"<string>\",\n    \"responseSubject\": \"<string>\",\n    \"restrictToContacts\": \"<boolean>\",\n    \"restrictToDomain\": \"<boolean>\",\n    \"startTime\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/settings/vacation?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"settings",
														"vacation"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"enableAutoReply\": \"<boolean>\",\n \"endTime\": \"<string>\",\n \"responseBodyHtml\": \"<string>\",\n \"responseBodyPlainText\": \"<string>\",\n \"responseSubject\": \"<string>\",\n \"restrictToContacts\": \"<boolean>\",\n \"restrictToDomain\": \"<boolean>\",\n \"startTime\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "threads",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "gmail.users.threads.delete",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads",
												":id"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the Thread to delete."
												}
											]
										},
										"description": "Immediately and permanently deletes the specified thread. This operation cannot be undone. Prefer `threads.trash` instead."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"threads",
														":id"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "gmail.users.threads.get",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id?format=<string>&metadataHeaders=<string>&metadataHeaders=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads",
												":id"
											],
											"query": [
												{
													"key": "format",
													"value": "<string>",
													"description": "The format to return the messages in."
												},
												{
													"key": "metadataHeaders",
													"value": "<string>",
													"description": "When given and format is METADATA, only include headers specified."
												},
												{
													"key": "metadataHeaders",
													"value": "<string>",
													"description": "When given and format is METADATA, only include headers specified."
												},
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the thread to retrieve."
												}
											]
										},
										"description": "Gets the specified thread."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id?format=<string>&metadataHeaders=<string>&metadataHeaders=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"threads",
														":id"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "metadataHeaders",
															"value": "<string>"
														},
														{
															"key": "metadataHeaders",
															"value": "<string>"
														},
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"laborum sunt commodo do\",\n \"id\": \"dolore in id voluptate\",\n \"messages\": [\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"amet dolor est\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"ea ex\",\n    \"partId\": \"ex anim nostrud\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  },\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"veniam fugiat sit Ut commodo\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"cupidatat dolor et laborum proident\",\n    \"partId\": \"Duis Excepteur\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  }\n ],\n \"snippet\": \"ut mollit quis nisi exercitation\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.threads.modify",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/modify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads",
												":id",
												"modify"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the thread to modify."
												}
											]
										},
										"description": "Modifies the labels applied to the thread. This applies to all messages in the thread."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"removeLabelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/modify?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"threads",
														":id",
														"modify"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"laborum sunt commodo do\",\n \"id\": \"dolore in id voluptate\",\n \"messages\": [\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"amet dolor est\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"ea ex\",\n    \"partId\": \"ex anim nostrud\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  },\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"veniam fugiat sit Ut commodo\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"cupidatat dolor et laborum proident\",\n    \"partId\": \"Duis Excepteur\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  }\n ],\n \"snippet\": \"ut mollit quis nisi exercitation\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.threads.trash",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/trash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads",
												":id",
												"trash"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the thread to Trash."
												}
											]
										},
										"description": "Moves the specified thread to the trash."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/trash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"threads",
														":id",
														"trash"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"laborum sunt commodo do\",\n \"id\": \"dolore in id voluptate\",\n \"messages\": [\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"amet dolor est\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"ea ex\",\n    \"partId\": \"ex anim nostrud\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  },\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"veniam fugiat sit Ut commodo\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"cupidatat dolor et laborum proident\",\n    \"partId\": \"Duis Excepteur\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  }\n ],\n \"snippet\": \"ut mollit quis nisi exercitation\"\n}"
										}
									]
								},
								{
									"name": "gmail.users.threads.untrash",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/untrash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads",
												":id",
												"untrash"
											],
											"query": [
												{
													"key": "$.xgafv",
													"value": "<string>",
													"description": "V1 error format."
												},
												{
													"key": "access_token",
													"value": "<string>",
													"description": "OAuth access token."
												},
												{
													"key": "alt",
													"value": "<string>",
													"description": "Data format for response."
												},
												{
													"key": "callback",
													"value": "<string>",
													"description": "JSONP"
												},
												{
													"key": "fields",
													"value": "<string>",
													"description": "Selector specifying which fields to include in a partial response."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
												},
												{
													"key": "oauth_token",
													"value": "<string>",
													"description": "OAuth 2.0 token for the current user."
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>",
													"description": "Returns response with indentations and line breaks."
												},
												{
													"key": "quotaUser",
													"value": "<string>",
													"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
												},
												{
													"key": "upload_protocol",
													"value": "<string>",
													"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
												},
												{
													"key": "uploadType",
													"value": "<string>",
													"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the thread to remove from Trash."
												}
											]
										},
										"description": "Removes the specified thread from the trash."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads/:id/untrash?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gmail",
														"v1",
														"users",
														":userId",
														"threads",
														":id",
														"untrash"
													],
													"query": [
														{
															"key": "$.xgafv",
															"value": "<string>"
														},
														{
															"key": "access_token",
															"value": "<string>"
														},
														{
															"key": "alt",
															"value": "<string>"
														},
														{
															"key": "callback",
															"value": "<string>"
														},
														{
															"key": "fields",
															"value": "<string>"
														},
														{
															"key": "key",
															"value": "<string>"
														},
														{
															"key": "oauth_token",
															"value": "<string>"
														},
														{
															"key": "prettyPrint",
															"value": "<boolean>"
														},
														{
															"key": "quotaUser",
															"value": "<string>"
														},
														{
															"key": "upload_protocol",
															"value": "<string>"
														},
														{
															"key": "uploadType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "userId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"historyId\": \"laborum sunt commodo do\",\n \"id\": \"dolore in id voluptate\",\n \"messages\": [\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"amet dolor est\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"ea ex\",\n    \"partId\": \"ex anim nostrud\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  },\n  {\n   \"historyId\": \"<string>\",\n   \"id\": \"<string>\",\n   \"internalDate\": \"<string>\",\n   \"labelIds\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"payload\": {\n    \"body\": {\n     \"attachmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"data\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"size\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"filename\": \"veniam fugiat sit Ut commodo\",\n    \"headers\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mimeType\": \"cupidatat dolor et laborum proident\",\n    \"partId\": \"Duis Excepteur\",\n    \"parts\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n     }\n    ]\n   },\n   \"raw\": \"<string>\",\n   \"sizeEstimate\": \"<integer>\",\n   \"snippet\": \"<string>\",\n   \"threadId\": \"<string>\"\n  }\n ],\n \"snippet\": \"ut mollit quis nisi exercitation\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "gmail.users.threads.list",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads?includeSpamTrash=<boolean>&labelIds=<string>&labelIds=<string>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"threads"
									],
									"query": [
										{
											"key": "includeSpamTrash",
											"value": "<boolean>",
											"description": "Include threads from `SPAM` and `TRASH` in the results."
										},
										{
											"key": "labelIds",
											"value": "<string>",
											"description": "Only return threads with labels that match all of the specified label IDs."
										},
										{
											"key": "labelIds",
											"value": "<string>",
											"description": "Only return threads with labels that match all of the specified label IDs."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Maximum number of threads to return."
										},
										{
											"key": "pageToken",
											"value": "<string>",
											"description": "Page token to retrieve a specific page of results in the list."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "Only return threads matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`. Parameter cannot be used when accessing the api using the gmail.metadata scope."
										},
										{
											"key": "$.xgafv",
											"value": "<string>",
											"description": "V1 error format."
										},
										{
											"key": "access_token",
											"value": "<string>",
											"description": "OAuth access token."
										},
										{
											"key": "alt",
											"value": "<string>",
											"description": "Data format for response."
										},
										{
											"key": "callback",
											"value": "<string>",
											"description": "JSONP"
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Selector specifying which fields to include in a partial response."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
										},
										{
											"key": "oauth_token",
											"value": "<string>",
											"description": "OAuth 2.0 token for the current user."
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>",
											"description": "Returns response with indentations and line breaks."
										},
										{
											"key": "quotaUser",
											"value": "<string>",
											"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
										},
										{
											"key": "upload_protocol",
											"value": "<string>",
											"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
										},
										{
											"key": "uploadType",
											"value": "<string>",
											"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
										}
									]
								},
								"description": "Lists the threads in the user's mailbox."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gmail/v1/users/:userId/threads?includeSpamTrash=<boolean>&labelIds=<string>&labelIds=<string>&maxResults=<integer>&pageToken=<string>&q=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gmail",
												"v1",
												"users",
												":userId",
												"threads"
											],
											"query": [
												{
													"key": "includeSpamTrash",
													"value": "<boolean>"
												},
												{
													"key": "labelIds",
													"value": "<string>"
												},
												{
													"key": "labelIds",
													"value": "<string>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "pageToken",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												},
												{
													"key": "$.xgafv",
													"value": "<string>"
												},
												{
													"key": "access_token",
													"value": "<string>"
												},
												{
													"key": "alt",
													"value": "<string>"
												},
												{
													"key": "callback",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "oauth_token",
													"value": "<string>"
												},
												{
													"key": "prettyPrint",
													"value": "<boolean>"
												},
												{
													"key": "quotaUser",
													"value": "<string>"
												},
												{
													"key": "upload_protocol",
													"value": "<string>"
												},
												{
													"key": "uploadType",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"nextPageToken\": \"anim dolore dolore aliquip pariatur\",\n \"resultSizeEstimate\": -21814645,\n \"threads\": [\n  {\n   \"historyId\": \"Ut ame\",\n   \"id\": \"sunt in elit dolor\",\n   \"messages\": [\n    {\n     \"historyId\": \"<string>\",\n     \"id\": \"<string>\",\n     \"internalDate\": \"<string>\",\n     \"labelIds\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"et Excepteur\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"officia ut\",\n      \"partId\": \"irure\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"<string>\",\n     \"sizeEstimate\": \"<integer>\",\n     \"snippet\": \"<string>\",\n     \"threadId\": \"<string>\"\n    },\n    {\n     \"historyId\": \"<string>\",\n     \"id\": \"<string>\",\n     \"internalDate\": \"<string>\",\n     \"labelIds\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"fugiat id eu \",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"exercitation ullamco\",\n      \"partId\": \"ut in consequat ut\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"<string>\",\n     \"sizeEstimate\": \"<integer>\",\n     \"snippet\": \"<string>\",\n     \"threadId\": \"<string>\"\n    }\n   ],\n   \"snippet\": \"irure ex\"\n  },\n  {\n   \"historyId\": \"in labore ut Lorem\",\n   \"id\": \"do in ut\",\n   \"messages\": [\n    {\n     \"historyId\": \"<string>\",\n     \"id\": \"<string>\",\n     \"internalDate\": \"<string>\",\n     \"labelIds\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"aliquip mollit\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"nisi consequat amet\",\n      \"partId\": \"incididunt consequat sed consectetur\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"<string>\",\n     \"sizeEstimate\": \"<integer>\",\n     \"snippet\": \"<string>\",\n     \"threadId\": \"<string>\"\n    },\n    {\n     \"historyId\": \"<string>\",\n     \"id\": \"<string>\",\n     \"internalDate\": \"<string>\",\n     \"labelIds\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"incididunt minim dolore occaec\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"aute culpa\",\n      \"partId\": \"nisi\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"<string>\",\n     \"sizeEstimate\": \"<integer>\",\n     \"snippet\": \"<string>\",\n     \"threadId\": \"<string>\"\n    }\n   ],\n   \"snippet\": \"eiusmod Ut id occaecat Duis\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "gmail.users.history.list",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gmail/v1/users/:userId/history?historyTypes=<string>&historyTypes=<string>&labelId=<string>&maxResults=<integer>&pageToken=<string>&startHistoryId=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gmail",
								"v1",
								"users",
								":userId",
								"history"
							],
							"query": [
								{
									"key": "historyTypes",
									"value": "<string>",
									"description": "History types to be returned by the function"
								},
								{
									"key": "historyTypes",
									"value": "<string>",
									"description": "History types to be returned by the function"
								},
								{
									"key": "labelId",
									"value": "<string>",
									"description": "Only return messages with a label matching the ID."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "The maximum number of history records to return."
								},
								{
									"key": "pageToken",
									"value": "<string>",
									"description": "Page token to retrieve a specific page of results in the list."
								},
								{
									"key": "startHistoryId",
									"value": "<string>",
									"description": "Required. Returns history records after the specified `startHistoryId`. The supplied `startHistoryId` should be obtained from the `historyId` of a message, thread, or previous `list` response. History IDs increase chronologically but are not contiguous with random gaps in between valid IDs. Supplying an invalid or out of date `startHistoryId` typically returns an `HTTP 404` error code. A `historyId` is typically valid for at least a week, but in some rare circumstances may be valid for only a few hours. If you receive an `HTTP 404` error response, your application should perform a full sync. If you receive no `nextPageToken` in the response, there are no updates to retrieve and you can store the returned `historyId` for a future request."
								},
								{
									"key": "$.xgafv",
									"value": "<string>",
									"description": "V1 error format."
								},
								{
									"key": "access_token",
									"value": "<string>",
									"description": "OAuth access token."
								},
								{
									"key": "alt",
									"value": "<string>",
									"description": "Data format for response."
								},
								{
									"key": "callback",
									"value": "<string>",
									"description": "JSONP"
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Selector specifying which fields to include in a partial response."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
								},
								{
									"key": "oauth_token",
									"value": "<string>",
									"description": "OAuth 2.0 token for the current user."
								},
								{
									"key": "prettyPrint",
									"value": "<boolean>",
									"description": "Returns response with indentations and line breaks."
								},
								{
									"key": "quotaUser",
									"value": "<string>",
									"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
								},
								{
									"key": "upload_protocol",
									"value": "<string>",
									"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
								},
								{
									"key": "uploadType",
									"value": "<string>",
									"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
								}
							]
						},
						"description": "Lists the history of all changes to the given mailbox. History results are returned in chronological order (increasing `historyId`)."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/history?historyTypes=<string>&historyTypes=<string>&labelId=<string>&maxResults=<integer>&pageToken=<string>&startHistoryId=<string>&$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"history"
									],
									"query": [
										{
											"key": "historyTypes",
											"value": "<string>"
										},
										{
											"key": "historyTypes",
											"value": "<string>"
										},
										{
											"key": "labelId",
											"value": "<string>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "pageToken",
											"value": "<string>"
										},
										{
											"key": "startHistoryId",
											"value": "<string>"
										},
										{
											"key": "$.xgafv",
											"value": "<string>"
										},
										{
											"key": "access_token",
											"value": "<string>"
										},
										{
											"key": "alt",
											"value": "<string>"
										},
										{
											"key": "callback",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "oauth_token",
											"value": "<string>"
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>"
										},
										{
											"key": "quotaUser",
											"value": "<string>"
										},
										{
											"key": "upload_protocol",
											"value": "<string>"
										},
										{
											"key": "uploadType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"history\": [\n  {\n   \"id\": \"ex commodo consectetur\",\n   \"labelsAdded\": [\n    {\n     \"labelIds\": [\n      \"tempor mollit Duis minim nostrud\",\n      \"eu\"\n     ],\n     \"message\": {\n      \"historyId\": \"dolor\",\n      \"id\": \"ex exercitation ad irure\",\n      \"internalDate\": \"in in\",\n      \"labelIds\": [\n       \"Lorem in est ea\",\n       \"voluptate sed ex officia\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"non en\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"non aute proident\",\n       \"partId\": \"sint\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"cupidatat repr\",\n      \"sizeEstimate\": -13786389,\n      \"snippet\": \"fugiat sit\",\n      \"threadId\": \"sunt ipsum nisi do\"\n     }\n    },\n    {\n     \"labelIds\": [\n      \"laborum ea\",\n      \"in sunt et\"\n     ],\n     \"message\": {\n      \"historyId\": \"eu Ut\",\n      \"id\": \"fugiat magna cillum proident\",\n      \"internalDate\": \"ut\",\n      \"labelIds\": [\n       \"exercitation veniam aute\",\n       \"velit consectetur sint anim\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"aliquip amet\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"ea minim et aliquip\",\n       \"partId\": \"consequat\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"elit occaecat sint\",\n      \"sizeEstimate\": -17310421,\n      \"snippet\": \"tempor nostrud\",\n      \"threadId\": \"consectetur offi\"\n     }\n    }\n   ],\n   \"labelsRemoved\": [\n    {\n     \"labelIds\": [\n      \"ut dolor sunt\",\n      \"tempor dolor dolore amet\"\n     ],\n     \"message\": {\n      \"historyId\": \"aute p\",\n      \"id\": \"in nostrud veniam\",\n      \"internalDate\": \"labore Duis commodo\",\n      \"labelIds\": [\n       \"sed eu ea\",\n       \"cupidatat irure\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"aliqua ex adipisicing\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"cil\",\n       \"partId\": \"ex laboris quis adipisicing\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"esse do pariatur elit\",\n      \"sizeEstimate\": -58692221,\n      \"snippet\": \"exercitation fugiat esse velit\",\n      \"threadId\": \"aute eiusmod elit\"\n     }\n    },\n    {\n     \"labelIds\": [\n      \"nostrud incididun\",\n      \"mollit sunt\"\n     ],\n     \"message\": {\n      \"historyId\": \"incididunt in tempor\",\n      \"id\": \"enim officia veniam\",\n      \"internalDate\": \"sint Lorem\",\n      \"labelIds\": [\n       \"elit\",\n       \"et eiusmod\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"exercitation nisi\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"Duis Lorem\",\n       \"partId\": \"id voluptate\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"culpa Ut cillum\",\n      \"sizeEstimate\": 99482464,\n      \"snippet\": \"dolore\",\n      \"threadId\": \"in culpa sint nulla\"\n     }\n    }\n   ],\n   \"messages\": [\n    {\n     \"historyId\": \"incididunt ex non\",\n     \"id\": \"ad eiusmod in officia\",\n     \"internalDate\": \"in\",\n     \"labelIds\": [\n      \"non ipsum reprehenderit\",\n      \"ipsum\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"laborum consequat velit\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"irure sint cupidatat consectetu\",\n      \"partId\": \"cupidatat laboris\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"dolor voluptate velit tempor esse\",\n     \"sizeEstimate\": -60102028,\n     \"snippet\": \"aliquip dolor pariatur sunt\",\n     \"threadId\": \"sit culpa\"\n    },\n    {\n     \"historyId\": \"dolor consectetur anim\",\n     \"id\": \"Lorem quis deserunt nostrud\",\n     \"internalDate\": \"non\",\n     \"labelIds\": [\n      \"reprehenderit elit\",\n      \"pariatur incididunt cillum officia in\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"sit magna minim aute\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"laborum in pariatur culpa\",\n      \"partId\": \"officia exercitation minim\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"veniam\",\n     \"sizeEstimate\": -48871797,\n     \"snippet\": \"est cillum\",\n     \"threadId\": \"nisi \"\n    }\n   ],\n   \"messagesAdded\": [\n    {\n     \"message\": {\n      \"historyId\": \"dolore culpa do qui\",\n      \"id\": \"et ullamco exercitation\",\n      \"internalDate\": \"laborum ad magna\",\n      \"labelIds\": [\n       \"est\",\n       \"voluptate minim aute\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"in magna ex enim\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"ipsum Excepteur\",\n       \"partId\": \"anim consectetur culpa sed amet\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"sint voluptate do\",\n      \"sizeEstimate\": -43602756,\n      \"snippet\": \"pariatur elit qui commodo\",\n      \"threadId\": \"minim volu\"\n     }\n    },\n    {\n     \"message\": {\n      \"historyId\": \"veniam dolore laborum\",\n      \"id\": \"laborum o\",\n      \"internalDate\": \"non adipisicing\",\n      \"labelIds\": [\n       \"dolore\",\n       \"mollit officia elit\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"nostrud minim Excepteur mollit labore\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"velit veniam enim non dolore\",\n       \"partId\": \"ullamco\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"deserunt proident anim n\",\n      \"sizeEstimate\": -54996027,\n      \"snippet\": \"eu elit\",\n      \"threadId\": \"esse voluptate eiusmod fugiat tempor\"\n     }\n    }\n   ],\n   \"messagesDeleted\": [\n    {\n     \"message\": {\n      \"historyId\": \"consequat ad dolor\",\n      \"id\": \"officia\",\n      \"internalDate\": \"ipsum pariatur\",\n      \"labelIds\": [\n       \"fugiat in reprehenderit adipisicing veniam\",\n       \"proident laborum aute\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"est aliqua nostrud enim\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"deserunt elit irure\",\n       \"partId\": \"nisi anim amet\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"dolor quis nulla qui\",\n      \"sizeEstimate\": -27107525,\n      \"snippet\": \"in tempor\",\n      \"threadId\": \"deserunt laboris Lorem laborum\"\n     }\n    },\n    {\n     \"message\": {\n      \"historyId\": \"amet commodo\",\n      \"id\": \"ut officia nulla nisi\",\n      \"internalDate\": \"exercitation amet consectetur dolore officia\",\n      \"labelIds\": [\n       \"ut\",\n       \"ex consec\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"eu cillum labore commodo aliqua\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"nulla\",\n       \"partId\": \"nulla dolore proident\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"magna veniam\",\n      \"sizeEstimate\": -42797998,\n      \"snippet\": \"sed aliquip labore\",\n      \"threadId\": \"voluptate esse veniam amet\"\n     }\n    }\n   ]\n  },\n  {\n   \"id\": \"aliqua ut magna irure\",\n   \"labelsAdded\": [\n    {\n     \"labelIds\": [\n      \"ipsum et aliqua commodo in\",\n      \"cupidatat dolor elit laboris\"\n     ],\n     \"message\": {\n      \"historyId\": \"sit Lorem reprehenderit\",\n      \"id\": \"ipsum ex\",\n      \"internalDate\": \"occaecat laboris\",\n      \"labelIds\": [\n       \"dolore mollit dolor nisi\",\n       \"aute ut\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"esse incididunt officia\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"consectetur ipsum laboris in fugiat\",\n       \"partId\": \"non mollit nulla\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"non incididunt est commodo\",\n      \"sizeEstimate\": -51914449,\n      \"snippet\": \"dolor id\",\n      \"threadId\": \"adipisicing et est incididunt\"\n     }\n    },\n    {\n     \"labelIds\": [\n      \"mollit labore aliqua sint\",\n      \"velit do nostrud eu\"\n     ],\n     \"message\": {\n      \"historyId\": \"labore elit reprehenderit in\",\n      \"id\": \"enim ut cillum consequat\",\n      \"internalDate\": \"incididunt amet\",\n      \"labelIds\": [\n       \"in\",\n       \"eiusmod deserunt\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"et minim\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"exercitation adipisicing irure\",\n       \"partId\": \"in in ut elit\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"aute veniam eu qui\",\n      \"sizeEstimate\": -30717551,\n      \"snippet\": \"proide\",\n      \"threadId\": \"aute ullamco qui\"\n     }\n    }\n   ],\n   \"labelsRemoved\": [\n    {\n     \"labelIds\": [\n      \"aliquip dolor in l\",\n      \"cupidatat et Ut\"\n     ],\n     \"message\": {\n      \"historyId\": \"amet tempor sint elit exercitation\",\n      \"id\": \"minim aliqua\",\n      \"internalDate\": \"velit id labore enim\",\n      \"labelIds\": [\n       \"non laboris minim\",\n       \"Lorem elit nostrud sit\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"fugiat dolore officia aliqua nulla\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"ut minim\",\n       \"partId\": \"in\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"f\",\n      \"sizeEstimate\": -59181788,\n      \"snippet\": \"dolore mollit cillum \",\n      \"threadId\": \"aut\"\n     }\n    },\n    {\n     \"labelIds\": [\n      \"nostrud ea\",\n      \"Ut consequat incididunt exercitation\"\n     ],\n     \"message\": {\n      \"historyId\": \"ex elit ullamco\",\n      \"id\": \"Excepteur veniam ad est\",\n      \"internalDate\": \"proident cupidatat exercitation\",\n      \"labelIds\": [\n       \"ut\",\n       \"eiusmod incididunt reprehenderit\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"amet qui\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"dolore nostrud\",\n       \"partId\": \"tempor velit pariatur eu\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"sit Excepteur aute ea\",\n      \"sizeEstimate\": 1012223,\n      \"snippet\": \"ut veniam\",\n      \"threadId\": \"paria\"\n     }\n    }\n   ],\n   \"messages\": [\n    {\n     \"historyId\": \"incididunt Excepteur veniam\",\n     \"id\": \"anim magna dolore ad\",\n     \"internalDate\": \"cillum\",\n     \"labelIds\": [\n      \"dolore ut\",\n      \"proident Lorem laborum culpa\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"reprehenderit sunt esse\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"dolore ipsum aliquip\",\n      \"partId\": \"deserunt Excepteur ut laborum elit\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"culpa sint ullamco ad irure\",\n     \"sizeEstimate\": -17946315,\n     \"snippet\": \"reprehenderit amet\",\n     \"threadId\": \"commodo ull\"\n    },\n    {\n     \"historyId\": \"dol\",\n     \"id\": \"qui do nisi\",\n     \"internalDate\": \"irure laborum cupidatat\",\n     \"labelIds\": [\n      \"elit esse\",\n      \"aliqua velit id deserunt\"\n     ],\n     \"payload\": {\n      \"body\": {\n       \"attachmentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"filename\": \"dolore\",\n      \"headers\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mimeType\": \"veniam \",\n      \"partId\": \"pariatur tempor enim Lorem nulla\",\n      \"parts\": [\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       },\n       {\n        \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n       }\n      ]\n     },\n     \"raw\": \"qui fugiat do\",\n     \"sizeEstimate\": 42609667,\n     \"snippet\": \"commodo\",\n     \"threadId\": \"ad\"\n    }\n   ],\n   \"messagesAdded\": [\n    {\n     \"message\": {\n      \"historyId\": \"nostrud culpa\",\n      \"id\": \"amet sed quis dolor\",\n      \"internalDate\": \"dolor non\",\n      \"labelIds\": [\n       \"qui consequat\",\n       \"cillum voluptate sed\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"reprehenderit velit\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"pariatur ullamco\",\n       \"partId\": \"veniam\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"cillum Duis irure in\",\n      \"sizeEstimate\": 66482949,\n      \"snippet\": \"ut\",\n      \"threadId\": \"commo\"\n     }\n    },\n    {\n     \"message\": {\n      \"historyId\": \"voluptate laboris ut consequat\",\n      \"id\": \"aliquip mollit nisi\",\n      \"internalDate\": \"ipsum dolor tempor reprehenderit\",\n      \"labelIds\": [\n       \"officia aute\",\n       \"laboris non do Ut\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"consectetur enim et eiusmod\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"veniam ut ad \",\n       \"partId\": \"occaecat\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"ad et dolor\",\n      \"sizeEstimate\": -56984387,\n      \"snippet\": \"ipsum qui aute\",\n      \"threadId\": \"Duis dolor occaecat cillum\"\n     }\n    }\n   ],\n   \"messagesDeleted\": [\n    {\n     \"message\": {\n      \"historyId\": \"enim officia\",\n      \"id\": \"Lorem\",\n      \"internalDate\": \"eu ullamco ni\",\n      \"labelIds\": [\n       \"nulla commodo consequat in laborum\",\n       \"dolor magna eiu\"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"dolore exercitation\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"dolore est exercitation Excepteur velit\",\n       \"partId\": \"Lorem dolore officia Duis\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"nisi labore dolore\",\n      \"sizeEstimate\": -82020126,\n      \"snippet\": \"exercitat\",\n      \"threadId\": \"ipsum\"\n     }\n    },\n    {\n     \"message\": {\n      \"historyId\": \"deserunt\",\n      \"id\": \"in ex\",\n      \"internalDate\": \"amet velit Excepteur officia\",\n      \"labelIds\": [\n       \"et ad anim occaecat in\",\n       \"dolor \"\n      ],\n      \"payload\": {\n       \"body\": {\n        \"attachmentId\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"data\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"size\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"filename\": \"laborum aute\",\n       \"headers\": [\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       ],\n       \"mimeType\": \"in eu\",\n       \"partId\": \"dolor consectetur in\",\n       \"parts\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/MessagePart detected>\"\n        }\n       ]\n      },\n      \"raw\": \"est aliquip\",\n      \"sizeEstimate\": -77048438,\n      \"snippet\": \"veniam pariatur id\",\n      \"threadId\": \"ut ipsum sunt cillum dolor\"\n     }\n    }\n   ]\n  }\n ],\n \"historyId\": \"do irure qui anim sit\",\n \"nextPageToken\": \"incididunt quis ut\"\n}"
						}
					]
				},
				{
					"name": "gmail.users.get Profile",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gmail/v1/users/:userId/profile?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gmail",
								"v1",
								"users",
								":userId",
								"profile"
							],
							"query": [
								{
									"key": "$.xgafv",
									"value": "<string>",
									"description": "V1 error format."
								},
								{
									"key": "access_token",
									"value": "<string>",
									"description": "OAuth access token."
								},
								{
									"key": "alt",
									"value": "<string>",
									"description": "Data format for response."
								},
								{
									"key": "callback",
									"value": "<string>",
									"description": "JSONP"
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Selector specifying which fields to include in a partial response."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
								},
								{
									"key": "oauth_token",
									"value": "<string>",
									"description": "OAuth 2.0 token for the current user."
								},
								{
									"key": "prettyPrint",
									"value": "<boolean>",
									"description": "Returns response with indentations and line breaks."
								},
								{
									"key": "quotaUser",
									"value": "<string>",
									"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
								},
								{
									"key": "upload_protocol",
									"value": "<string>",
									"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
								},
								{
									"key": "uploadType",
									"value": "<string>",
									"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
								}
							]
						},
						"description": "Gets the current user's Gmail profile."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/profile?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"profile"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>"
										},
										{
											"key": "access_token",
											"value": "<string>"
										},
										{
											"key": "alt",
											"value": "<string>"
										},
										{
											"key": "callback",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "oauth_token",
											"value": "<string>"
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>"
										},
										{
											"key": "quotaUser",
											"value": "<string>"
										},
										{
											"key": "upload_protocol",
											"value": "<string>"
										},
										{
											"key": "uploadType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"emailAddress\": \"minim\",\n \"historyId\": \"enim aliquip\",\n \"messagesTotal\": -44501922,\n \"threadsTotal\": 92725726\n}"
						}
					]
				},
				{
					"name": "gmail.users.stop",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gmail/v1/users/:userId/stop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gmail",
								"v1",
								"users",
								":userId",
								"stop"
							],
							"query": [
								{
									"key": "$.xgafv",
									"value": "<string>",
									"description": "V1 error format."
								},
								{
									"key": "access_token",
									"value": "<string>",
									"description": "OAuth access token."
								},
								{
									"key": "alt",
									"value": "<string>",
									"description": "Data format for response."
								},
								{
									"key": "callback",
									"value": "<string>",
									"description": "JSONP"
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Selector specifying which fields to include in a partial response."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
								},
								{
									"key": "oauth_token",
									"value": "<string>",
									"description": "OAuth 2.0 token for the current user."
								},
								{
									"key": "prettyPrint",
									"value": "<boolean>",
									"description": "Returns response with indentations and line breaks."
								},
								{
									"key": "quotaUser",
									"value": "<string>",
									"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
								},
								{
									"key": "upload_protocol",
									"value": "<string>",
									"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
								},
								{
									"key": "uploadType",
									"value": "<string>",
									"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
								}
							]
						},
						"description": "Stop receiving push notifications for the given user mailbox."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/stop?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"stop"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>"
										},
										{
											"key": "access_token",
											"value": "<string>"
										},
										{
											"key": "alt",
											"value": "<string>"
										},
										{
											"key": "callback",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "oauth_token",
											"value": "<string>"
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>"
										},
										{
											"key": "quotaUser",
											"value": "<string>"
										},
										{
											"key": "upload_protocol",
											"value": "<string>"
										},
										{
											"key": "uploadType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "gmail.users.watch",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"labelFilterAction\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"topicName\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/gmail/v1/users/:userId/watch?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gmail",
								"v1",
								"users",
								":userId",
								"watch"
							],
							"query": [
								{
									"key": "$.xgafv",
									"value": "<string>",
									"description": "V1 error format."
								},
								{
									"key": "access_token",
									"value": "<string>",
									"description": "OAuth access token."
								},
								{
									"key": "alt",
									"value": "<string>",
									"description": "Data format for response."
								},
								{
									"key": "callback",
									"value": "<string>",
									"description": "JSONP"
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "Selector specifying which fields to include in a partial response."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
								},
								{
									"key": "oauth_token",
									"value": "<string>",
									"description": "OAuth 2.0 token for the current user."
								},
								{
									"key": "prettyPrint",
									"value": "<boolean>",
									"description": "Returns response with indentations and line breaks."
								},
								{
									"key": "quotaUser",
									"value": "<string>",
									"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
								},
								{
									"key": "upload_protocol",
									"value": "<string>",
									"description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
								},
								{
									"key": "uploadType",
									"value": "<string>",
									"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The user's email address. The special value `me` can be used to indicate the authenticated user."
								}
							]
						},
						"description": "Set up or update a push notification watch on the given user mailbox."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labelFilterAction\": \"<string>\",\n    \"labelIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"topicName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gmail/v1/users/:userId/watch?$.xgafv=<string>&access_token=<string>&alt=<string>&callback=<string>&fields=<string>&key=<string>&oauth_token=<string>&prettyPrint=<boolean>&quotaUser=<string>&upload_protocol=<string>&uploadType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gmail",
										"v1",
										"users",
										":userId",
										"watch"
									],
									"query": [
										{
											"key": "$.xgafv",
											"value": "<string>"
										},
										{
											"key": "access_token",
											"value": "<string>"
										},
										{
											"key": "alt",
											"value": "<string>"
										},
										{
											"key": "callback",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "oauth_token",
											"value": "<string>"
										},
										{
											"key": "prettyPrint",
											"value": "<boolean>"
										},
										{
											"key": "quotaUser",
											"value": "<string>"
										},
										{
											"key": "upload_protocol",
											"value": "<string>"
										},
										{
											"key": "uploadType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"expiration\": \"ut culpa sunt aute\",\n \"historyId\": \"consequat sint\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://gmail.googleapis.com/",
			"type": "string"
		}
	]
}