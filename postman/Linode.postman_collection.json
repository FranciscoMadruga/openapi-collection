{
	"info": {
		"_postman_id": "5118653b-32fb-44bb-85d5-2ed7977a9670",
		"name": "Linode",
		"description": "# Introduction\nThe Linode API provides the ability to programmatically manage the full\nrange of Linode products and services.\n\nThis reference is designed to assist application developers and system\nadministrators.  Each endpoint includes descriptions, request syntax, and\nexamples using standard HTTP requests. Response data is returned in JSON\nformat.\n\n\nThis document was generated from our OpenAPI Specification.  See the\n<a target=\"_top\" href=\"https://www.openapis.org\">OpenAPI website</a> for more information.\n\n<a target=\"_top\" href=\"https://developers.linode.com/api/docs/v4/openapi.yaml\">Download the Linode OpenAPI Specification</a>.\n\n\n# Changelog\n\n<a target=\"_top\" href=\"https://developers.linode.com/changelog\">View our Changelog</a> to see release\nnotes on all changes made to our API.\n\n# Access and Authentication\n\nSome endpoints are publicly accessible without requiring authentication.\nAll endpoints affecting your Account, however, require either a Personal\nAccess Token or OAuth authentication (when using third-party\napplications).\n\n## Personal Access Token\n\nThe easiest way to access the API is with a Personal Access Token (PAT)\ngenerated from the\n<a target=\"_top\" href=\"https://cloud.linode.com/profile/tokens\">Linode Cloud Manager</a>.\n\nAll scopes for the OAuth security model (defined below) apply to this\nsecurity model as well.\n\n### Authentication\n\n| Security Scheme Type: | HTTP |\n|-----------------------|------|\n| **HTTP Authorization Scheme** | bearer |\n\n## OAuth\n\nThe OAuth workflow is a three-step process to authenticate a User before an\napplication can start making API calls on the User's behalf. If all you need\nis a Personal Access Token, feel free to skip ahead to the next section.\n\nFirst, the User visits the application's website and is directed to log with\nLinode. The User is then redirected to Linode's authentication server and\npresented the scope levels the application is requesting. Once the User\naccepts the request for access, we redirect them back to the application's\nspecified redirect URI with an access code.\n\nOnce the User has logged in to Linode and you have received an exchange code,\nyou will need to exchange that access code for an Authorization token. You\ndo this by making an HTTP POST request to the following address:\n\n```\nhttps://login.linode.com/oauth/token\n```\n\nMake this request as `application/x-www-form-urlencoded` or as\n`multipart/form-data` and include the following parameters in the POST body:\n\n| PARAMETER | DESCRIPTION |\n|-----------|-------------|\n| client_id | Your app's client ID |\n| client_secret | Your app's client secret |\n| code | The code you just received from the redirect |\n\nYou'll get a reponse like this:\n\n```json\n{\n  \"scope\": \"linodes:read_write\",\n  \"access_token\": \"03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\"\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7200,\n}\n```\n\nIncluded in the reponse is `access_token`. With this token, you can proceed to make\nauthenticated HTTP requests to the API by adding this header to each request:\n\n```\nAuthorization: Bearer 03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\n```\n\n### Authentication\n\n| Security Scheme Type: | Oauth2 |\n|-----------------------|--------|\n| **AuthorizationCode Oauth Flow** |  **Authorization URL:** https://login.linode.com/oauth/authorize<br />**Token URL:** https://login.linode.com/oauth/token<br />**Scopes:**<br /><ul><li>`account:read_only` - Allows access to GET information about your Account.</li><li>`account:read_write` - Allows access to all endpoints related to your Account.</li><li>`domains:read_only` - Allows access to GET Domains on your Account.</li><li>`domains:read_write` - Allows access to all Domain endpoints.</li><li>`events:read_only` - Allows access to GET your Events.</li><li>`events:read_write` - Allows access to all endpoints related to your Events.</li><li>`images:read_only` - Allows access to GET your Images.</li><li>`images:read_write` - Allows access to all endpoints related to your Images.</li><li>`ips:read_only` - Allows access to GET your ips.</li><li>`ips:read_write` - Allows access to all endpoints related to your ips.</li><li>`linodes:read_only` - Allows access to GET Linodes on your Account.</li><li>`linodes:read_write` - Allow access to all endpoints related to your Linodes.</li><li>`longview:read_only` - Allows access to GET your Longview Clients.</li><li>`longview:read_write` - Allows access to all endpoints related to your Longview Clients.</li><li>`nodebalancers:read_only` - Allows access to GET NodeBalancers on your Account.</li><li>`nodebalancers:read_write` - Allows access to all NodeBalancer endpoints.</li><li>`stackscripts:read_only` - Allows access to GET your StackScripts.</li><li>`stackscripts:read_write` - Allows access to all endpoints related to your StackScripts.</li><li>`volumes:read_only` - Allows access to GET your Volumes.</li><li>`volumes:read_write` - Allows access to all endpoints related to your Volumes.</li></ul><br />|\n\n# Requests\n\nRequests must be made over HTTPS to ensure transactions are encrypted. The\nfollowing Request methods are supported:\n\n| METHOD | USAGE |\n|--------|-------|\n| GET    | Retrieves data about collections and individual resources. |\n| POST   | For collections, creates a new resource of that type. Also used to perform actions on action endpoints. |\n| PUT    | Updates an existing resource. |\n| DELETE | Deletes a resource. This is a destructive action. |\n\n\n# Responses\n\nActions will return one following HTTP response status codes:\n\n| STATUS  | DESCRIPTION |\n|---------|-------------|\n| 200 OK  | The request was successful. |\n| 204 No Content | The server successfully fulfilled the request and there is no additional content to send. |\n| 400 Bad Request | You submitted an invalid request (missing parameters, etc.). |\n| 401 Unauthorized | You failed to authenticate for this resource. |\n| 403 Forbidden | You are authenticated, but don't have permission to do this. |\n| 404 Not Found | The resource you're requesting does not exist. |\n| 429 Too Many Requests | You've hit a rate limit. |\n| 500 Internal Server Error | Please [open a Support Ticket](/api/v4/support-tickets/#post). |\n\n# Errors\n\nSuccess is indicated via <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_top\">Standard HTTP status codes</a>.\n`2xx` codes indicate success, `4xx` codes indicate a request error, and\n`5xx` errors indicate a server error. A\nrequest error might be an invalid input, a required parameter being omitted,\nor a malformed request. A server error means something went wrong processing\nyour request. If this occurs, please\n[open a Support Ticket](/api/v4/support-tickets/#post)\nand let us know. Though errors are logged and we work quickly to resolve issues,\nopening a ticket and providing us with reproducable steps and data is always helpful.\n\nThe `errors` field is an array of the things that went wrong with your request.\nWe will try to include as many of the problems in the response as possible,\nbut it's conceivable that fixing these errors and resubmitting may result in\nnew errors coming back once we are able to get further along in the process\nof handling your request.\n\n\nWithin each error object, the `field` parameter will be included if the error\npertains to a specific field in the JSON you've submitted. This will be\nomitted if there is no relevant field. The `reason` is a human-readable\nexplanation of the error, and will always be included.\n\n# Pagination\n\nResource lists are always paginated. The response will look similar to this:\n\n```json\n{\n    \"data\": [ ... ],\n    \"page\": 1,\n    \"pages\": 3,\n    \"results\": 300\n}\n```\n\n* Pages start at 1. You may retrieve a specific page of results by adding\n`?page=x` to your URL (for example, `?page=4`). If the value of `page`\nexceeds `2^64/page_size`, the last possible page will be returned.\n\n\n* Page sizes default to 100,\nand can be set to return between 25 and 100. Page size can be set using\n`?page_size=x`.\n\n# Filtering and Sorting\n\nCollections are searchable by fields they include, marked in the spec as\n`x-linode-filterable: true`. Filters are passed\nin the `X-Filter` header and are formatted as JSON objects. Here is a request\ncall for Linode Types in our \"standard\" class:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \\\n    \"class\": \"standard\"\n  }'\n```\n\nThe filter object's keys are the keys of the object you're filtering,\nand the values are accepted values. You can add multiple filters by\nincluding more than one key. For example, filtering for \"standard\" Linode\nTypes that offer one vcpu:\n\n```Shell\n curl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \\\n    \"class\": \"standard\",\n    \"vcpus\": 1\n  }'\n```\n\nIn the above example, both filters are combined with an \"and\" operation.\nHowever, if you wanted either Types with one vcpu or Types in our \"standard\"\nclass, you can add an operator:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"+or\": [\n      { \"vcpus\": 1 },\n      { \"class\": \"standard\" }\n    ]\n  }'\n```\n\nEach filter in the `+or` array is its own filter object, and all conditions\nin it are combined with an \"and\" operation as they were in the previous example.\n\nOther operators are also available. Operators are keys of a Filter JSON\nobject. Their value must be of the appropriate type, and they are evaluated\nas described below:\n\n| OPERATOR | TYPE   | DESCRIPTION                       |\n|----------|--------|-----------------------------------|\n| +and     | array  | All conditions must be true.       |\n| +or      | array  | One condition must be true.        |\n| +gt      | number | Value must be greater than number. |\n| +gte     | number | Value must be greater than or equal to number. |\n| +lt      | number | Value must be less than number. |\n| +lte     | number | Value must be less than or equal to number. |\n| +contains | string | Given string must be in the value. |\n| +neq      | string | Does not equal the value.          |\n| +order_by | string | Attribute to order the results by - must be filterable. |\n| +order    | string | Either \"asc\" or \"desc\". Defaults to \"asc\". Requires `+order_by`. |\n\nFor example, filtering for [Linode Types](/api/v4/linode-types)\nthat offer memory equal to or higher than 61440:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"memory\": {\n      \"+gte\": 61440\n    }\n  }'\n```\n\nYou can combine and nest operators to construct arbitrarily-complex queries.\nFor example, give me all [Linode Types](/api/v4/linode-types)\nwhich are either `standard` or `highmem` class, or\nhave between 12 and 20 vcpus:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"+or\": [\n      {\n        \"+or\": [\n          {\n            \"class\": \"standard\"\n          },\n          {\n            \"class\": \"highmem\"\n          }\n        ]\n      },\n      {\n        \"+and\": [\n          {\n            \"vcpus\": {\n              \"+gte\": 12\n            }\n          },\n          {\n            \"vcpus\": {\n              \"+lte\": 20\n            }\n          }\n        ]\n      }\n    ]\n  }'\n```\n\n# CLI (Command Line Interface)\n\nThe <a href=\"https://github.com/linode/linode-cli\" target=\"_top\">Linode CLI</a> allows you to easily\nwork with the API using intuitive and simple syntax. It requires a\n[Personal Access Token](#section/Personal-Access-Token)\nfor authentication, and gives you access to all of the features and functionality\nof the Linode API that are documented here with CLI examples.\n\nEndpoints that do not have CLI examples are currently unavailable through the CLI, but\ncan be accessed via other methods such as Shell commands and other third-party applications.\n\n# APIv3\n\nView the [Linode APIv3 Documentation](https://linode.com/apiv3).\n\n\nContact Support:\n Name: Linode",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27825666",
		"_collection_link": "https://www.postman.com/api-evangelist/workspace/linode/collection/35240-5118653b-32fb-44bb-85d5-2ed7977a9670?action=share&creator=27825666&source=collection_link"
	},
	"item": [
		{
			"name": "account",
			"item": [
				{
					"name": "events",
					"item": [
						{
							"name": "{event Id}",
							"item": [
								{
									"name": "View Event",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/events/:eventId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"events",
												":eventId"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Event."
												}
											]
										},
										"description": "Returns a single Event object."
									},
									"response": [
										{
											"name": "An Event object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"ticket_create\",\n \"created\": \"1958-07-26T02:59:23.464Z\",\n \"entity\": {\n  \"id\": 11111,\n  \"label\": \"Problem booting my Linode\",\n  \"type\": \"ticket\",\n  \"url\": \"/v4/support/tickets/11111\"\n },\n \"id\": 123,\n \"percent_complete\": 14706154,\n \"rate\": \"esse minim dolore ut\",\n \"read\": true,\n \"secondary_entity\": {\n  \"id\": \"linode/debian9\",\n  \"label\": \"linode1234\",\n  \"type\": \"linode\",\n  \"url\": \"/v4/linode/instances/1234\"\n },\n \"seen\": true,\n \"status\": \"finished\",\n \"time_remaining\": null,\n \"username\": \"exampleUser\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Mark Event as Read",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/events/:eventId/read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"events",
												":eventId",
												"read"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Event to designate as read."
												}
											]
										},
										"description": "Marks a single Event as read."
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId/read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId",
														"read"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Event read.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId/read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId",
														"read"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Mark Event as Seen",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/events/:eventId/seen",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"events",
												":eventId",
												"seen"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Event to designate as seen."
												}
											]
										},
										"description": "Marks all Events up to and including this Event by ID as seen.\n"
									},
									"response": [
										{
											"name": "Events seen.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId/seen",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId",
														"seen"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/events/:eventId/seen",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"events",
														":eventId",
														"seen"
													],
													"variable": [
														{
															"key": "eventId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Events",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/events?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"events"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a collection of Event objects representing actions taken on your Account. The Events returned depends on your grants.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/events?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"events"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Returns a paginated lists of Event objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/events?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"events"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"action\": \"ticket_create\",\n   \"created\": \"1941-06-21T19:34:12.895Z\",\n   \"entity\": {\n    \"id\": 11111,\n    \"label\": \"Problem booting my Linode\",\n    \"type\": \"ticket\",\n    \"url\": \"/v4/support/tickets/11111\"\n   },\n   \"id\": 123,\n   \"percent_complete\": -29247483,\n   \"rate\": \"elit ea \",\n   \"read\": true,\n   \"secondary_entity\": {\n    \"id\": \"linode/debian9\",\n    \"label\": \"linode1234\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/1234\"\n   },\n   \"seen\": true,\n   \"status\": \"failed\",\n   \"time_remaining\": null,\n   \"username\": \"exampleUser\"\n  },\n  {\n   \"action\": \"ticket_create\",\n   \"created\": \"1952-08-31T02:12:01.632Z\",\n   \"entity\": {\n    \"id\": 11111,\n    \"label\": \"Problem booting my Linode\",\n    \"type\": \"ticket\",\n    \"url\": \"/v4/support/tickets/11111\"\n   },\n   \"id\": 123,\n   \"percent_complete\": -240511,\n   \"rate\": \"laborum ex ullamco quis\",\n   \"read\": true,\n   \"secondary_entity\": {\n    \"id\": \"linode/debian9\",\n    \"label\": \"linode1234\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/1234\"\n   },\n   \"seen\": true,\n   \"status\": \"notification\",\n   \"time_remaining\": null,\n   \"username\": \"exampleUser\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						}
					]
				},
				{
					"name": "invoices",
					"item": [
						{
							"name": "{invoice Id}",
							"item": [
								{
									"name": "View Invoice",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/invoices/:invoiceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"invoices",
												":invoiceId"
											],
											"variable": [
												{
													"key": "invoiceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Invoice."
												}
											]
										},
										"description": "Returns a single Invoice object."
									},
									"response": [
										{
											"name": "An Invoice object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/invoices/:invoiceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"invoices",
														":invoiceId"
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"date\": \"1941-04-19T12:47:16.027Z\",\n \"id\": 123,\n \"label\": \"Invoice\",\n \"subtotal\": 120,\n \"tax\": 12,\n \"total\": 132\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/invoices/:invoiceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"invoices",
														":invoiceId"
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "List Invoice Items",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/invoices/:invoiceId/items?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"invoices",
												":invoiceId",
												"items"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of a collection to return."
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "invoiceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Invoice."
												}
											]
										},
										"description": "Returns a paginated list of Invoice items."
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/invoices/:invoiceId/items?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"invoices",
														":invoiceId",
														"items"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "A paginated list of InvoiceItem objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/invoices/:invoiceId/items?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"invoices",
														":invoiceId",
														"items"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"amount\": 20,\n   \"from\": \"1996-03-22T11:49:51.461Z\",\n   \"label\": \"Linode 123\",\n   \"quantity\": 2,\n   \"tax\": 2,\n   \"to\": \"2007-09-25T23:16:32.857Z\",\n   \"total\": 22,\n   \"type\": \"hourly\",\n   \"unitprice\": 10\n  },\n  {\n   \"amount\": 20,\n   \"from\": \"1956-12-18T15:43:51.371Z\",\n   \"label\": \"Linode 123\",\n   \"quantity\": 2,\n   \"tax\": 2,\n   \"to\": \"1985-05-09T22:34:34.542Z\",\n   \"total\": 22,\n   \"type\": \"misc\",\n   \"unitprice\": 10\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Invoices",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/invoices?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"invoices"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Invoices against your Account.\n"
							},
							"response": [
								{
									"name": "Returns a paginated list of Invoice objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/invoices?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"invoices"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"date\": \"1998-02-28T20:47:35.828Z\",\n   \"id\": 123,\n   \"label\": \"Invoice\",\n   \"subtotal\": 120,\n   \"tax\": 12,\n   \"total\": 132\n  },\n  {\n   \"date\": \"1962-05-02T15:08:52.241Z\",\n   \"id\": 123,\n   \"label\": \"Invoice\",\n   \"subtotal\": 120,\n   \"tax\": 12,\n   \"total\": 132\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/invoices?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"invoices"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "oauth-clients",
					"item": [
						{
							"name": "{client Id}",
							"item": [
								{
									"name": "thumbnail",
									"item": [
										{
											"name": "View OAuth Client Thumbnail",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The OAuth Client ID to look up."
														}
													]
												},
												"description": "Returns the thumbnail for this OAuth Client.  This is a publicly-viewable endpoint, and can be accessed without authentication.\n"
											},
											"response": [
												{
													"name": "The client's thumbnail.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"oauth-clients",
																":clientId",
																"thumbnail"
															],
															"variable": [
																{
																	"key": "clientId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "image/png"
														}
													],
													"cookie": [],
													"body": "tempor Lorem commodo proident"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"oauth-clients",
																":clientId",
																"thumbnail"
															],
															"variable": [
																{
																	"key": "clientId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Update OAuth Client Thumbnail",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "image/png"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<binary>\""
												},
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The OAuth Client ID to look up."
														}
													]
												},
												"description": "Upload a thumbnail for a client you own.  You must upload an image file that will be returned when the thumbnail is retrieved.  This image will be publicly-viewable.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<binary>\""
														},
														"url": {
															"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"oauth-clients",
																":clientId",
																"thumbnail"
															],
															"variable": [
																{
																	"key": "clientId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "Thumbnail updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<binary>\""
														},
														"url": {
															"raw": "{{baseUrl}}/account/oauth-clients/:clientId/thumbnail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"oauth-clients",
																":clientId",
																"thumbnail"
															],
															"variable": [
																{
																	"key": "clientId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "Delete OAuth Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The OAuth Client ID to look up."
												}
											]
										},
										"description": "Deletes an OAuth Client registered with Linode. The Client ID and Client secret will no longer be accepted by <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a>, and all tokens issued to this client will be invalidated (meaning that if your application was using a token, it will no longer work).\n"
									},
									"response": [
										{
											"name": "Client deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View OAuth Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The OAuth Client ID to look up."
												}
											]
										},
										"description": "Returns information about a single OAuth client.\n"
									},
									"response": [
										{
											"name": "Information about the requested client.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"2737bf16b39ab5d7b4a1\",\n \"label\": \"Test_Client_1\",\n \"public\": false,\n \"redirect_uri\": \"https://example.org/oauth/callback\",\n \"secret\": \"<REDACTED>\",\n \"status\": \"active\",\n \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update OAuth Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\",\n    \"redirect_uri\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The OAuth Client ID to look up."
												}
											]
										},
										"description": "Update information about an OAuth Client on your Account. This can be especially useful to update the `redirect_uri` of your client in the event that the callback url changed in your application.\n"
									},
									"response": [
										{
											"name": "Client updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"Test_Client_1\",\n    \"redirect_uri\": \"https://example.org/oauth/callback\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"2737bf16b39ab5d7b4a1\",\n \"label\": \"Test_Client_1\",\n \"public\": false,\n \"redirect_uri\": \"https://example.org/oauth/callback\",\n \"secret\": \"<REDACTED>\",\n \"status\": \"active\",\n \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"Test_Client_1\",\n    \"redirect_uri\": \"https://example.org/oauth/callback\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Reset OAuth Client Secret",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients/:clientId/reset-secret",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients",
												":clientId",
												"reset-secret"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The OAuth Client ID to look up."
												}
											]
										},
										"description": "Resets the OAuth Client secret for a client you own, and returns the OAuth Client with the plaintext secret. This secret is not supposed to be publicly known or disclosed anywhere. This can be used to generate a new secret in case the one you have has been leaked, or to get a new secret if you lost the original. The old secret is expired immediately, and logins to your client with the old secret will fail.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId/reset-secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId",
														"reset-secret"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Client secret reset successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/oauth-clients/:clientId/reset-secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"oauth-clients",
														":clientId",
														"reset-secret"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"2737bf16b39ab5d7b4a1\",\n \"label\": \"Test_Client_1\",\n \"public\": false,\n \"redirect_uri\": \"https://example.org/oauth/callback\",\n \"secret\": \"<REDACTED>\",\n \"status\": \"active\",\n \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List OAuth Clients",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/oauth-clients?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"oauth-clients"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of OAuth Clients registered to your Account.  OAuth Clients allow users to log into applications you write or host using their Linode Account, and may allow them to grant some level of access to their Linodes or other entities to your application.\n"
							},
							"response": [
								{
									"name": "A paginated list of OAuth Clients.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": \"2737bf16b39ab5d7b4a1\",\n   \"label\": \"Test_Client_1\",\n   \"public\": false,\n   \"redirect_uri\": \"https://example.org/oauth/callback\",\n   \"secret\": \"<REDACTED>\",\n   \"status\": \"active\",\n   \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n  },\n  {\n   \"id\": \"2737bf16b39ab5d7b4a1\",\n   \"label\": \"Test_Client_1\",\n   \"public\": false,\n   \"redirect_uri\": \"https://example.org/oauth/callback\",\n   \"secret\": \"<REDACTED>\",\n   \"status\": \"active\",\n   \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create OAuth Client",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"public\": \"<boolean>\",\n    \"id\": \"ea labore veniam\",\n    \"label\": \"culp\",\n    \"redirect_uri\": \"ad qu\",\n    \"secret\": \"laborum in do fugiat\",\n    \"status\": \"disabled\",\n    \"thumbnail_url\": \"ut sint\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"oauth-clients"
									]
								},
								"description": "Creates an OAuth Client, which can be used to allow users (using their Linode account) to log in to your own application, and optionally grant your application some amount of access to their Linodes or other entities.\n"
							},
							"response": [
								{
									"name": "Client created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"public\": false,\n    \"id\": \"2737bf16b39ab5d7b4a1\",\n    \"label\": \"Test_Client_1\",\n    \"redirect_uri\": \"https://example.org/oauth/callback\",\n    \"secret\": \"<REDACTED>\",\n    \"status\": \"active\",\n    \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"2737bf16b39ab5d7b4a1\",\n \"label\": \"Test_Client_1\",\n \"public\": false,\n \"redirect_uri\": \"https://example.org/oauth/callback\",\n \"secret\": \"<REDACTED>\",\n \"status\": \"active\",\n \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"public\": false,\n    \"id\": \"2737bf16b39ab5d7b4a1\",\n    \"label\": \"Test_Client_1\",\n    \"redirect_uri\": \"https://example.org/oauth/callback\",\n    \"secret\": \"<REDACTED>\",\n    \"status\": \"active\",\n    \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/oauth-clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"oauth-clients"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "paypal",
							"item": [
								{
									"name": "Stage PayPal Payment",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cancel_url\": \"<string>\",\n    \"redirect_url\": \"<string>\",\n    \"usd\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/payments/paypal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments",
												"paypal"
											]
										},
										"description": "This begins the process of submitting a Payment via PayPal. After calling this endpoint, you must take the resulting `payment_id` along with the `payer_id` from your PayPal account and [POST /account/payments/paypal-execute](/api/v4/account-payments-paypal-execute/#post) to complete the Payment.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cancel_url\": \"https://example.org\",\n    \"redirect_url\": \"https://example.org\",\n    \"usd\": \"120.50\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/payments/paypal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"payments",
														"paypal"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "PayPal Payment staged.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cancel_url\": \"https://example.org\",\n    \"redirect_url\": \"https://example.org\",\n    \"usd\": \"120.50\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/payments/paypal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"payments",
														"paypal"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"checkout_token\": \"EC-1A2B3C4D5E6F7G8H9\",\n \"payment_id\": \"PAY-1234567890ABCDEFGHIJKLMN\"\n}"
										}
									]
								},
								{
									"name": "Execute Staged/Approved PayPal Payment",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payer_id\": \"<string>\",\n    \"payment_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/payments/paypal/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments",
												"paypal",
												"execute"
											]
										},
										"description": "Given a PaymentID and PayerID - as generated by PayPal during the transaction authorization process - this endpoint executes the Payment to capture the funds and credit your Linode Account.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"payer_id\": \"ABCDEFGHIJKLM\",\n    \"payment_id\": \"PAY-1234567890ABCDEFGHIJKLMN\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/payments/paypal/execute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"payments",
														"paypal",
														"execute"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "PayPal Payment executed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"payer_id\": \"ABCDEFGHIJKLM\",\n    \"payment_id\": \"PAY-1234567890ABCDEFGHIJKLMN\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/payments/paypal/execute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"payments",
														"paypal",
														"execute"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "List Payments",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/payments?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"payments"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Payments made on this Account.\n"
							},
							"response": [
								{
									"name": "Returns a paginated list of Payment objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/payments?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"date\": \"2020-02-22T16:36:09.961Z\",\n   \"id\": 123,\n   \"usd\": -87433751\n  },\n  {\n   \"date\": \"1998-10-08T09:17:07.334Z\",\n   \"id\": 123,\n   \"usd\": -80519118\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/payments?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Make Payment",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"usd\": \"<string>\",\n    \"cvv\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"payments"
									]
								},
								"description": "Makes a Payment to your Account via credit card. This will charge your credit card the requested amount.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"usd\": \"120.50\",\n    \"cvv\": \"123\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Payment made.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"usd\": \"120.50\",\n    \"cvv\": \"123\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"date\": \"1973-02-10T20:30:18.125Z\",\n \"id\": 123,\n \"usd\": -42295595\n}"
								}
							]
						},
						{
							"name": "View Payment",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/payments/:paymentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"payments",
										":paymentId"
									],
									"variable": [
										{
											"key": "paymentId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Payment to look up."
										}
									]
								},
								"description": "Returns information about a specific Payment.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A Payment object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/payments/:paymentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"date\": \"1973-02-10T20:30:18.125Z\",\n \"id\": 123,\n \"usd\": -42295595\n}"
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "View Account Settings",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"settings"
									]
								},
								"description": "Returns information related to your Account settings: Managed service subscription, Longview subscription, and network helper.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Returns a single Account settings object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"backups_enabled\": true,\n \"longview_subscription\": \"longview-30\",\n \"managed\": true,\n \"network_helper\": false\n}"
								}
							]
						},
						{
							"name": "Update Account Settings",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backups_enabled\": \"<boolean>\",\n    \"longview_subscription\": \"<string>\",\n    \"network_helper\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"settings"
									]
								},
								"description": "Updates your Account settings.\n"
							},
							"response": [
								{
									"name": "The updated Account settings.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backups_enabled\": true,\n    \"longview_subscription\": \"longview-30\",\n    \"network_helper\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"backups_enabled\": true,\n \"longview_subscription\": \"longview-30\",\n \"managed\": true,\n \"network_helper\": false\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backups_enabled\": true,\n    \"longview_subscription\": \"longview-30\",\n    \"network_helper\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Enable Linode Managed",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/settings/managed-enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"settings",
										"managed-enable"
									]
								},
								"description": "Enables Linode Managed for the entire account and sends a welcome email to the account's associated email address. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. See our [Linode Managed guide](https://linode.com/docs/platform/linode-managed/) to learn more.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/settings/managed-enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings",
												"managed-enable"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Managed services enabled for account.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/settings/managed-enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"settings",
												"managed-enable"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{username}",
							"item": [
								{
									"name": "grants",
									"item": [
										{
											"name": "View User's grants",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/users/:username/grants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username",
														"grants"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The username to look up."
														}
													]
												},
												"description": "Returns the full grants structure for this User. This includes all entities on the Account alongside what level of access this User has to each of them. Individual users may view their own grants at the [/profile/grants](/api/v4/profile-grants) endpoint, but will not see entities that they have no access to.\n"
											},
											"response": [
												{
													"name": "The User's grants.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/account/users/:username/grants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"users",
																":username",
																"grants"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"domain\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"global\": {\n  \"account_access\": \"read_only\",\n  \"add_domains\": true,\n  \"add_images\": true,\n  \"add_linodes\": true,\n  \"add_longview\": true,\n  \"add_nodebalancers\": true,\n  \"add_stackscripts\": true,\n  \"add_volumes\": true,\n  \"cancel_account\": false,\n  \"longview_subscription\": true\n },\n \"image\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"linode\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"longview\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"nodebalancer\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"stackscript\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"volume\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ]\n}"
												},
												{
													"name": "This is an unrestricted User, and therefore has no grants to return. This User may access everything on the Account and perform all actions.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/account/users/:username/grants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"users",
																":username",
																"grants"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/account/users/:username/grants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"users",
																":username",
																"grants"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Update User's grants",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"domain\": [\n        {\n            \"id\": 21268462,\n            \"label\": \"in magna pariatur ut\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 8037638,\n            \"label\": \"magna eu in irure\",\n            \"permissions\": \"null\"\n        }\n    ],\n    \"global\": {\n        \"account_access\": \"<string>\",\n        \"add_domains\": \"<boolean>\",\n        \"add_images\": \"<boolean>\",\n        \"add_linodes\": \"<boolean>\",\n        \"add_longview\": \"<boolean>\",\n        \"add_nodebalancers\": \"<boolean>\",\n        \"add_stackscripts\": \"<boolean>\",\n        \"add_volumes\": \"<boolean>\",\n        \"cancel_account\": \"<boolean>\",\n        \"longview_subscription\": \"<boolean>\"\n    },\n    \"image\": [\n        {\n            \"id\": -18383072,\n            \"label\": \"tempor ut do\",\n            \"permissions\": \"null\"\n        },\n        {\n            \"id\": 33709503,\n            \"label\": \"minim sint sit in\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"linode\": [\n        {\n            \"id\": -82178516,\n            \"label\": \"consectetur q\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 32912547,\n            \"label\": \"culpa enim cupidatat officia\",\n            \"permissions\": \"read_write\"\n        }\n    ],\n    \"longview\": [\n        {\n            \"id\": 4717156,\n            \"label\": \"cupidatat ipsum minim Duis\",\n            \"permissions\": \"read_write\"\n        },\n        {\n            \"id\": -20446328,\n            \"label\": \"voluptate\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"nodebalancer\": [\n        {\n            \"id\": -52196336,\n            \"label\": \"proident sed\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 775670,\n            \"label\": \"aute\",\n            \"permissions\": \"read_write\"\n        }\n    ],\n    \"stackscript\": [\n        {\n            \"id\": 59635464,\n            \"label\": \"fugiat id\",\n            \"permissions\": \"read_write\"\n        },\n        {\n            \"id\": -53173919,\n            \"label\": \"in proident\",\n            \"permissions\": \"read_write\"\n        }\n    ],\n    \"volume\": [\n        {\n            \"id\": -17529579,\n            \"label\": \"eiusmod dolor laborum pariatur\",\n            \"permissions\": \"null\"\n        },\n        {\n            \"id\": 51609467,\n            \"label\": \"sit fugiat\",\n            \"permissions\": \"null\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/users/:username/grants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username",
														"grants"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The username to look up."
														}
													]
												},
												"description": "Update the grants a User has. This can be used to give a User access to new entities or actions, or take access away.  You do not need to include the grant for every entity on the Account in this request; any that are not included will remain unchanged.\n"
											},
											"response": [
												{
													"name": "Grants updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"domain\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"global\": {\n        \"account_access\": \"read_only\",\n        \"add_domains\": true,\n        \"add_images\": true,\n        \"add_linodes\": true,\n        \"add_longview\": true,\n        \"add_nodebalancers\": true,\n        \"add_stackscripts\": true,\n        \"add_volumes\": true,\n        \"cancel_account\": false,\n        \"longview_subscription\": true\n    },\n    \"image\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"linode\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"longview\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"nodebalancer\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"stackscript\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"volume\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/account/users/:username/grants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"users",
																":username",
																"grants"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"domain\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"global\": {\n  \"account_access\": \"read_only\",\n  \"add_domains\": true,\n  \"add_images\": true,\n  \"add_linodes\": true,\n  \"add_longview\": true,\n  \"add_nodebalancers\": true,\n  \"add_stackscripts\": true,\n  \"add_volumes\": true,\n  \"cancel_account\": false,\n  \"longview_subscription\": true\n },\n \"image\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"linode\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"longview\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"nodebalancer\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"stackscript\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"volume\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ]\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"domain\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"global\": {\n        \"account_access\": \"read_only\",\n        \"add_domains\": true,\n        \"add_images\": true,\n        \"add_linodes\": true,\n        \"add_longview\": true,\n        \"add_nodebalancers\": true,\n        \"add_stackscripts\": true,\n        \"add_volumes\": true,\n        \"cancel_account\": false,\n        \"longview_subscription\": true\n    },\n    \"image\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"linode\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"longview\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"nodebalancer\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"stackscript\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ],\n    \"volume\": [\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        },\n        {\n            \"id\": 123,\n            \"label\": \"example-entity\",\n            \"permissions\": \"read_only\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/account/users/:username/grants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																"users",
																":username",
																"grants"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete User",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/users/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The username to look up."
												}
											]
										},
										"description": "Deletes a User. The deleted User will be immediately logged out and may no longer log in or perform any actions. All of the User's Grants will be removed.\n"
									},
									"response": [
										{
											"name": "User deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View User",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/users/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The username to look up."
												}
											]
										},
										"description": "Returns information about a single User on your Account.\n"
									},
									"response": [
										{
											"name": "The requested User object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"example_user@linode.com\",\n \"restricted\": true,\n \"ssh_keys\": [\n  \"home-pc\",\n  \"laptop\"\n ],\n \"username\": \"example_user\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update User",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"restricted\": \"<boolean>\",\n    \"ssh_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/users/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The username to look up."
												}
											]
										},
										"description": "Update information about a User on your Account. This can be used to change the restricted status of a User. When making a User restricted, no grants will be configured by default and you must then set up grants in order for the User to access anything on the Account.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"restricted\": true,\n    \"ssh_keys\": [\n        \"home-pc\",\n        \"laptop\"\n    ],\n    \"username\": \"example_user\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "User updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"restricted\": true,\n    \"ssh_keys\": [\n        \"home-pc\",\n        \"laptop\"\n    ],\n    \"username\": \"example_user\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/account/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"example_user@linode.com\",\n \"restricted\": true,\n \"ssh_keys\": [\n  \"home-pc\",\n  \"laptop\"\n ],\n \"username\": \"example_user\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Users",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/users?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Users on your Account. Users may access all or part of your Account based on their restricted status and grants.  An unrestricted User may access everything on the account, whereas restricted User may only access entities or perform actions they've been given specific grants to.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/users?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of Users.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/users?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"email\": \"example_user@linode.com\",\n   \"restricted\": true,\n   \"ssh_keys\": [\n    \"home-pc\",\n    \"laptop\"\n   ],\n   \"username\": \"example_user\"\n  },\n  {\n   \"email\": \"example_user@linode.com\",\n   \"restricted\": true,\n   \"ssh_keys\": [\n    \"home-pc\",\n    \"laptop\"\n   ],\n   \"username\": \"example_user\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"email\": \"<email>\",\n    \"restricted\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"users"
									]
								},
								"description": "Creates a User on your Account. Once created, the User will be able to log in and access portions of your Account. Access is determined by whether or not they are restricted, and what grants they have been given.\n"
							},
							"response": [
								{
									"name": "New User created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"example_user\",\n    \"email\": \"example_user@linode.com\",\n    \"restricted\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"email\": \"example_user@linode.com\",\n \"restricted\": true,\n \"ssh_keys\": [\n  \"home-pc\",\n  \"laptop\"\n ],\n \"username\": \"example_user\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"example_user\",\n    \"email\": \"example_user@linode.com\",\n    \"restricted\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/account/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "View Account",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						},
						"description": "Returns the contact and billing information related to your Account.\n"
					},
					"response": [
						{
							"name": "Returns a single Account object.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active_promotions\": [\n  {\n   \"credit_monthly_cap\": \"10.00\",\n   \"credit_remaining\": \"50.00\",\n   \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n   \"expire_dt\": \"2018-01-31T23:59:59\",\n   \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n   \"summary\": \"$10 off your Linode a month!\",\n   \"this_month_credit_remaining\": \"10.00\"\n  },\n  {\n   \"credit_monthly_cap\": \"10.00\",\n   \"credit_remaining\": \"50.00\",\n   \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n   \"expire_dt\": \"2018-01-31T23:59:59\",\n   \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n   \"summary\": \"$10 off your Linode a month!\",\n   \"this_month_credit_remaining\": \"10.00\"\n  }\n ],\n \"active_since\": \"1965-04-14T12:38:47.523Z\",\n \"address_1\": \"123 Main Street\",\n \"address_2\": \"Suite A\",\n \"balance\": 200,\n \"balance_uninvoiced\": 145,\n \"capabilities\": [\n  \"Ut proide\",\n  \"sint aliquip proident Duis\"\n ],\n \"city\": \"Philadelphia\",\n \"company\": \"Linode LLC\",\n \"country\": \"US\",\n \"credit_card\": {\n  \"expiry\": \"11/2022\",\n  \"last_four\": \"anim deserunt aliquip tempor\"\n },\n \"email\": \"john.smith@linode.com\",\n \"first_name\": \"John\",\n \"last_name\": \"Smith\",\n \"phone\": \"215-555-1212\",\n \"state\": \"Pennsylvania\",\n \"tax_id\": \"ATU99999999\",\n \"zip\": \"ad u\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update Account",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active_promotions\": [\n        {\n            \"credit_monthly_cap\": \"<string>\",\n            \"credit_remaining\": \"<string>\",\n            \"description\": \"<string>\",\n            \"expire_dt\": \"<string>\",\n            \"image_url\": \"<string>\",\n            \"summary\": \"<string>\",\n            \"this_month_credit_remaining\": \"<string>\"\n        },\n        {\n            \"credit_monthly_cap\": \"<string>\",\n            \"credit_remaining\": \"<string>\",\n            \"description\": \"<string>\",\n            \"expire_dt\": \"<string>\",\n            \"image_url\": \"<string>\",\n            \"summary\": \"<string>\",\n            \"this_month_credit_remaining\": \"<string>\"\n        }\n    ],\n    \"address_1\": \"<string>\",\n    \"address_2\": \"<string>\",\n    \"city\": \"<string>\",\n    \"company\": \"<string>\",\n    \"country\": \"<string>\",\n    \"email\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"state\": \"<string>\",\n    \"tax_id\": \"<string>\",\n    \"zip\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						},
						"description": "Updates contact and billing information related to your Account.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active_promotions\": [\n        {\n            \"credit_monthly_cap\": \"10.00\",\n            \"credit_remaining\": \"50.00\",\n            \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n            \"expire_dt\": \"2018-01-31T23:59:59\",\n            \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n            \"summary\": \"$10 off your Linode a month!\",\n            \"this_month_credit_remaining\": \"10.00\"\n        },\n        {\n            \"credit_monthly_cap\": \"10.00\",\n            \"credit_remaining\": \"50.00\",\n            \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n            \"expire_dt\": \"2018-01-31T23:59:59\",\n            \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n            \"summary\": \"$10 off your Linode a month!\",\n            \"this_month_credit_remaining\": \"10.00\"\n        }\n    ],\n    \"address_1\": \"123 Main Street\",\n    \"address_2\": \"Suite A\",\n    \"city\": \"Philadelphia\",\n    \"company\": \"Linode LLC\",\n    \"country\": \"US\",\n    \"email\": \"john.smith@linode.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"215-555-1212\",\n    \"state\": \"Pennsylvania\",\n    \"tax_id\": \"ATU99999999\",\n    \"zip\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "The updated Account.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active_promotions\": [\n        {\n            \"credit_monthly_cap\": \"10.00\",\n            \"credit_remaining\": \"50.00\",\n            \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n            \"expire_dt\": \"2018-01-31T23:59:59\",\n            \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n            \"summary\": \"$10 off your Linode a month!\",\n            \"this_month_credit_remaining\": \"10.00\"\n        },\n        {\n            \"credit_monthly_cap\": \"10.00\",\n            \"credit_remaining\": \"50.00\",\n            \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n            \"expire_dt\": \"2018-01-31T23:59:59\",\n            \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n            \"summary\": \"$10 off your Linode a month!\",\n            \"this_month_credit_remaining\": \"10.00\"\n        }\n    ],\n    \"address_1\": \"123 Main Street\",\n    \"address_2\": \"Suite A\",\n    \"city\": \"Philadelphia\",\n    \"company\": \"Linode LLC\",\n    \"country\": \"US\",\n    \"email\": \"john.smith@linode.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"215-555-1212\",\n    \"state\": \"Pennsylvania\",\n    \"tax_id\": \"ATU99999999\",\n    \"zip\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active_promotions\": [\n  {\n   \"credit_monthly_cap\": \"10.00\",\n   \"credit_remaining\": \"50.00\",\n   \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n   \"expire_dt\": \"2018-01-31T23:59:59\",\n   \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n   \"summary\": \"$10 off your Linode a month!\",\n   \"this_month_credit_remaining\": \"10.00\"\n  },\n  {\n   \"credit_monthly_cap\": \"10.00\",\n   \"credit_remaining\": \"50.00\",\n   \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n   \"expire_dt\": \"2018-01-31T23:59:59\",\n   \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n   \"summary\": \"$10 off your Linode a month!\",\n   \"this_month_credit_remaining\": \"10.00\"\n  }\n ],\n \"active_since\": \"1996-03-28T19:30:55.592Z\",\n \"address_1\": \"123 Main Street\",\n \"address_2\": \"Suite A\",\n \"balance\": 200,\n \"balance_uninvoiced\": 145,\n \"capabilities\": [\n  \"et adipisicing velit aute occaecat\",\n  \"minim exercitation esse in\"\n ],\n \"city\": \"Philadelphia\",\n \"company\": \"Linode LLC\",\n \"country\": \"US\",\n \"credit_card\": {\n  \"expiry\": \"11/2022\",\n  \"last_four\": \"fugiat cupidatat\"\n },\n \"email\": \"john.smith@linode.com\",\n \"first_name\": \"John\",\n \"last_name\": \"Smith\",\n \"phone\": \"215-555-1212\",\n \"state\": \"Pennsylvania\",\n \"tax_id\": \"ATU99999999\",\n \"zip\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Cancel Account",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"cancel"
							]
						},
						"description": "Cancels an active Linode account. This action will cause Linode to attempt to charge the credit card on file for the remaining balance. An error will occur if Linode fails to charge the credit card on file. Restricted users will not be able to cancel an account.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comments\": \"I'm consolidating multiple accounts into one.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"cancel"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Could not charge the credit card on file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comments\": \"I'm consolidating multiple accounts into one.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"cancel"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"reason\": \"We were unable to charge your credit card for services rendered. We cannot cancel this account until the balance has been paid.\\n\"\n  },\n  {\n   \"reason\": \"We were unable to charge your credit card for services rendered. We cannot cancel this account until the balance has been paid.\\n\"\n  }\n ]\n}"
						},
						{
							"name": "Account cancelled",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comments\": \"I'm consolidating multiple accounts into one.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"survey_link\": \"https://alinktothesurvey.com\"\n}"
						}
					]
				},
				{
					"name": "Add/Edit Credit Card",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"card_number\": \"<PAN>\",\n    \"expiry_month\": \"<integer>\",\n    \"expiry_year\": \"<integer>\",\n    \"cvv\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/credit-card",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"credit-card"
							]
						},
						"description": "Adds/edit credit card information to your Account.\nOnly one credit card can be associated with your Account, so using this endpoint will overwrite your currently active card information with the new credit card.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"card_number\": \"<PAN>\",\n    \"expiry_month\": 12,\n    \"expiry_year\": 2020,\n    \"cvv\": \"123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/credit-card",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"credit-card"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Credit Card updated.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"card_number\": \"<PAN>\",\n    \"expiry_month\": 12,\n    \"expiry_year\": 2020,\n    \"cvv\": \"123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/credit-card",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"credit-card"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "List Notifications",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"notifications"
							]
						},
						"description": "Returns a collection of Notification objects representing important, often time-sensitive items related to your Account.\nYou cannot interact directly with Notifications, and a Notification will disappear when the circumstances causing it have been resolved. For example, if you have an important Ticket open, you must respond to the Ticket to dismiss the Notification.\n"
					},
					"response": [
						{
							"name": "Returns a paginated list of Notification objects.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"body\": null,\n   \"entity\": {\n    \"id\": 3456,\n    \"label\": \"Linode not booting.\",\n    \"type\": \"ticket\",\n    \"url\": \"/support/tickets/3456\"\n   },\n   \"label\": \"You have an important ticket open!\",\n   \"message\": \"You have an important ticket open!\",\n   \"severity\": \"major\",\n   \"type\": \"ticket_important\",\n   \"until\": \"1951-10-05T11:48:12.924Z\",\n   \"when\": \"2016-11-08T09:32:46.794Z\"\n  },\n  {\n   \"body\": null,\n   \"entity\": {\n    \"id\": 3456,\n    \"label\": \"Linode not booting.\",\n    \"type\": \"ticket\",\n    \"url\": \"/support/tickets/3456\"\n   },\n   \"label\": \"You have an important ticket open!\",\n   \"message\": \"You have an important ticket open!\",\n   \"severity\": \"major\",\n   \"type\": \"ticket_important\",\n   \"until\": \"1963-01-06T23:29:27.801Z\",\n   \"when\": \"1998-09-05T06:27:30.463Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"notifications"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "View Network Utilization",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"transfer"
							]
						},
						"description": "Returns a Transfer object showing your network utilization, in GB, for the current month.\n"
					},
					"response": [
						{
							"name": "Returns a single Transfer object.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"billable\": 0,\n \"quota\": 9141,\n \"used\": 2\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transfer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "domains",
			"item": [
				{
					"name": "{domain Id}",
					"item": [
						{
							"name": "records",
							"item": [
								{
									"name": "{record Id}",
									"item": [
										{
											"name": "Delete Domain Record",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Domain whose Record you are accessing."
														},
														{
															"key": "recordId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Record you are accessing."
														}
													]
												},
												"description": "Deletes a Record on this Domain.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "Record deleted successfully.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "View Domain Record",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Domain whose Record you are accessing."
														},
														{
															"key": "recordId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Record you are accessing."
														}
													]
												},
												"description": "View a single Record on this Domain.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "A Domain Record object.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 123456,\n \"name\": \"test\",\n \"port\": 80,\n \"priority\": 50,\n \"protocol\": null,\n \"service\": null,\n \"tag\": null,\n \"target\": \"12.34.56.78\",\n \"ttl_sec\": 604800,\n \"type\": \"A\",\n \"weight\": 50\n}"
												}
											]
										},
										{
											"name": "Update Domain Record",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"priority\": \"<integer>\",\n    \"protocol\": \"<string>\",\n    \"service\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"target\": \"<string>\",\n    \"ttl_sec\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"weight\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records",
														":recordId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Domain whose Record you are accessing."
														},
														{
															"key": "recordId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Record you are accessing."
														}
													]
												},
												"description": "Updates a single Record on this Domain.\n"
											},
											"response": [
												{
													"name": "Domain Record updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"test\",\n    \"port\": 80,\n    \"priority\": 50,\n    \"protocol\": null,\n    \"service\": null,\n    \"tag\": null,\n    \"target\": \"12.34.56.78\",\n    \"ttl_sec\": 604800,\n    \"type\": \"A\",\n    \"weight\": 50\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 123456,\n \"name\": \"test\",\n \"port\": 80,\n \"priority\": 50,\n \"protocol\": null,\n \"service\": null,\n \"tag\": null,\n \"target\": \"12.34.56.78\",\n \"ttl_sec\": 604800,\n \"type\": \"A\",\n \"weight\": 50\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"test\",\n    \"port\": 80,\n    \"priority\": 50,\n    \"protocol\": null,\n    \"service\": null,\n    \"tag\": null,\n    \"target\": \"12.34.56.78\",\n    \"ttl_sec\": 604800,\n    \"type\": \"A\",\n    \"weight\": 50\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/domains/:domainId/records/:recordId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"domains",
																":domainId",
																"records",
																":recordId"
															],
															"variable": [
																{
																	"key": "domainId"
																},
																{
																	"key": "recordId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Domain Records",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId/records?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId",
												"records"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of a collection to return."
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Domain we are accessing Records for."
												}
											]
										},
										"description": "Returns a paginated list of Records configured on a Domain in Linode's\nDNS Manager.\n"
									},
									"response": [
										{
											"name": "A list of Domain Records.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"id\": 123456,\n   \"name\": \"test\",\n   \"port\": 80,\n   \"priority\": 50,\n   \"protocol\": null,\n   \"service\": null,\n   \"tag\": null,\n   \"target\": \"12.34.56.78\",\n   \"ttl_sec\": 604800,\n   \"type\": \"A\",\n   \"weight\": 50\n  },\n  {\n   \"id\": 123456,\n   \"name\": \"test\",\n   \"port\": 80,\n   \"priority\": 50,\n   \"protocol\": null,\n   \"service\": null,\n   \"tag\": null,\n   \"target\": \"12.34.56.78\",\n   \"ttl_sec\": 604800,\n   \"type\": \"A\",\n   \"weight\": 50\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
										}
									]
								},
								{
									"name": "Create Domain Record",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 16877346,\n    \"name\": \"magn\",\n    \"port\": 58779435,\n    \"priority\": 175,\n    \"protocol\": \"sed cupid\",\n    \"service\": \"pariatur Lorem deserun\",\n    \"tag\": \"velit occaecat sint labore\",\n    \"target\": \"id magna\",\n    \"ttl_sec\": 62995902,\n    \"type\": \"CNAME\",\n    \"weight\": -53340834\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId/records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId",
												"records"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Domain we are accessing Records for."
												}
											]
										},
										"description": "Adds a new Domain Record to the zonefile this Domain represents.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 123456,\n    \"name\": \"test\",\n    \"port\": 80,\n    \"priority\": 50,\n    \"protocol\": null,\n    \"service\": null,\n    \"tag\": null,\n    \"target\": \"12.34.56.78\",\n    \"ttl_sec\": 604800,\n    \"type\": \"A\",\n    \"weight\": 50\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Domain Record created successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 123456,\n    \"name\": \"test\",\n    \"port\": 80,\n    \"priority\": 50,\n    \"protocol\": null,\n    \"service\": null,\n    \"tag\": null,\n    \"target\": \"12.34.56.78\",\n    \"ttl_sec\": 604800,\n    \"type\": \"A\",\n    \"weight\": 50\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"records"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 123456,\n \"name\": \"test\",\n \"port\": 80,\n \"priority\": 50,\n \"protocol\": null,\n \"service\": null,\n \"tag\": null,\n \"target\": \"12.34.56.78\",\n \"ttl_sec\": 604800,\n \"type\": \"A\",\n \"weight\": 50\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete Domain",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Domain to access."
										}
									]
								},
								"description": "Deletes a Domain from Linode's DNS Manager. The Domain will be removed from Linode's nameservers shortly after this operation completes. This also deletes all associated Domain Records.\n"
							},
							"response": [
								{
									"name": "Domain deleted successfully.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "View Domain",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Domain to access."
										}
									]
								},
								"description": "This is a single Domain that you have registered in Linode's DNS Manager. Linode is not a registrar, and in order for this Domain record to work you must own the domain and point your registrar at Linode's nameservers.\n"
							},
							"response": [
								{
									"name": "A single Domain in Linode's DNS Manager.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 1234,\n \"domain\": \"example.org\",\n \"type\": \"master\",\n \"axfr_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"description\": \"<string>\",\n \"expire_sec\": 300,\n \"group\": \"<string>\",\n \"master_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"refresh_sec\": 300,\n \"retry_sec\": 300,\n \"soa_email\": \"admin@example.org\",\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"ttl_sec\": 300\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Domain",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": \"<integer>\",\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": \"<integer>\",\n    \"retry_sec\": \"<integer>\",\n    \"soa_email\": \"<email>\",\n    \"status\": \"<string>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl_sec\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Domain to access."
										}
									]
								},
								"description": "Update information about a Domain in Linode's DNS Manager.\n"
							},
							"response": [
								{
									"name": "Domain update successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"domain\": \"example.org\",\n    \"type\": \"master\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": 300,\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": 300,\n    \"retry_sec\": 300,\n    \"soa_email\": \"admin@example.org\",\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"ttl_sec\": 300\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 1234,\n \"domain\": \"example.org\",\n \"type\": \"master\",\n \"axfr_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"description\": \"<string>\",\n \"expire_sec\": 300,\n \"group\": \"<string>\",\n \"master_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"refresh_sec\": 300,\n \"retry_sec\": 300,\n \"soa_email\": \"admin@example.org\",\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"ttl_sec\": 300\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"domain\": \"example.org\",\n    \"type\": \"master\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": 300,\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": 300,\n    \"retry_sec\": 300,\n    \"soa_email\": \"admin@example.org\",\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"ttl_sec\": 300\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Clone Domain",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId",
										"clone"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the Domain to clone."
										}
									]
								},
								"description": "Clones a Domain and all associated DNS records from a Domain that is registered in Linode's DNS manager.\n"
							},
							"response": [
								{
									"name": "A new Domain in Linode's DNS Manager, based on a cloned Domain.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"domain\": \"example.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId",
												"clone"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 1234,\n \"domain\": \"example.org\",\n \"type\": \"master\",\n \"axfr_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"description\": \"<string>\",\n \"expire_sec\": 300,\n \"group\": \"<string>\",\n \"master_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"refresh_sec\": 300,\n \"retry_sec\": 300,\n \"soa_email\": \"admin@example.org\",\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"ttl_sec\": 300\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"domain\": \"example.com\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId",
												"clone"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Domains",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "This is a collection of Domains that you have registered in Linode's DNS Manager.  Linode is not a registrar, and in order for these to work you must own the domains and point your registrar at Linode's nameservers.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "A paginated list of Domains you have registered.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": 1234,\n   \"domain\": \"example.org\",\n   \"type\": \"master\",\n   \"description\": \"in i\",\n   \"expire_sec\": 300,\n   \"group\": \"aliq\",\n   \"refresh_sec\": 300,\n   \"retry_sec\": 300,\n   \"soa_email\": \"admin@example.org\",\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"ttl_sec\": 300\n  },\n  {\n   \"id\": 1234,\n   \"domain\": \"example.org\",\n   \"type\": \"master\",\n   \"description\": \"et s\",\n   \"expire_sec\": 300,\n   \"group\": \"ut p\",\n   \"refresh_sec\": 300,\n   \"retry_sec\": 300,\n   \"soa_email\": \"admin@example.org\",\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"ttl_sec\": 300\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "Create Domain",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": \"<integer>\",\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": \"<integer>\",\n    \"retry_sec\": \"<integer>\",\n    \"soa_email\": \"<email>\",\n    \"status\": \"<string>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl_sec\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							]
						},
						"description": "Adds a new Domain to Linode's DNS Manager. Linode is not a registrar, and you must own the domain before adding it here. Be sure to point your registrar to Linode's nameservers so that the records hosted here are used.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"example.org\",\n    \"type\": \"master\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": 300,\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": 300,\n    \"retry_sec\": 300,\n    \"soa_email\": \"admin@example.org\",\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"ttl_sec\": 300\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Domain added successfully.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"example.org\",\n    \"type\": \"master\",\n    \"axfr_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"expire_sec\": 300,\n    \"group\": \"<string>\",\n    \"master_ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"refresh_sec\": 300,\n    \"retry_sec\": 300,\n    \"soa_email\": \"admin@example.org\",\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"ttl_sec\": 300\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1234,\n \"domain\": \"example.org\",\n \"type\": \"master\",\n \"axfr_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"description\": \"<string>\",\n \"expire_sec\": 300,\n \"group\": \"<string>\",\n \"master_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"refresh_sec\": 300,\n \"retry_sec\": 300,\n \"soa_email\": \"admin@example.org\",\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"ttl_sec\": 300\n}"
						}
					]
				},
				{
					"name": "Import Domain",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"<string>\",\n    \"remote_nameserver\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/domains/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								"import"
							]
						},
						"description": "Imports a domain zone from a remote nameserver.\nYour nameserver must allow zone transfers (AXFR) from the following IPs:\n  - 96.126.114.97\n  - 96.126.114.98\n  - 2600:3c00::5e\n  - 2600:3c00::5f\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"example.com\",\n    \"remote_nameserver\": \"examplenameserver.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"import"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "A single Domain in Linode's DNS Manager.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"example.com\",\n    \"remote_nameserver\": \"examplenameserver.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/domains/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"import"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1234,\n \"domain\": \"example.org\",\n \"type\": \"master\",\n \"axfr_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"description\": \"<string>\",\n \"expire_sec\": 300,\n \"group\": \"<string>\",\n \"master_ips\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"refresh_sec\": 300,\n \"retry_sec\": 300,\n \"soa_email\": \"admin@example.org\",\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"ttl_sec\": 300\n}"
						}
					]
				}
			]
		},
		{
			"name": "images",
			"item": [
				{
					"name": "{image Id}",
					"item": [
						{
							"name": "Delete Image",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/images/:imageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the Image to look up."
										}
									]
								},
								"description": "Deletes a private Image you have permission to `read_write`.\n\n\n**Deleting an Image is a destructive action and cannot be undone.**\n"
							},
							"response": [
								{
									"name": "Delete successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "View Image",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/images/:imageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the Image to look up."
										}
									]
								},
								"description": "Get information about a single Image.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A single Image object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"2017-07-16T16:08:13.522Z\",\n \"created_by\": \"somename\",\n \"deprecated\": false,\n \"description\": \"The detailed description of my Image.\",\n \"expiry\": \"1984-04-18T22:37:11.663Z\",\n \"id\": \"private/67848373\",\n \"is_public\": false,\n \"label\": \"My gold-master image\",\n \"size\": 2500,\n \"type\": \"manual\",\n \"vendor\": null\n}"
								}
							]
						},
						{
							"name": "Update Image",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"label\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/images/:imageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images",
										":imageId"
									],
									"variable": [
										{
											"key": "imageId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the Image to look up."
										}
									]
								},
								"description": "Updates a private Image that you have permission to `read_write`.\n"
							},
							"response": [
								{
									"name": "The updated image.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"The detailed description of my Image.\",\n    \"label\": \"My gold-master image\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"2017-07-16T16:08:13.522Z\",\n \"created_by\": \"somename\",\n \"deprecated\": false,\n \"description\": \"The detailed description of my Image.\",\n \"expiry\": \"1984-04-18T22:37:11.663Z\",\n \"id\": \"private/67848373\",\n \"is_public\": false,\n \"label\": \"My gold-master image\",\n \"size\": 2500,\n \"type\": \"manual\",\n \"vendor\": null\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"The detailed description of my Image.\",\n    \"label\": \"My gold-master image\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/images/:imageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"images",
												":imageId"
											],
											"variable": [
												{
													"key": "imageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Images",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/images?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"images"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "Returns a paginated list of Images.\n\n* Calling this endpoint without authentication returns all public Images.\n* Authentication is required to return a combined paginated list of all public and\n  your private Images.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "A paginated list of Images.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/images?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"created\": \"1950-03-03T11:16:16.307Z\",\n   \"created_by\": \"linode\",\n   \"deprecated\": false,\n   \"description\": \"pariatur veniam ad\",\n   \"expiry\": \"1980-08-25T19:09:04.882Z\",\n   \"id\": \"linode/ubuntu17.10\",\n   \"is_public\": true,\n   \"label\": \"Ubuntu 17.10\",\n   \"size\": 2500,\n   \"type\": \"manual\",\n   \"vendor\": \"Ubuntu\"\n  },\n  {\n   \"created\": \"1974-04-14T17:40:13.071Z\",\n   \"created_by\": \"linode\",\n   \"deprecated\": false,\n   \"description\": \"in ex\",\n   \"expiry\": \"2016-02-13T08:35:26.491Z\",\n   \"id\": \"linode/ubuntu17.10\",\n   \"is_public\": true,\n   \"label\": \"Ubuntu 17.10\",\n   \"size\": 2500,\n   \"type\": \"manual\",\n   \"vendor\": \"Ubuntu\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "Create Image",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\",\n    \"label\": \"<string>\",\n    \"disk_id\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/images",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"images"
							]
						},
						"description": "Creates a private gold-master Image from a Linode Disk. There is no additional charge to store Images for Linode users.\nImages are limited to three per Account.\n"
					},
					"response": [
						{
							"name": "New private Image created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"The detailed description of my Image.\",\n    \"label\": \"My gold-master image\",\n    \"disk_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"created\": \"2017-07-16T16:08:13.522Z\",\n \"created_by\": \"somename\",\n \"deprecated\": false,\n \"description\": \"The detailed description of my Image.\",\n \"expiry\": \"1984-04-18T22:37:11.663Z\",\n \"id\": \"private/67848373\",\n \"is_public\": false,\n \"label\": \"My gold-master image\",\n \"size\": 2500,\n \"type\": \"manual\",\n \"vendor\": null\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"The detailed description of my Image.\",\n    \"label\": \"My gold-master image\",\n    \"disk_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"images"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "linode",
			"item": [
				{
					"name": "instances",
					"item": [
						{
							"name": "{linode Id}",
							"item": [
								{
									"name": "backups",
									"item": [
										{
											"name": "{backup Id}",
											"item": [
												{
													"name": "View Backup",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																":backupId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode the Backup belongs to."
																},
																{
																	"key": "backupId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Backup to look up."
																}
															]
														},
														"description": "Returns information about a Backup.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"backups",
																		":backupId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "backupId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "A single Backup.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"backups",
																		":backupId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "backupId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"configs\": [\n  \"My Debian 9 Config\",\n  \"My Debian 9 Config\"\n ],\n \"created\": \"1966-07-21T13:32:45.180Z\",\n \"disks\": [\n  {\n   \"filesystem\": \"ext4\",\n   \"label\": \"My Debian 9 Disk\",\n   \"size\": 9001\n  },\n  {\n   \"filesystem\": \"ext4\",\n   \"label\": \"My Debian 9 Disk\",\n   \"size\": 9001\n  }\n ],\n \"finished\": \"2001-01-21T16:36:42.613Z\",\n \"id\": 123456,\n \"label\": \"Webserver-Backup-2018\",\n \"status\": \"successful\",\n \"type\": \"snapshot\",\n \"updated\": \"2018-12-01T15:59:21.068Z\"\n}"
														}
													]
												},
												{
													"name": "Restore Backup",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"linode_id\": \"<integer>\",\n    \"overwrite\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId/restore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																":backupId",
																"restore"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode that the Backup belongs to."
																},
																{
																	"key": "backupId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Backup to restore."
																}
															]
														},
														"description": "Restores a Linode's Backup to the specified Linode.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"linode_id\": 234,\n    \"overwrite\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId/restore",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"backups",
																		":backupId",
																		"restore"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "backupId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "Restore from Backup was initiated.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"linode_id\": 234,\n    \"overwrite\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/:backupId/restore",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"backups",
																		":backupId",
																		"restore"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "backupId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List Backups",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"backups"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Linode the backups belong to."
														}
													]
												},
												"description": "Returns information about this Linode's available backups.\n"
											},
											"response": [
												{
													"name": "A collection of the specified Linode's available backups.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"automatic\": [\n  {\n   \"configs\": [\n    \"My Debian 9 Config\",\n    \"My Debian 9 Config\"\n   ],\n   \"created\": \"1990-11-11T23:10:34.886Z\",\n   \"disks\": [\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    },\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    }\n   ],\n   \"finished\": \"1962-11-13T11:51:56.083Z\",\n   \"id\": 123456,\n   \"label\": \"Webserver-Backup-2018\",\n   \"status\": \"successful\",\n   \"type\": \"snapshot\",\n   \"updated\": \"1964-10-16T06:19:06.144Z\"\n  },\n  {\n   \"configs\": [\n    \"My Debian 9 Config\",\n    \"My Debian 9 Config\"\n   ],\n   \"created\": \"1963-03-13T22:24:21.773Z\",\n   \"disks\": [\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    },\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    }\n   ],\n   \"finished\": \"1947-02-23T02:46:06.254Z\",\n   \"id\": 123456,\n   \"label\": \"Webserver-Backup-2018\",\n   \"status\": \"successful\",\n   \"type\": \"snapshot\",\n   \"updated\": \"2001-03-20T02:29:19.035Z\"\n  }\n ],\n \"snapshot\": {\n  \"current\": {\n   \"configs\": [\n    \"My Debian 9 Config\",\n    \"My Debian 9 Config\"\n   ],\n   \"created\": \"2001-12-12T05:58:29.331Z\",\n   \"disks\": [\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    },\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    }\n   ],\n   \"finished\": \"1962-07-27T03:24:57.813Z\",\n   \"id\": 123456,\n   \"label\": \"Webserver-Backup-2018\",\n   \"status\": \"successful\",\n   \"type\": \"snapshot\",\n   \"updated\": \"2003-08-23T00:35:14.707Z\"\n  },\n  \"in_progress\": {\n   \"configs\": [\n    \"My Debian 9 Config\",\n    \"My Debian 9 Config\"\n   ],\n   \"created\": \"2006-12-29T00:18:24.065Z\",\n   \"disks\": [\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    },\n    {\n     \"filesystem\": \"ext4\",\n     \"label\": \"My Debian 9 Disk\",\n     \"size\": 9001\n    }\n   ],\n   \"finished\": \"1965-04-04T16:38:32.065Z\",\n   \"id\": 123456,\n   \"label\": \"Webserver-Backup-2018\",\n   \"status\": \"successful\",\n   \"type\": \"snapshot\",\n   \"updated\": \"2012-05-31T19:16:32.583Z\"\n  }\n }\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Create Snapshot",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"backups"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Linode the backups belong to."
														}
													]
												},
												"description": "Creates a snapshot Backup of a Linode.\n** If you already have a snapshot of this Linode, this is a destructive action. The previous snapshot will be deleted.**\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"SnapshotLabel\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "Snapshot was successfully taken.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"SnapshotLabel\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"configs\": [\n  \"My Debian 9 Config\",\n  \"My Debian 9 Config\"\n ],\n \"created\": \"1966-07-21T13:32:45.180Z\",\n \"disks\": [\n  {\n   \"filesystem\": \"ext4\",\n   \"label\": \"My Debian 9 Disk\",\n   \"size\": 9001\n  },\n  {\n   \"filesystem\": \"ext4\",\n   \"label\": \"My Debian 9 Disk\",\n   \"size\": 9001\n  }\n ],\n \"finished\": \"2001-01-21T16:36:42.613Z\",\n \"id\": 123456,\n \"label\": \"Webserver-Backup-2018\",\n \"status\": \"successful\",\n \"type\": \"snapshot\",\n \"updated\": \"2018-12-01T15:59:21.068Z\"\n}"
												}
											]
										},
										{
											"name": "Cancel Backups",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"backups",
														"cancel"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Linode to cancel backup service for."
														}
													]
												},
												"description": "Cancels the Backup service on the given Linode. Deletes all of this Linode's existing backups forever.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																"cancel"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "Backup service was cancelled for the specified Linode.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																"cancel"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Enable Backups",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"backups",
														"enable"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Linode to enable backup service for."
														}
													]
												},
												"description": "Enables backups for the specified Linode.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																"enable"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "Backup service was enabled.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/backups/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"backups",
																"enable"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "configs",
									"item": [
										{
											"name": "{config Id}",
											"item": [
												{
													"name": "Delete Configuration Profile",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode whose Configuration profile to look up."
																},
																{
																	"key": "configId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Configuration profile to look up."
																}
															]
														},
														"description": "Deletes the specified Configuration profile from the specified Linode.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "Configuration profile successfully deleted.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "View Configuration Profile",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode whose Configuration profile to look up."
																},
																{
																	"key": "configId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Configuration profile to look up."
																}
															]
														},
														"description": "Returns information about a specific Configuration profile.\n"
													},
													"response": [
														{
															"name": "A Configuration profile object.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"label\": \"My Config\",\n \"devices\": {\n  \"sda\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -67791419\n  },\n  \"sdb\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -90880680\n  },\n  \"sdc\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -52585047\n  },\n  \"sdd\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 65474009\n  },\n  \"sde\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 82843786\n  },\n  \"sdf\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 97117674\n  },\n  \"sdg\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -83009136\n  },\n  \"sdh\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -24833237\n  }\n },\n \"comments\": \"This is my main Config\",\n \"helpers\": {\n  \"devtmpfs_automount\": false,\n  \"distro\": true,\n  \"modules_dep\": true,\n  \"network\": true,\n  \"updatedb_disabled\": true\n },\n \"id\": 23456,\n \"kernel\": \"linode/latest-64bit\",\n \"memory_limit\": 2048,\n \"root_device\": \"<string>\",\n \"run_level\": \"default\",\n \"virt_mode\": \"paravirt\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Update Configuration Profile",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"<string>\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": -99724541,\n            \"volume_id\": 28109478\n        },\n        \"sdb\": {\n            \"disk_id\": -83132035,\n            \"volume_id\": -16947052\n        },\n        \"sdc\": {\n            \"disk_id\": 60741448,\n            \"volume_id\": -45703283\n        },\n        \"sdd\": {\n            \"disk_id\": 27928218,\n            \"volume_id\": -92322382\n        },\n        \"sde\": {\n            \"disk_id\": -11298301,\n            \"volume_id\": 74101253\n        },\n        \"sdf\": {\n            \"disk_id\": -75889825,\n            \"volume_id\": -65014404\n        },\n        \"sdg\": {\n            \"disk_id\": 31444158,\n            \"volume_id\": -35136263\n        },\n        \"sdh\": {\n            \"disk_id\": 45877587,\n            \"volume_id\": 45131715\n        }\n    },\n    \"comments\": \"<string>\",\n    \"helpers\": {\n        \"devtmpfs_automount\": \"<boolean>\",\n        \"distro\": \"<boolean>\",\n        \"modules_dep\": \"<boolean>\",\n        \"network\": \"<boolean>\",\n        \"updatedb_disabled\": \"<boolean>\"\n    },\n    \"id\": \"<integer>\",\n    \"kernel\": \"<string>\",\n    \"memory_limit\": \"<integer>\",\n    \"root_device\": \"<string>\",\n    \"run_level\": \"<string>\",\n    \"virt_mode\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode whose Configuration profile to look up."
																},
																{
																	"key": "configId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Configuration profile to look up."
																}
															]
														},
														"description": "Updates a Configuration profile.\n"
													},
													"response": [
														{
															"name": "Configuration profile successfully updated.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"label\": \"My Config\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 66646167\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -64037845\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 48381237\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 18338454\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -61855934\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -91329276\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -29988276\n        },\n        \"sdh\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -54953369\n        }\n    },\n    \"comments\": \"This is my main Config\",\n    \"helpers\": {\n        \"devtmpfs_automount\": false,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"updatedb_disabled\": true\n    },\n    \"id\": 23456,\n    \"kernel\": \"linode/latest-64bit\",\n    \"memory_limit\": 2048,\n    \"root_device\": \"<string>\",\n    \"run_level\": \"default\",\n    \"virt_mode\": \"paravirt\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"label\": \"My Config\",\n \"devices\": {\n  \"sda\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 98639968\n  },\n  \"sdb\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -26385857\n  },\n  \"sdc\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -18287904\n  },\n  \"sdd\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 80083132\n  },\n  \"sde\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 64659583\n  },\n  \"sdf\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -99504770\n  },\n  \"sdg\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -8699851\n  },\n  \"sdh\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 12849414\n  }\n },\n \"comments\": \"This is my main Config\",\n \"helpers\": {\n  \"devtmpfs_automount\": false,\n  \"distro\": true,\n  \"modules_dep\": true,\n  \"network\": true,\n  \"updatedb_disabled\": true\n },\n \"id\": 23456,\n \"kernel\": \"linode/latest-64bit\",\n \"memory_limit\": 2048,\n \"root_device\": \"<string>\",\n \"run_level\": \"default\",\n \"virt_mode\": \"paravirt\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"label\": \"My Config\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 66646167\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -64037845\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 48381237\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 18338454\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -61855934\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -91329276\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -29988276\n        },\n        \"sdh\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -54953369\n        }\n    },\n    \"comments\": \"This is my main Config\",\n    \"helpers\": {\n        \"devtmpfs_automount\": false,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"updatedb_disabled\": true\n    },\n    \"id\": 23456,\n    \"kernel\": \"linode/latest-64bit\",\n    \"memory_limit\": 2048,\n    \"root_device\": \"<string>\",\n    \"run_level\": \"default\",\n    \"virt_mode\": \"paravirt\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/configs/:configId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"configs",
																		":configId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Configuration Profiles",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/configs?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"configs"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page of a collection to return."
														},
														{
															"key": "page_size",
															"value": "100",
															"description": "The number of items to return per page."
														}
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up Configuration profiles for."
														}
													]
												},
												"description": "Lists Configuration profiles associated with a Linode.\n"
											},
											"response": [
												{
													"name": "Returns an array of Configuration profiles associated with this Linode.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs?page=1&page_size=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "page_size",
																	"value": "100"
																}
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"data\": [\n  {\n   \"label\": \"My Config\",\n   \"devices\": {\n    \"sda\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 61726729\n    },\n    \"sdb\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -13166465\n    },\n    \"sdc\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 74829705\n    },\n    \"sdd\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 31188925\n    },\n    \"sde\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -27958245\n    },\n    \"sdf\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -94842798\n    },\n    \"sdg\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 53831422\n    },\n    \"sdh\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 43640863\n    }\n   },\n   \"comments\": \"This is my main Config\",\n   \"helpers\": {\n    \"devtmpfs_automount\": false,\n    \"distro\": true,\n    \"modules_dep\": true,\n    \"network\": true,\n    \"updatedb_disabled\": true\n   },\n   \"id\": 23456,\n   \"kernel\": \"linode/latest-64bit\",\n   \"memory_limit\": 2048,\n   \"root_device\": \"a-z, A-Z, 0-9, /, _, -\",\n   \"run_level\": \"default\",\n   \"virt_mode\": \"paravirt\"\n  },\n  {\n   \"label\": \"My Config\",\n   \"devices\": {\n    \"sda\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -84157650\n    },\n    \"sdb\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 66223408\n    },\n    \"sdc\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -71937069\n    },\n    \"sdd\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -24151732\n    },\n    \"sde\": {\n     \"disk_id\": 124458,\n     \"volume_id\": -54833730\n    },\n    \"sdf\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 80985334\n    },\n    \"sdg\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 71606669\n    },\n    \"sdh\": {\n     \"disk_id\": 124458,\n     \"volume_id\": 71980265\n    }\n   },\n   \"comments\": \"This is my main Config\",\n   \"helpers\": {\n    \"devtmpfs_automount\": false,\n    \"distro\": true,\n    \"modules_dep\": true,\n    \"network\": true,\n    \"updatedb_disabled\": true\n   },\n   \"id\": 23456,\n   \"kernel\": \"linode/latest-64bit\",\n   \"memory_limit\": 2048,\n   \"root_device\": \"a-z, A-Z, 0-9, /, _, -\",\n   \"run_level\": \"default\",\n   \"virt_mode\": \"paravirt\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
												}
											]
										},
										{
											"name": "Create Configuration Profile",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"<string>\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": -95390876,\n            \"volume_id\": -78345265\n        },\n        \"sdb\": {\n            \"disk_id\": -72010308,\n            \"volume_id\": -32977950\n        },\n        \"sdc\": {\n            \"disk_id\": -80364253,\n            \"volume_id\": 36198505\n        },\n        \"sdd\": {\n            \"disk_id\": 40874581,\n            \"volume_id\": 35285997\n        },\n        \"sde\": {\n            \"disk_id\": 7791153,\n            \"volume_id\": 26453482\n        },\n        \"sdf\": {\n            \"disk_id\": -96280303,\n            \"volume_id\": -41855395\n        },\n        \"sdg\": {\n            \"disk_id\": -13312140,\n            \"volume_id\": -98491013\n        },\n        \"sdh\": {\n            \"disk_id\": -83335628,\n            \"volume_id\": -19889570\n        }\n    },\n    \"comments\": \"<string>\",\n    \"helpers\": {\n        \"devtmpfs_automount\": \"<boolean>\",\n        \"distro\": \"<boolean>\",\n        \"modules_dep\": \"<boolean>\",\n        \"network\": \"<boolean>\",\n        \"updatedb_disabled\": \"<boolean>\"\n    },\n    \"kernel\": \"<string>\",\n    \"memory_limit\": \"<integer>\",\n    \"root_device\": \"<string>\",\n    \"run_level\": \"<string>\",\n    \"virt_mode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"configs"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up Configuration profiles for."
														}
													]
												},
												"description": "Adds a new Configuration profile to a Linode.\n"
											},
											"response": [
												{
													"name": "A Configuration profile was created.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"My Config\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 86671853\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -50728931\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -67288142\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 40997593\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -58060471\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 8187302\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 75431353\n        },\n        \"sdh\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -52281164\n        }\n    },\n    \"comments\": \"This is my main Config\",\n    \"helpers\": {\n        \"devtmpfs_automount\": false,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"updatedb_disabled\": true\n    },\n    \"kernel\": \"linode/latest-64bit\",\n    \"memory_limit\": 2048,\n    \"root_device\": \"<string>\",\n    \"run_level\": \"default\",\n    \"virt_mode\": \"paravirt\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"label\": \"My Config\",\n \"devices\": {\n  \"sda\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -67791419\n  },\n  \"sdb\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -90880680\n  },\n  \"sdc\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -52585047\n  },\n  \"sdd\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 65474009\n  },\n  \"sde\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 82843786\n  },\n  \"sdf\": {\n   \"disk_id\": 124458,\n   \"volume_id\": 97117674\n  },\n  \"sdg\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -83009136\n  },\n  \"sdh\": {\n   \"disk_id\": 124458,\n   \"volume_id\": -24833237\n  }\n },\n \"comments\": \"This is my main Config\",\n \"helpers\": {\n  \"devtmpfs_automount\": false,\n  \"distro\": true,\n  \"modules_dep\": true,\n  \"network\": true,\n  \"updatedb_disabled\": true\n },\n \"id\": 23456,\n \"kernel\": \"linode/latest-64bit\",\n \"memory_limit\": 2048,\n \"root_device\": \"<string>\",\n \"run_level\": \"default\",\n \"virt_mode\": \"paravirt\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"label\": \"My Config\",\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 86671853\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -50728931\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -67288142\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 40997593\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -58060471\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 8187302\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 75431353\n        },\n        \"sdh\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -52281164\n        }\n    },\n    \"comments\": \"This is my main Config\",\n    \"helpers\": {\n        \"devtmpfs_automount\": false,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"updatedb_disabled\": true\n    },\n    \"kernel\": \"linode/latest-64bit\",\n    \"memory_limit\": 2048,\n    \"root_device\": \"<string>\",\n    \"run_level\": \"default\",\n    \"virt_mode\": \"paravirt\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"configs"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "disks",
									"item": [
										{
											"name": "{disk Id}",
											"item": [
												{
													"name": "Delete Disk",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to look up."
																}
															]
														},
														"description": "Deletes a Disk you have permission to `read_write`.\n\n**Deleting a Disk is a destructive action and cannot be undone.**\n"
													},
													"response": [
														{
															"name": "Delete successful",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "View Disk",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to look up."
																}
															]
														},
														"description": "View Disk information for a Disk associated with this Linode.\n"
													},
													"response": [
														{
															"name": "Returns a single Disk object.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created\": \"1948-10-14T21:57:34.378Z\",\n \"filesystem\": \"ext4\",\n \"id\": 25674,\n \"label\": \"Debian 9 Disk\",\n \"size\": 48640,\n \"status\": \"ready\",\n \"updated\": \"1991-05-13T22:54:09.119Z\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Update Disk",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filesystem\": \"<string>\",\n    \"label\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to look up."
																}
															]
														},
														"description": "Updates a Disk that you have permission to `read_write`.\n"
													},
													"response": [
														{
															"name": "The updated Disk.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filesystem\": \"ext4\",\n    \"label\": \"Debian 9 Disk\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created\": \"1982-03-28T09:44:56.645Z\",\n \"filesystem\": \"ext4\",\n \"id\": 25674,\n \"label\": \"Debian 9 Disk\",\n \"size\": 48640,\n \"status\": \"ready\",\n \"updated\": \"1975-07-10T06:21:37.429Z\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filesystem\": \"ext4\",\n    \"label\": \"Debian 9 Disk\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Clone Disk",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/clone",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId",
																"clone"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to clone."
																}
															]
														},
														"description": "Copies a disk, byte-for-byte, into a new Disk belonging to the same Linode. The Linode must have enough storage space available to accept a new Disk of the same size as this one or this operation will fail.\n"
													},
													"response": [
														{
															"name": "Disk clone initiated.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/clone",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"clone"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created\": \"1982-03-28T09:44:56.645Z\",\n \"filesystem\": \"ext4\",\n \"id\": 25674,\n \"label\": \"Debian 9 Disk\",\n \"size\": 48640,\n \"status\": \"ready\",\n \"updated\": \"1975-07-10T06:21:37.429Z\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/clone",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"clone"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Reset Disk Root Password",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId",
																"password"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to look up."
																}
															]
														},
														"description": "Resets the password of a Disk you have permission to `read_write`.\n"
													},
													"response": [
														{
															"name": "Returns a single Disk object.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"password\": \"another@complex^Password123\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"password\": \"another@complex^Password123\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Resize Disk",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"size\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/resize",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks",
																":diskId",
																"resize"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Linode to look up."
																},
																{
																	"key": "diskId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) ID of the Disk to look up."
																}
															]
														},
														"description": "Resizes a Disk you have permission to `read_write`.\nThe Linode this Disk is attached to must be shut down for resizing to take effect.\nIf you are resizing the Disk to a smaller size, it cannot be made smaller than what is required by the total size of the files current on the Disk. The Disk must not be in use. If the Disk is in use, the request will succeed but the resize will ultimately fail.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"size\": 2048\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/resize",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"resize"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "Resize started.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"size\": 2048\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/disks/:diskId/resize",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"disks",
																		":diskId",
																		"resize"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "diskId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List Disks",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/disks?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"disks"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page of a collection to return."
														},
														{
															"key": "page_size",
															"value": "100",
															"description": "The number of items to return per page."
														}
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														}
													]
												},
												"description": "View Disk information for Disks associated with this Linode.\n"
											},
											"response": [
												{
													"name": "Returns a paginated list of disks associated with this Linode.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks?page=1&page_size=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "page_size",
																	"value": "100"
																}
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"data\": [\n  {\n   \"created\": \"2005-05-23T13:08:38.619Z\",\n   \"filesystem\": \"ext4\",\n   \"id\": 25674,\n   \"label\": \"Debian 9 Disk\",\n   \"size\": 48640,\n   \"status\": \"ready\",\n   \"updated\": \"1988-12-15T04:23:24.237Z\"\n  },\n  {\n   \"created\": \"2007-10-28T17:06:43.308Z\",\n   \"filesystem\": \"ext4\",\n   \"id\": 25674,\n   \"label\": \"Debian 9 Disk\",\n   \"size\": 48640,\n   \"status\": \"ready\",\n   \"updated\": \"2019-05-30T16:02:46.177Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks?page=1&page_size=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "page_size",
																	"value": "100"
																}
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Create Disk",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"size\": \"<integer>\",\n    \"label\": \"<string>\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"filesystem\": \"raw\",\n    \"image\": \"<string>\",\n    \"read_only\": \"<boolean>\",\n    \"root_pass\": \"<password>\",\n    \"stackscript_data\": \"<object>\",\n    \"stackscript_id\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/disks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"disks"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														}
													]
												},
												"description": "Adds a new Disk to a Linode. You can optionally create a Disk from an Image (see [/images](/api/v4/images) for a list of available public images, or use one of your own), and optionally provide a StackScript to deploy with this Disk.\n"
											},
											"response": [
												{
													"name": "Disk created.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"size\": 48640,\n    \"label\": \"Debian 9 Disk\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n    ],\n    \"filesystem\": \"ext4\",\n    \"image\": \"linode/debian9\",\n    \"read_only\": false,\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n    },\n    \"stackscript_id\": 10079\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created\": \"1948-10-14T21:57:34.378Z\",\n \"filesystem\": \"ext4\",\n \"id\": 25674,\n \"label\": \"Debian 9 Disk\",\n \"size\": 48640,\n \"status\": \"ready\",\n \"updated\": \"1991-05-13T22:54:09.119Z\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"size\": 48640,\n    \"label\": \"Debian 9 Disk\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n    ],\n    \"filesystem\": \"ext4\",\n    \"image\": \"linode/debian9\",\n    \"read_only\": false,\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n    },\n    \"stackscript_id\": 10079\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/disks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"disks"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "ips",
									"item": [
										{
											"name": "{address}",
											"item": [
												{
													"name": "Delete IPv4 Address",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips",
																":address"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode to look up."
																},
																{
																	"key": "address",
																	"value": "<ip>",
																	"type": "string",
																	"description": "(Required) The IP address to look up."
																}
															]
														},
														"description": "Deletes a public IPv4 address associated with this Linode. This will fail if it is the Linode's last remaining public IPv4 address. Private IPv4 addresses cannot be removed via this endpoint.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "IP address successfully removed.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "View IP Address",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips",
																":address"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode to look up."
																},
																{
																	"key": "address",
																	"value": "<ip>",
																	"type": "string",
																	"description": "(Required) The IP address to look up."
																}
															]
														},
														"description": "View information about the specified IP address associated with the specified Linode.\n"
													},
													"response": [
														{
															"name": "A single IP address.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
														},
														{
															"name": "Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														}
													]
												},
												{
													"name": "Update IP Address",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<object>\""
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips",
																":address"
															],
															"variable": [
																{
																	"key": "linodeId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the Linode to look up."
																},
																{
																	"key": "address",
																	"value": "<ip>",
																	"type": "string",
																	"description": "(Required) The IP address to look up."
																}
															]
														},
														"description": "Updates a particular IP Address associated with this Linode. Only allows setting/resetting reverse DNS.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "\"<object>\""
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "The updated IP address record.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "\"<object>\""
																},
																"url": {
																	"raw": "{{baseUrl}}/linode/instances/:linodeId/ips/:address",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"linode",
																		"instances",
																		":linodeId",
																		"ips",
																		":address"
																	],
																	"variable": [
																		{
																			"key": "linodeId"
																		},
																		{
																			"key": "address"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Networking Information",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"ips"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														}
													]
												},
												"description": "Returns networking information for a single Linode.\n"
											},
											"response": [
												{
													"name": "Requested Linode's networking configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"ipv4\": {\n  \"private\": [\n   {\n    \"address\": \"192.168.133.234\",\n    \"gateway\": \"do reprehenderit\",\n    \"linode_id\": 123,\n    \"prefix\": 17,\n    \"public\": false,\n    \"rdns\": \"nisi non dolore labore\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.128.0\",\n    \"type\": \"ipv4\"\n   },\n   {\n    \"address\": \"192.168.133.234\",\n    \"gateway\": \"laboris\",\n    \"linode_id\": 123,\n    \"prefix\": 17,\n    \"public\": false,\n    \"rdns\": \"Excepteur veli\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.128.0\",\n    \"type\": \"ipv4\"\n   }\n  ],\n  \"public\": [\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   },\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   }\n  ],\n  \"reserved\": [\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   },\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   }\n  ],\n  \"shared\": [\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   },\n   {\n    \"address\": \"97.107.143.141\",\n    \"gateway\": \"97.107.143.1\",\n    \"linode_id\": 123,\n    \"prefix\": 24,\n    \"public\": true,\n    \"rdns\": \"test.example.org\",\n    \"region\": \"us-east\",\n    \"subnet_mask\": \"255.255.255.0\",\n    \"type\": \"ipv4\"\n   }\n  ]\n },\n \"ipv6\": {\n  \"global\": {\n   \"prefix\": 124,\n   \"range\": \"2600:3c01::02:5000::\",\n   \"region\": \"us-east\"\n  },\n  \"link_local\": {\n   \"address\": \"fe80::f03c:91ff:fe24:3a2f\",\n   \"gateway\": \"fe80::1\",\n   \"linode_id\": 123,\n   \"prefix\": 64,\n   \"public\": false,\n   \"rdns\": \"occaecat\",\n   \"region\": \"us-east\",\n   \"subnet_mask\": \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\n   \"type\": \"ipv6\"\n  },\n  \"slaac\": {\n   \"address\": \"2600:3c03::f03c:91ff:fe24:3a2f\",\n   \"gateway\": \"fe80::1\",\n   \"linode_id\": 123,\n   \"prefix\": 64,\n   \"public\": true,\n   \"rdns\": \"aliquip amet commodo occaecat consectetur\",\n   \"region\": \"us-east\",\n   \"subnet_mask\": \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\n   \"type\": \"ipv6\"\n  }\n }\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Allocate IPv4 Address",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\",\n    \"public\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"ips"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														}
													]
												},
												"description": "Allocates a public or private IPv4 address to a Linode. Public IP Addresses, after the one included with each Linode, incur an additional monthly charge. If you need an additional public IP Address you must request one - please [open a support ticket](/api/v4/support-tickets/#post). You may not add more than one private IPv4 address to a single Linode.\n"
											},
											"response": [
												{
													"name": "IP address was successfully allocated.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"type\": \"ipv4\",\n    \"public\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"type\": \"ipv4\",\n    \"public\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/ips",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"ips"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "stats",
									"item": [
										{
											"name": "View Linode Statistics",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"stats"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														}
													]
												},
												"description": "Returns CPU, IO, IPv4, and IPv6 statistics for your Linode for the past 24 hours.\n"
											},
											"response": [
												{
													"name": "The Linode's stats for the past 24 hours.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"stats"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"cpu\": [\n  [\n   -74329145.64656423,\n   -7604439.257195756\n  ],\n  [\n   47742116.56289339,\n   99280783.08204982\n  ]\n ],\n \"io\": {\n  \"io\": [\n   [\n    -36022887.8265461,\n    29451994.749490008\n   ],\n   [\n    -85614855.85016637,\n    82063792.07808414\n   ]\n  ],\n  \"swap\": [\n   [\n    36520302.71728912,\n    -98972566.37819755\n   ],\n   [\n    68514556.68475151,\n    5877374.980488926\n   ]\n  ]\n },\n \"netv4\": {\n  \"in\": [\n   [\n    4940039.4590117335,\n    40593916.402789146\n   ],\n   [\n    20657355.84154913,\n    91028553.8587344\n   ]\n  ],\n  \"out\": [\n   [\n    -87458863.07318403,\n    16919179.836292654\n   ],\n   [\n    -89077432.20431224,\n    36561217.3961499\n   ]\n  ],\n  \"private_in\": [\n   [\n    67522031.19173527,\n    85127130.50151247\n   ],\n   [\n    -15020613.641981527,\n    -10555045.305672899\n   ]\n  ],\n  \"private_out\": [\n   [\n    -81341075.74699487,\n    82454723.55446056\n   ],\n   [\n    27945427.487469792,\n    96413425.31231406\n   ]\n  ]\n },\n \"netv6\": {\n  \"in\": [\n   [\n    -55379870.95327721,\n    -58031461.50047152\n   ],\n   [\n    23565199.019047126,\n    -22749066.695275515\n   ]\n  ],\n  \"out\": [\n   [\n    60736601.99778339,\n    3807542.7451248765\n   ],\n   [\n    70043013.24284875,\n    9525955.540297076\n   ]\n  ],\n  \"private_in\": [\n   [\n    54886622.73691952,\n    -57310642.05154044\n   ],\n   [\n    29465002.753343314,\n    -1821546.1866955012\n   ]\n  ],\n  \"private_out\": [\n   [\n    12187232.605984464,\n    -16953509.22734496\n   ],\n   [\n    -69084324.85295507,\n    23748325.319529057\n   ]\n  ]\n },\n \"title\": \"linode.com - my-linode (linode123456) - day (5 min avg)\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"stats"
															],
															"variable": [
																{
																	"key": "linodeId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "View Statistics (year/month)",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/stats/:year/:month",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"stats",
														":year",
														":month"
													],
													"variable": [
														{
															"key": "linodeId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) ID of the Linode to look up."
														},
														{
															"key": "year",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) Numeric value representing the year to look up."
														},
														{
															"key": "month",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) Numeric value representing the month to look up."
														}
													]
												},
												"description": "Returns statistics for a specific month. The year/month values must be either a date in the past, or the current month. If the current month, statistics will be retrieved for the past 30 days.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/stats/:year/:month",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"stats",
																":year",
																":month"
															],
															"variable": [
																{
																	"key": "linodeId"
																},
																{
																	"key": "year"
																},
																{
																	"key": "month"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "The Linode's statistics for the requested period.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/linode/instances/:linodeId/stats/:year/:month",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"linode",
																"instances",
																":linodeId",
																"stats",
																":year",
																":month"
															],
															"variable": [
																{
																	"key": "linodeId"
																},
																{
																	"key": "year"
																},
																{
																	"key": "month"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"cpu\": [\n  [\n   -62170203.95763209,\n   89046436.68355593\n  ],\n  [\n   19090690.9477389,\n   -50634272.25000004\n  ]\n ],\n \"io\": {\n  \"io\": [\n   [\n    -26271233.714886665,\n    2011195.4043636024\n   ],\n   [\n    53590621.10810223,\n    9299866.943688512\n   ]\n  ],\n  \"swap\": [\n   [\n    88453570.94855765,\n    16717068.447226062\n   ],\n   [\n    -15833196.676511914,\n    57368873.01161224\n   ]\n  ]\n },\n \"netv4\": {\n  \"in\": [\n   [\n    -57920732.25558512,\n    58678792.17912838\n   ],\n   [\n    75421864.60816184,\n    57918232.843773335\n   ]\n  ],\n  \"out\": [\n   [\n    -61973178.18845356,\n    -69495186.75998951\n   ],\n   [\n    -47824690.14338804,\n    -19768163.628389418\n   ]\n  ],\n  \"private_in\": [\n   [\n    25886113.34987721,\n    -89660442.33801855\n   ],\n   [\n    23282196.60863051,\n    -80264038.86050853\n   ]\n  ],\n  \"private_out\": [\n   [\n    67362902.63272887,\n    -62752663.37272165\n   ],\n   [\n    53470153.75498742,\n    71933575.89084357\n   ]\n  ]\n },\n \"netv6\": {\n  \"in\": [\n   [\n    -6445508.592126489,\n    -77806374.38786848\n   ],\n   [\n    64655012.79477045,\n    17267380.2716548\n   ]\n  ],\n  \"out\": [\n   [\n    -19856680.57107936,\n    27224124.48545599\n   ],\n   [\n    -47411129.63385126,\n    -97513357.63995117\n   ]\n  ],\n  \"private_in\": [\n   [\n    67022847.648926616,\n    -39765327.4068789\n   ],\n   [\n    28554269.706572294,\n    96976482.39474446\n   ]\n  ],\n  \"private_out\": [\n   [\n    14185264.990486339,\n    88554025.1433996\n   ],\n   [\n    98622761.863325,\n    -49798778.0258879\n   ]\n  ]\n },\n \"title\": \"linode.com - my-linode (linode123456) - day (5 min avg)\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to look up"
												}
											]
										},
										"description": "Deletes a Linode you have permission to `read_write`.\n\n**Deleting a Linode is a destructive action and cannot be undone.**\n\nAdditionally, deleting a Linode:\n\n  * Gives up any IP addresses the Linode was assigned.\n  * Deletes all Disks, Backups, Configs, etc.\n  * Stops billing for the Linode and its associated services. You will be billed for time used\n    within the billing period the Linode was active.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Delete successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to look up"
												}
											]
										},
										"description": "Get a specific Linode by ID."
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Returns a single Linode object.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"group\": \"Linode-Group\",\n \"label\": \"kJ3o\",\n \"region\": \"us-east\",\n \"type\": \"g6-standard-2\"\n}"
										}
									]
								},
								{
									"name": "Update Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"group\": \"proident Ut Duis\",\n    \"label\": \"hAMs\",\n    \"region\": \"reprehenderit\",\n    \"type\": \"voluptate aute ut in\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to look up"
												}
											]
										},
										"description": "Updates a Linode that you have permission to `read_write`.\n\n**Important**: You must be an unrestricted User in order to add or modify tags on Linodes.\n"
									},
									"response": [
										{
											"name": "The updated Linode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"group\": \"Linode-Group\",\n    \"label\": \"kJ3o\",\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"group\": \"Linode-Group\",\n \"label\": \"kJ3o\",\n \"region\": \"us-east\",\n \"type\": \"g6-standard-2\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"group\": \"Linode-Group\",\n    \"label\": \"kJ3o\",\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Boot Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/boot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"boot"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Linode to boot."
												}
											]
										},
										"description": "Boots a Linode you have permission to modify. If no parameters are given, a Config profile\nwill be chosen for this boot based on the following criteria:\n\n* If there is only one Config profile for this Linode, it will be used.\n* If there is more than one Config profile, the last booted config will be used.\n* If there is more than one Config profile and none were the last to be booted (because the\n  Linode was never booted or the last booted config was deleted) an error will be returned.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config_id\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/boot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"boot"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Boot started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config_id\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/boot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"boot"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Clone Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backups_enabled\": \"<boolean>\",\n    \"configs\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"disks\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"group\": \"<string>\",\n    \"label\": \"<string>\",\n    \"linode_id\": \"<integer>\",\n    \"region\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"clone"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to clone."
												}
											]
										},
										"description": "You can clone your Linode's existing Disks or Configuration profiles to\nanother Linode on your Account. In order for this request to complete\nsuccessfully, your User must have the `add_linodes` grant. Cloning to a\nnew Linode will incur a charge on your Account.\n\nIf cloning to an existing Linode, any actions currently running or\nqueued must be completed first before you can clone to it.\n\nUp to five clone operations from any given source Linode can be run concurrently.\nIf more concurrent clones are attempted, an HTTP 400 error will be\nreturned by this endpoint.\n"
									},
									"response": [
										{
											"name": "Clone started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backups_enabled\": true,\n    \"configs\": [\n        23456,\n        23456\n    ],\n    \"disks\": [\n        25674,\n        25674\n    ],\n    \"group\": \"Linode-Group\",\n    \"label\": \"cloned-linode\",\n    \"linode_id\": 124,\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/clone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"clone"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backups_enabled\": true,\n    \"configs\": [\n        23456,\n        23456\n    ],\n    \"disks\": [\n        25674,\n        25674\n    ],\n    \"group\": \"Linode-Group\",\n    \"label\": \"cloned-linode\",\n    \"linode_id\": 124,\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/clone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"clone"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Initiate Pending Host Migration/DC Migration",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"region\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"migrate"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to migrate."
												}
											]
										},
										"description": "Initiate a pending host migration that has been scheduled by Linode or initiate a cross data center (DC) migration.  A list of pending migrations, if any, can be accessed from [GET /account/notifications](/api/v4/account-notifications). When the migration begins, your Linode will be shutdown if not already off. If the migration initiated the shutdown, it will reboot the Linode when completed.\n\nTo initiate a cross DC migration, you must pass a `region` parameter to the request body specifying the target data center region. You can view a list of all available regions and their feature capabilities from [GET /regions](/api/v4/regions). If your Linode has a DC migration already queued or you have initiated a previously scheduled migration, you will not be able to initiate a DC migration until it has completed.\n\n**Note:** Next Generation Network (NGN) data centers do not support IPv6 `/116` pools or IP Failover. If you have these features enabled on your Linode and attempt to migrate to an NGN data center, the migration will not initiate. NGN data centers include Toronto and Mumbai.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"region\": \"us-east\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/migrate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"migrate"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Scheduled migration started",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"region\": \"us-east\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/migrate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"migrate"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Upgrade Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"allow_auto_disk_resize\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/mutate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"mutate"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to mutate."
												}
											]
										},
										"description": "Linodes created with now-deprecated Types are entitled to a free upgrade to the next generation. A mutating Linode will be allocated any new resources the upgraded Type provides, and will be subsequently restarted if it was currently running.\nIf any actions are currently running or queued, those actions must be completed first before you can initiate a mutate.\n"
									},
									"response": [
										{
											"name": "Mutate started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allow_auto_disk_resize\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/mutate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"mutate"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allow_auto_disk_resize\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/mutate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"mutate"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Reboot Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"reboot"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the linode to reboot."
												}
											]
										},
										"description": "Reboots a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a reboot.\n"
									},
									"response": [
										{
											"name": "Reboot started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config_id\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/reboot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"reboot"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config_id\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/reboot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"reboot"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Rebuild Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"booted\": \"<boolean>\",\n    \"image\": \"<string>\",\n    \"root_pass\": \"<password>\",\n    \"stackscript_data\": \"<object>\",\n    \"stackscript_id\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/rebuild",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"rebuild"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to rebuild."
												}
											]
										},
										"description": "Rebuilds a Linode you have the `read_write` permission to modify.\nA rebuild will first shut down the Linode, delete all disks and configs on the Linode, and then deploy a new `image` to the Linode with the given attributes. Additionally:\n\n  * Requires an `image` be supplied.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the\n    `authorized_keys` field.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n    ],\n    \"booted\": \"<boolean>\",\n    \"image\": \"linode/debian9\",\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n    },\n    \"stackscript_id\": 10079\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/rebuild",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"rebuild"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Rebuild started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n    ],\n    \"booted\": \"<boolean>\",\n    \"image\": \"linode/debian9\",\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n    },\n    \"stackscript_id\": 10079\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/rebuild",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"rebuild"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"group\": \"Linode-Group\",\n \"label\": \"kJ3o\",\n \"region\": \"us-east\",\n \"type\": \"g6-standard-2\"\n}"
										}
									]
								},
								{
									"name": "Boot Linode into Rescue Mode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": -32398488,\n            \"volume_id\": -6117522\n        },\n        \"sdb\": {\n            \"disk_id\": 75254399,\n            \"volume_id\": -56886890\n        },\n        \"sdc\": {\n            \"disk_id\": 64990562,\n            \"volume_id\": 53892244\n        },\n        \"sdd\": {\n            \"disk_id\": 55977919,\n            \"volume_id\": 64880735\n        },\n        \"sde\": {\n            \"disk_id\": 38411208,\n            \"volume_id\": -1703292\n        },\n        \"sdf\": {\n            \"disk_id\": 30269648,\n            \"volume_id\": -13506729\n        },\n        \"sdg\": {\n            \"disk_id\": -90297655,\n            \"volume_id\": 50232203\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/rescue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"rescue"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to rescue."
												}
											]
										},
										"description": "Rescue Mode is a safe environment for performing many system recovery and disk management tasks. Rescue Mode is based on the Finnix recovery distribution, a self-contained and bootable Linux distribution. You can also use Rescue Mode for tasks other than disaster recovery, such as formatting disks to use different filesystems, copying data between disks, and downloading files from a disk via SSH and SFTP.\n* Note that \"sdh\" is reserved and unavailable during rescue.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 50992840\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -7154498\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 4076888\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -17202079\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 40182266\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -53620883\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 85141532\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/rescue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"rescue"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Rescue started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"devices\": {\n        \"sda\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 50992840\n        },\n        \"sdb\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -7154498\n        },\n        \"sdc\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 4076888\n        },\n        \"sdd\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -17202079\n        },\n        \"sde\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 40182266\n        },\n        \"sdf\": {\n            \"disk_id\": 124458,\n            \"volume_id\": -53620883\n        },\n        \"sdg\": {\n            \"disk_id\": 124458,\n            \"volume_id\": 85141532\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/rescue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"rescue"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Resize Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\",\n    \"allow_auto_disk_resize\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/resize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"resize"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to resize."
												}
											]
										},
										"description": "Resizes a Linode you have the `read_write` permission to a different Type. If any actions are currently running or queued, those actions must be completed first before you can initiate a resize. Additionally, the following criteria must be met in order to resize a Linode:\n\n  * The Linode must not have a pending migration.\n  * Your Account cannot have an outstanding balance.\n  * The Linode must not have more disk allocation than the new Type allows.\n    * In that situation, you must first delete or resize the disk to be smaller.\n"
									},
									"response": [
										{
											"name": "Resize started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"g6-standard-2\",\n    \"allow_auto_disk_resize\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/resize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"resize"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"g6-standard-2\",\n    \"allow_auto_disk_resize\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/resize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"resize"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Shut Down Linode",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"shutdown"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to shutdown."
												}
											]
										},
										"description": "Shuts down a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a shutdown.\n"
									},
									"response": [
										{
											"name": "Shutdown started.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/shutdown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"shutdown"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/shutdown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"shutdown"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View Network Transfer",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/transfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"transfer"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to look up."
												}
											]
										},
										"description": "Returns a Linode's network transfer pool statistics for the current month.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/transfer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"transfer"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "A collection of the specified Linode's network transfer statistics.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/transfer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"transfer"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"billable\": 0,\n \"quota\": 2000,\n \"used\": 22956600198\n}"
										}
									]
								},
								{
									"name": "List Linode's Volumes",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/instances/:linodeId/volumes?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances",
												":linodeId",
												"volumes"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of a collection to return."
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) ID of the Linode to look up."
												}
											]
										},
										"description": "View Block Storage Volumes attached to this Linode.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/volumes?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"volumes"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Returns an array of Block Storage Volumes attached to this Linode.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/instances/:linodeId/volumes?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"instances",
														":linodeId",
														"volumes"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"label\": \"my-volume\",\n   \"created\": \"1949-10-02T09:10:51.146Z\",\n   \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n   \"id\": 12345,\n   \"linode_id\": 12346,\n   \"region\": \"us-east\",\n   \"size\": 30,\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"updated\": \"1993-09-09T22:53:49.372Z\"\n  },\n  {\n   \"label\": \"my-volume\",\n   \"created\": \"2006-03-04T20:31:08.817Z\",\n   \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n   \"id\": 12345,\n   \"linode_id\": 12346,\n   \"region\": \"us-east\",\n   \"size\": 30,\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"updated\": \"1994-09-21T18:17:25.398Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Linodes",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/instances?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Linodes you have permission to view.\n"
							},
							"response": [
								{
									"name": "Returns an array of all Linodes on your Account.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/linode/instances?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"group\": \"Linode-Group\",\n   \"label\": \"c4FU\",\n   \"region\": \"us-east\",\n   \"type\": \"g6-standard-2\"\n  },\n  {\n   \"group\": \"Linode-Group\",\n   \"label\": \"m0gn\",\n   \"region\": \"us-east\",\n   \"type\": \"g6-standard-2\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/linode/instances?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Linode",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"<string>\",\n    \"region\": \"<string>\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backup_id\": \"<integer>\",\n    \"backups_enabled\": \"<boolean>\",\n    \"booted\": \"<boolean>\",\n    \"group\": \"<string>\",\n    \"image\": \"<string>\",\n    \"label\": {},\n    \"private_ip\": \"<boolean>\",\n    \"root_pass\": \"<password>\",\n    \"stackscript_data\": \"<object>\",\n    \"stackscript_id\": \"<integer>\",\n    \"swap_size\": 512,\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/linode/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"instances"
									]
								},
								"description": "Creates a Linode Instance on your Account. In order for this\nrequest to complete successfully, your User must have the `add_linodes` grant. Creating a\nnew Linode will incur a charge on your Account.\n\nLinodes can be created using one of the available Types. See\n[GET /linode/types](/api/v4/linode-types) to get more\ninformation about each Type's specs and cost.\n\nLinodes can be created in any one of our available\n[Regions](/api/v4/regions) for a list\nof available Regions you can deploy your Linode in.\n\nLinodes can be created in a number of ways:\n\n* Using a Linode Linux Distribution image or an Image you created based on another Linode.\n  * The Linode will be `running` after it completes `provisioning`.\n  * A default config with two Disks, one being a 512 swap disk, is created.\n    * `swap_size` can be used to customize the swap disk size.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](/api/v4/profile-sshkeys/#post) for more information.\n\n* Using a StackScript.\n  * See [/linode/stackscripts](/api/v4/linode-stackscripts) for\n    a list of available StackScripts.\n  * The Linode will be `running` after it completes `provisioning`.\n  * Requires a compatible Image to be supplied.\n    * See [/linode/stackscript/{stackscriptId}](/api/v4/linode-stackscripts-stackscript-id) for compatible Images.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](/api/v4/profile-sshkeys/#post) for more information.\n\n* Using one of your other Linode's backups.\n  * You must create a Linode large enough to accommodate the Backup's size.\n  * The Disks and Config will match that of the Linode that was backed up.\n  * The `root_pass` will match that of the Linode that was backed up.\n\n* Create an empty Linode.\n  * The Linode will remain `offline` and must be manually started.\n    * See [POST /linode/instances/{linodeId}/boot](/api/v4/linode-instances-linode-id-boot/#post).\n  * Disks and Configs must be created manually.\n  * This is only recommended for advanced use cases.\n\n\n**Important**: You must be an unrestricted User in order to add or modify\ntags on Linodes.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"g6-standard-2\",\n    \"region\": \"us-east\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backup_id\": 1234,\n    \"backups_enabled\": \"<boolean>\",\n    \"booted\": \"<boolean>\",\n    \"group\": \"Linode-Group\",\n    \"image\": \"linode/debian9\",\n    \"label\": {},\n    \"private_ip\": true,\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": \"<object>\",\n    \"stackscript_id\": 10079,\n    \"swap_size\": 512,\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A new Linode is being created.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"g6-standard-2\",\n    \"region\": \"us-east\",\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"authorized_users\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backup_id\": 1234,\n    \"backups_enabled\": \"<boolean>\",\n    \"booted\": \"<boolean>\",\n    \"group\": \"Linode-Group\",\n    \"image\": \"linode/debian9\",\n    \"label\": {},\n    \"private_ip\": true,\n    \"root_pass\": \"aComplexP@ssword\",\n    \"stackscript_data\": \"<object>\",\n    \"stackscript_id\": 10079,\n    \"swap_size\": 512,\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"instances"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"group\": \"Linode-Group\",\n \"label\": \"kJ3o\",\n \"region\": \"us-east\",\n \"type\": \"g6-standard-2\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "kernels",
					"item": [
						{
							"name": "List Kernels",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/kernels?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"kernels"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Lists available Kernels.\n"
							},
							"response": [
								{
									"name": "Returns an array of Kernels.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/kernels?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"kernels"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"architecture\": \"x86_64\",\n   \"id\": \"linode/latest-64bit\",\n   \"kvm\": true,\n   \"label\": \"Latest 64 bit (4.15.7-x86_64-linode102)\",\n   \"pvops\": false,\n   \"version\": \"4.15.7\",\n   \"xen\": false\n  },\n  {\n   \"architecture\": \"x86_64\",\n   \"id\": \"linode/latest-64bit\",\n   \"kvm\": true,\n   \"label\": \"Latest 64 bit (4.15.7-x86_64-linode102)\",\n   \"pvops\": false,\n   \"version\": \"4.15.7\",\n   \"xen\": false\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/kernels?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"kernels"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "View Kernel",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/kernels/:kernelId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"kernels",
										":kernelId"
									],
									"variable": [
										{
											"key": "kernelId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the Kernel to look up."
										}
									]
								},
								"description": "Returns information about a single Kernel.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/kernels/:kernelId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"kernels",
												":kernelId"
											],
											"variable": [
												{
													"key": "kernelId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A single Kernel object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/kernels/:kernelId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"kernels",
												":kernelId"
											],
											"variable": [
												{
													"key": "kernelId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"architecture\": \"x86_64\",\n \"id\": \"linode/latest-64bit\",\n \"kvm\": true,\n \"label\": \"Latest 64 bit (4.15.7-x86_64-linode102)\",\n \"pvops\": false,\n \"version\": \"4.15.7\",\n \"xen\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "stackscripts",
					"item": [
						{
							"name": "{stackscript Id}",
							"item": [
								{
									"name": "Delete StackScript",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts",
												":stackscriptId"
											],
											"variable": [
												{
													"key": "stackscriptId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the StackScript to look up."
												}
											]
										},
										"description": "Deletes a private StackScript you have permission to `read_write`. You cannot delete a public StackScript.\n"
									},
									"response": [
										{
											"name": "StackScript was deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View StackScript",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts",
												":stackscriptId"
											],
											"variable": [
												{
													"key": "stackscriptId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the StackScript to look up."
												}
											]
										},
										"description": "Returns all of the information about a specified StackScript, including the contents of the script.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "A single StackScript.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1998-02-20T19:14:56.404Z\",\n \"deployments_active\": 1,\n \"deployments_total\": 12,\n \"description\": \"This StackScript installs and configures MySQL\\n\",\n \"id\": 10079,\n \"images\": [\n  \"linode/debian9\",\n  \"linode/debian8\"\n ],\n \"is_public\": true,\n \"label\": \"a-stackscript\",\n \"rev_note\": \"Set up MySQL\",\n \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n \"updated\": \"1973-10-18T22:13:19.473Z\",\n \"user_defined_fields\": [\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  },\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  }\n ],\n \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n \"username\": \"myuser\"\n}"
										}
									]
								},
								{
									"name": "Update StackScript",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"is_public\": \"<boolean>\",\n    \"label\": \"<string>\",\n    \"rev_note\": \"<string>\",\n    \"script\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts",
												":stackscriptId"
											],
											"variable": [
												{
													"key": "stackscriptId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the StackScript to look up."
												}
											]
										},
										"description": "Updates a StackScript.\n\n**Once a StackScript is made public, it cannot be made private.**\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"This StackScript installs and configures MySQL\\n\",\n    \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n    ],\n    \"is_public\": true,\n    \"label\": \"a-stackscript\",\n    \"rev_note\": \"Set up MySQL\",\n    \"script\": \"\\\"#!/bin/bash\\\"\\n\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "StackScript was successfully modified.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"This StackScript installs and configures MySQL\\n\",\n    \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n    ],\n    \"is_public\": true,\n    \"label\": \"a-stackscript\",\n    \"rev_note\": \"Set up MySQL\",\n    \"script\": \"\\\"#!/bin/bash\\\"\\n\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/linode/stackscripts/:stackscriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"linode",
														"stackscripts",
														":stackscriptId"
													],
													"variable": [
														{
															"key": "stackscriptId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1979-01-18T18:05:35.378Z\",\n \"deployments_active\": 1,\n \"deployments_total\": 12,\n \"description\": \"This StackScript installs and configures MySQL\\n\",\n \"id\": 10079,\n \"images\": [\n  \"linode/debian9\",\n  \"linode/debian8\"\n ],\n \"is_public\": true,\n \"label\": \"a-stackscript\",\n \"rev_note\": \"Set up MySQL\",\n \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n \"updated\": \"1966-02-12T12:39:53.673Z\",\n \"user_defined_fields\": [\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  },\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  }\n ],\n \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n \"username\": \"myuser\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List StackScripts",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/stackscripts?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"stackscripts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "If the request is not authenticated, only public StackScripts are returned.\n\nFor more information on StackScripts, please read our guide: <a target=\"_top\" href=\"https://linode.com/docs/platform/stackscripts/\">Automate Deployment with StackScripts</a>.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A list of StackScripts available to the User, including private StackScripts owned by the User if the request is authenticated.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"2012-04-26T21:02:26.560Z\",\n   \"deployments_active\": 1,\n   \"deployments_total\": 12,\n   \"description\": \"This StackScript installs and configures MySQL\\n\",\n   \"id\": 10079,\n   \"images\": [\n    \"linode/debian9\",\n    \"linode/debian8\"\n   ],\n   \"is_public\": true,\n   \"label\": \"a-stackscript\",\n   \"rev_note\": \"Set up MySQL\",\n   \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n   \"updated\": \"2015-03-20T15:38:32.446Z\",\n   \"user_defined_fields\": [\n    {\n     \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n     \"readOnly\": true,\n     \"type\": \"string\"\n    },\n    {\n     \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n     \"readOnly\": true,\n     \"type\": \"string\"\n    }\n   ],\n   \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n   \"username\": \"myuser\"\n  },\n  {\n   \"created\": \"1983-10-03T09:23:49.998Z\",\n   \"deployments_active\": 1,\n   \"deployments_total\": 12,\n   \"description\": \"This StackScript installs and configures MySQL\\n\",\n   \"id\": 10079,\n   \"images\": [\n    \"linode/debian9\",\n    \"linode/debian8\"\n   ],\n   \"is_public\": true,\n   \"label\": \"a-stackscript\",\n   \"rev_note\": \"Set up MySQL\",\n   \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n   \"updated\": \"2006-09-20T08:00:28.906Z\",\n   \"user_defined_fields\": [\n    {\n     \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n     \"readOnly\": true,\n     \"type\": \"string\"\n    },\n    {\n     \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n     \"readOnly\": true,\n     \"type\": \"string\"\n    }\n   ],\n   \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n   \"username\": \"myuser\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "Create StackScript",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"created\": \"1977-08-20T14:21:53.956Z\",\n    \"deployments_active\": -52820413,\n    \"deployments_total\": -75879262,\n    \"description\": \"ipsum commodo esse incididu\",\n    \"id\": 51846012,\n    \"images\": [\n        \"fugiat cillum nulla in\",\n        \"in laborum nisi\"\n    ],\n    \"is_public\": false,\n    \"label\": \"volu\",\n    \"rev_note\": \"consequat sint incididunt\",\n    \"script\": \"occaecat Ut\",\n    \"updated\": \"2019-04-15T13:22:25.916Z\",\n    \"user_defined_fields\": [\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        },\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        }\n    ],\n    \"user_gravatar_id\": \"ut exercitation enim\",\n    \"username\": \"aliquip sed est\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/linode/stackscripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"stackscripts"
									]
								},
								"description": "Creates a StackScript in your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"created\": \"2002-11-12T03:27:29.362Z\",\n    \"deployments_active\": 1,\n    \"deployments_total\": 12,\n    \"description\": \"This StackScript installs and configures MySQL\\n\",\n    \"id\": 10079,\n    \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n    ],\n    \"is_public\": true,\n    \"label\": \"a-stackscript\",\n    \"rev_note\": \"Set up MySQL\",\n    \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n    \"updated\": \"1971-04-21T00:35:04.502Z\",\n    \"user_defined_fields\": [\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        },\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        }\n    ],\n    \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n    \"username\": \"myuser\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "StackScript successfully created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"created\": \"2002-11-12T03:27:29.362Z\",\n    \"deployments_active\": 1,\n    \"deployments_total\": 12,\n    \"description\": \"This StackScript installs and configures MySQL\\n\",\n    \"id\": 10079,\n    \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n    ],\n    \"is_public\": true,\n    \"label\": \"a-stackscript\",\n    \"rev_note\": \"Set up MySQL\",\n    \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n    \"updated\": \"1971-04-21T00:35:04.502Z\",\n    \"user_defined_fields\": [\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        },\n        {\n            \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n        }\n    ],\n    \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n    \"username\": \"myuser\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/linode/stackscripts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"stackscripts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"1998-02-20T19:14:56.404Z\",\n \"deployments_active\": 1,\n \"deployments_total\": 12,\n \"description\": \"This StackScript installs and configures MySQL\\n\",\n \"id\": 10079,\n \"images\": [\n  \"linode/debian9\",\n  \"linode/debian8\"\n ],\n \"is_public\": true,\n \"label\": \"a-stackscript\",\n \"rev_note\": \"Set up MySQL\",\n \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n \"updated\": \"1973-10-18T22:13:19.473Z\",\n \"user_defined_fields\": [\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  },\n  {\n   \"description\": \"The default value.  If not specified, this value will be used.\\n\",\n   \"readOnly\": true,\n   \"type\": \"string\"\n  }\n ],\n \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n \"username\": \"myuser\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "types",
					"item": [
						{
							"name": "List Types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"types"
									]
								},
								"description": "Returns collection of Linode Types, including pricing and specifications for each Type. These are used when [creating](/api/v4/linode-instances/#post) or [resizing](/api/v4/linode-instances-linode-id-resize/#post) Linodes.\n"
							},
							"response": [
								{
									"name": "A collection of Linode Types.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"addons\": {\n    \"backups\": {\n     \"price\": {\n      \"hourly\": 64147922,\n      \"monthly\": 5\n     }\n    }\n   },\n   \"class\": \"standard\",\n   \"disk\": 81920,\n   \"gpus\": 0,\n   \"id\": \"g6-standard-2\",\n   \"label\": \"Linode 4GB\",\n   \"memory\": 4096,\n   \"network_out\": 1000,\n   \"price\": {\n    \"hourly\": -73664730,\n    \"monthly\": 20\n   },\n   \"successor\": null,\n   \"transfer\": 4000,\n   \"vcpus\": 2\n  },\n  {\n   \"addons\": {\n    \"backups\": {\n     \"price\": {\n      \"hourly\": -16934536,\n      \"monthly\": 5\n     }\n    }\n   },\n   \"class\": \"standard\",\n   \"disk\": 81920,\n   \"gpus\": 0,\n   \"id\": \"g6-standard-2\",\n   \"label\": \"Linode 4GB\",\n   \"memory\": 4096,\n   \"network_out\": 1000,\n   \"price\": {\n    \"hourly\": -68729029,\n    \"monthly\": 20\n   },\n   \"successor\": null,\n   \"transfer\": 4000,\n   \"vcpus\": 2\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"types"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "View Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/linode/types/:typeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"linode",
										"types",
										":typeId"
									],
									"variable": [
										{
											"key": "typeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the Linode Type to look up."
										}
									]
								},
								"description": "Returns information about a specific Linode Type, including pricing and specifications. This is used when [creating](/api/v4/linode-instances/#post) or [resizing](/api/v4/linode-instances-linode-id-resize/#post) Linodes.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/types/:typeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"types",
												":typeId"
											],
											"variable": [
												{
													"key": "typeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A single Linode Type.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/linode/types/:typeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"linode",
												"types",
												":typeId"
											],
											"variable": [
												{
													"key": "typeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"addons\": {\n  \"backups\": {\n   \"price\": {\n    \"hourly\": -27994295,\n    \"monthly\": 5\n   }\n  }\n },\n \"class\": \"standard\",\n \"disk\": 81920,\n \"gpus\": 0,\n \"id\": \"g6-standard-2\",\n \"label\": \"Linode 4GB\",\n \"memory\": 4096,\n \"network_out\": 1000,\n \"price\": {\n  \"hourly\": -37083517,\n  \"monthly\": 20\n },\n \"successor\": null,\n \"transfer\": 4000,\n \"vcpus\": 2\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "longview",
			"item": [
				{
					"name": "clients",
					"item": [
						{
							"name": "{client Id}",
							"item": [
								{
									"name": "Delete Longview Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The Longview Client ID to access."
												}
											]
										},
										"description": "Deletes a Longview Client from your Account.\n\n**All information stored for this client will be lost.**\n\nThis _does not_ uninstall the Longview Client application for your Linode - you must do that manually.\n"
									},
									"response": [
										{
											"name": "Longview Client deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View Longview Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The Longview Client ID to access."
												}
											]
										},
										"description": "Returns a single Longview Client you can access.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "The requested Longview Client.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n \"apps\": {\n  \"apache\": true,\n  \"mysql\": true,\n  \"nginx\": false\n },\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"id\": 789,\n \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n \"label\": \"client789\",\n \"updated\": \"2018-01-01T00:01:01.000Z\"\n}"
										}
									]
								},
								{
									"name": "Update Longview Client",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/longview/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The Longview Client ID to access."
												}
											]
										},
										"description": "Updates a Longview Client.  This cannot update how it monitors your server; use the Longview Client application on your Linode for monitoring configuration.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"client789\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Longview Client updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"client789\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/longview/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"longview",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n \"apps\": {\n  \"apache\": true,\n  \"mysql\": true,\n  \"nginx\": false\n },\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"id\": 789,\n \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n \"label\": \"client789\",\n \"updated\": \"2018-01-01T00:01:01.000Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Longview Clients",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/longview/clients?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"longview",
										"clients"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Longview Clients you have access to. Longview Client is used to monitor stats on your Linode with the help of the Longview Client application.\n"
							},
							"response": [
								{
									"name": "A paginated list of Longview Clients.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/longview/clients?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n   \"apps\": {\n    \"apache\": true,\n    \"mysql\": true,\n    \"nginx\": false\n   },\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"id\": 789,\n   \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n   \"label\": \"client789\",\n   \"updated\": \"2018-01-01T00:01:01.000Z\"\n  },\n  {\n   \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n   \"apps\": {\n    \"apache\": true,\n    \"mysql\": true,\n    \"nginx\": false\n   },\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"id\": 789,\n   \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n   \"label\": \"client789\",\n   \"updated\": \"2018-01-01T00:01:01.000Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/longview/clients?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Longview Client",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/longview/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"longview",
										"clients"
									]
								},
								"description": "Creates a Longview Client.  This Client will not begin monitoring the status of your server until you configure the Longview Client application on your Linode using the returning `install_code` and `api_key`.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"client789\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/longview/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Longview Client created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"client789\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/longview/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n \"apps\": {\n  \"apache\": true,\n  \"mysql\": true,\n  \"nginx\": false\n },\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"id\": 789,\n \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n \"label\": \"client789\",\n \"updated\": \"2018-01-01T00:01:01.000Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "List Longview Subscriptions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/longview/subscriptions?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"longview",
										"subscriptions"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of available Longview Subscriptions. This is a public endpoint and requires no authentication.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/subscriptions?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"subscriptions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of Longview Subscriptions.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/subscriptions?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"subscriptions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"clients_included\": 10,\n   \"id\": \"longview-10\",\n   \"label\": \"Longivew Pro 10 pack\",\n   \"price\": {\n    \"hourly\": 0.06,\n    \"monthly\": 40\n   }\n  },\n  {\n   \"clients_included\": 10,\n   \"id\": \"longview-10\",\n   \"label\": \"Longivew Pro 10 pack\",\n   \"price\": {\n    \"hourly\": 0.06,\n    \"monthly\": 40\n   }\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "View Longview Subscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/longview/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"longview",
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "subscriptionId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The Longview Subscription to look up."
										}
									]
								},
								"description": "Returns a single LongviewSubscription object.  This is a public endpoint and requires no authentication.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/subscriptions/:subscriptionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"subscriptions",
												":subscriptionId"
											],
											"variable": [
												{
													"key": "subscriptionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The requested Longview Subscription.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/longview/subscriptions/:subscriptionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"longview",
												"subscriptions",
												":subscriptionId"
											],
											"variable": [
												{
													"key": "subscriptionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"clients_included\": 10,\n \"id\": \"longview-10\",\n \"label\": \"Longivew Pro 10 pack\",\n \"price\": {\n  \"hourly\": 0.06,\n  \"monthly\": 40\n }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "managed",
			"item": [
				{
					"name": "contacts",
					"item": [
						{
							"name": "{contact Id}",
							"item": [
								{
									"name": "Delete Managed Contact",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/contacts/:contactId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts",
												":contactId"
											],
											"variable": [
												{
													"key": "contactId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the contact to access."
												}
											]
										},
										"description": "Deletes a Managed Contact.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Contact deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Managed Contact",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/contacts/:contactId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts",
												":contactId"
											],
											"variable": [
												{
													"key": "contactId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the contact to access."
												}
											]
										},
										"description": "Returns a single Managed Contact.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "The requested Managed Contact.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"john.doe@example.org\",\n \"group\": \"on-call\",\n \"id\": 567,\n \"name\": \"John Doe\",\n \"phone\": {\n  \"primary\": \"123-456-7890\",\n  \"secondary\": null\n },\n \"updated\": \"1943-03-31T10:40:55.078Z\"\n}"
										}
									]
								},
								{
									"name": "Update Managed Contact",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<email>\",\n    \"group\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": {\n        \"primary\": \"<string>\",\n        \"secondary\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/contacts/:contactId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts",
												":contactId"
											],
											"variable": [
												{
													"key": "contactId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the contact to access."
												}
											]
										},
										"description": "Updates information about a Managed Contact.\n"
									},
									"response": [
										{
											"name": "Contact updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"john.doe@example.org\",\n    \"group\": \"on-call\",\n    \"name\": \"John Doe\",\n    \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"john.doe@example.org\",\n \"group\": \"on-call\",\n \"id\": 567,\n \"name\": \"John Doe\",\n \"phone\": {\n  \"primary\": \"123-456-7890\",\n  \"secondary\": null\n },\n \"updated\": \"1943-03-31T10:40:55.078Z\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"john.doe@example.org\",\n    \"group\": \"on-call\",\n    \"name\": \"John Doe\",\n    \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/contacts/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"contacts",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Managed Contacts",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/contacts?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"contacts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Managed Contacts on your Account.\n"
							},
							"response": [
								{
									"name": "A paginated list of ManagedContacts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/contacts?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"email\": \"john.doe@example.org\",\n   \"group\": \"on-call\",\n   \"id\": 567,\n   \"name\": \"John Doe\",\n   \"phone\": {\n    \"primary\": \"123-456-7890\",\n    \"secondary\": null\n   },\n   \"updated\": \"1982-09-11T20:49:05.104Z\"\n  },\n  {\n   \"email\": \"john.doe@example.org\",\n   \"group\": \"on-call\",\n   \"id\": 567,\n   \"name\": \"John Doe\",\n   \"phone\": {\n    \"primary\": \"123-456-7890\",\n    \"secondary\": null\n   },\n   \"updated\": \"1969-05-10T22:30:37.636Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/contacts?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Managed Contact",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"group\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": {\n        \"primary\": \"<string>\",\n        \"secondary\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/managed/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"contacts"
									]
								},
								"description": "Creates a Managed Contact.  A Managed Contact is someone Linode special forces can contact in the course of attempting to resolve an issue with a Managed Service.\n"
							},
							"response": [
								{
									"name": "Contact created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"john.doe@example.org\",\n    \"group\": \"on-call\",\n    \"name\": \"John Doe\",\n    \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"email\": \"john.doe@example.org\",\n \"group\": \"on-call\",\n \"id\": 567,\n \"name\": \"John Doe\",\n \"phone\": {\n  \"primary\": \"123-456-7890\",\n  \"secondary\": null\n },\n \"updated\": \"1943-03-31T10:40:55.078Z\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"john.doe@example.org\",\n    \"group\": \"on-call\",\n    \"name\": \"John Doe\",\n    \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"contacts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "credentials",
					"item": [
						{
							"name": "{credential Id}",
							"item": [
								{
									"name": "View Managed Credential",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "credentialId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Credential to access."
												}
											]
										},
										"description": "Returns a single Managed Credential.\n"
									},
									"response": [
										{
											"name": "The requested Managed Credential.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 9991,\n \"label\": \"prod-password-1\",\n \"last_decrypted\": \"1979-01-05T00:21:32.798Z\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update Managed Credential",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "credentialId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Credential to access."
												}
											]
										},
										"description": "Updates the label of a Managed Credential. This endpoint does not update the username and password for a Managed Credential. To do this, use the Update Managed Credential Username and Password ([POST /managed/credentials/{credentialId}/update](https://developers.linode.com/api/docs/v4#operation/updateManagedCredentialUsernamePassword)) endpoint instead.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"prod-password-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Credential updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"prod-password-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 9991,\n \"label\": \"prod-password-1\",\n \"last_decrypted\": \"1948-07-09T09:45:00.824Z\"\n}"
										}
									]
								},
								{
									"name": "Delete Managed Credential",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/:credentialId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												":credentialId",
												"revoke"
											],
											"variable": [
												{
													"key": "credentialId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Credential to access."
												}
											]
										},
										"description": "Deletes a Managed Credential.  Linode special forces will no longer have access to this Credential when attempting to resolve issues.\n"
									},
									"response": [
										{
											"name": "Credential deleted successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId",
														"revoke"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId",
														"revoke"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update Managed Credential Username and Password",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/:credentialId/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												":credentialId",
												"update"
											],
											"variable": [
												{
													"key": "credentialId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Credential to update."
												}
											]
										},
										"description": "Updates the username and password for a Managed Credential.\n"
									},
									"response": [
										{
											"name": "Credential username and password updated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"s3cur3P@ssw0rd\",\n    \"username\": \"johndoe\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId",
														"update"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"s3cur3P@ssw0rd\",\n    \"username\": \"johndoe\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/credentials/:credentialId/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"credentials",
														":credentialId",
														"update"
													],
													"variable": [
														{
															"key": "credentialId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Managed Credentials",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/credentials?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"credentials"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Managed Credentials on your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of ManagedCredentials",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"id\": 9991,\n   \"label\": \"prod-password-1\",\n   \"last_decrypted\": \"1964-01-20T04:38:32.090Z\"\n  },\n  {\n   \"id\": 9991,\n   \"label\": \"prod-password-1\",\n   \"last_decrypted\": \"1956-03-28T01:42:38.338Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "Create Managed Credential",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": -62926378,\n    \"label\": \"VKNA\",\n    \"last_decrypted\": \"2003-09-18T18:35:46.773Z\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/managed/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"credentials"
									]
								},
								"description": "Creates a Managed Credential. A Managed Credential is stored securely to allow Linode special forces to access your Managed Services and resolve issues.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 9991,\n    \"label\": \"prod-password-1\",\n    \"last_decrypted\": \"1964-08-16T22:41:59.875Z\",\n    \"password\": \"s3cur3P@ssw0rd\",\n    \"username\": \"johndoe\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Credential created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": 9991,\n    \"label\": \"prod-password-1\",\n    \"last_decrypted\": \"1964-08-16T22:41:59.875Z\",\n    \"password\": \"s3cur3P@ssw0rd\",\n    \"username\": \"johndoe\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 9991,\n \"label\": \"prod-password-1\",\n \"last_decrypted\": \"1979-01-05T00:21:32.798Z\"\n}"
								}
							]
						},
						{
							"name": "View Managed SSH Key",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/credentials/sshkey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"credentials",
										"sshkey"
									]
								},
								"description": "Returns the unique SSH public key assigned to your Linode account's Managed service. If you [add this public key](https://linode.com/docs/platform/linode-managed/#adding-the-public-key) to a Linode on your account, Linode special forces will be able to log in to the Linode with this key when attempting to resolve issues.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/sshkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												"sshkey"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The requested Managed SSH public key.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/credentials/sshkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"credentials",
												"sshkey"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"ssh_key\": \"ssh-rsa AAAAB...oD2ZQ== managedservices@linode\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "issues",
					"item": [
						{
							"name": "List Managed Issues",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/issues?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"issues"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of recent and ongoing issues detected on your Managed Services.\n"
							},
							"response": [
								{
									"name": "A paginated list of open or ongoing Managed Issues.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/issues?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"issues"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"1955-11-30T10:03:32.208Z\",\n   \"entity\": {\n    \"id\": 98765,\n    \"label\": \"Managed Issue opened!\",\n    \"type\": \"ticket\",\n    \"url\": \"/support/tickets/98765\"\n   },\n   \"id\": 823,\n   \"services\": [\n    654,\n    654\n   ]\n  },\n  {\n   \"created\": \"1956-01-08T04:14:53.963Z\",\n   \"entity\": {\n    \"id\": 98765,\n    \"label\": \"Managed Issue opened!\",\n    \"type\": \"ticket\",\n    \"url\": \"/support/tickets/98765\"\n   },\n   \"id\": 823,\n   \"services\": [\n    654,\n    654\n   ]\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/issues?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"issues"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "View Managed Issue",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/issues/:issueId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"issues",
										":issueId"
									],
									"variable": [
										{
											"key": "issueId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The Issue to look up."
										}
									]
								},
								"description": "Returns a single Issue that is impacting or did impact one of your Managed Services.\n"
							},
							"response": [
								{
									"name": "The requested issue.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/issues/:issueId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"issues",
												":issueId"
											],
											"variable": [
												{
													"key": "issueId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"1963-03-26T20:21:47.422Z\",\n \"entity\": {\n  \"id\": 98765,\n  \"label\": \"Managed Issue opened!\",\n  \"type\": \"ticket\",\n  \"url\": \"/support/tickets/98765\"\n },\n \"id\": 823,\n \"services\": [\n  654,\n  654\n ]\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/issues/:issueId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"issues",
												":issueId"
											],
											"variable": [
												{
													"key": "issueId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "linode-settings",
					"item": [
						{
							"name": "{linode Id}",
							"item": [
								{
									"name": "View Linode's Managed Settings",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"linode-settings",
												":linodeId"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The Linode ID whose settings we are accessing."
												}
											]
										},
										"description": "Returns a single Linode's Managed settings.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"linode-settings",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "The requested Linode's Managed settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"linode-settings",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"group\": \"linodes\",\n \"id\": 123,\n \"label\": \"linode123\",\n \"ssh\": {\n  \"access\": true,\n  \"ip\": \"12.34.56.78\",\n  \"port\": 22,\n  \"user\": \"linode\"\n }\n}"
										}
									]
								},
								{
									"name": "Update Linode's Managed Settings",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ssh\": {\n        \"access\": \"<boolean>\",\n        \"ip\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"user\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"linode-settings",
												":linodeId"
											],
											"variable": [
												{
													"key": "linodeId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The Linode ID whose settings we are accessing."
												}
											]
										},
										"description": "Updates a single Linode's Managed settings.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ssh\": {\n        \"access\": true,\n        \"ip\": \"12.34.56.78\",\n        \"port\": 22,\n        \"user\": \"linode\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"linode-settings",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Settings updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ssh\": {\n        \"access\": true,\n        \"ip\": \"12.34.56.78\",\n        \"port\": 22,\n        \"user\": \"linode\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/linode-settings/:linodeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"linode-settings",
														":linodeId"
													],
													"variable": [
														{
															"key": "linodeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"group\": \"linodes\",\n \"id\": 123,\n \"label\": \"linode123\",\n \"ssh\": {\n  \"access\": true,\n  \"ip\": \"12.34.56.78\",\n  \"port\": 22,\n  \"user\": \"linode\"\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Managed Linode Settings",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/linode-settings?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"linode-settings"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a paginated list of Managed Settings for your Linodes. There will be one entry per Linode on your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/linode-settings?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"linode-settings"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of Managed settings for your Linodes.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/linode-settings?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"linode-settings"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"group\": \"linodes\",\n   \"id\": 123,\n   \"label\": \"linode123\",\n   \"ssh\": {\n    \"access\": true,\n    \"ip\": \"12.34.56.78\",\n    \"port\": 22,\n    \"user\": \"linode\"\n   }\n  },\n  {\n   \"group\": \"linodes\",\n   \"id\": 123,\n   \"label\": \"linode123\",\n   \"ssh\": {\n    \"access\": true,\n    \"ip\": \"12.34.56.78\",\n    \"port\": 22,\n    \"user\": \"linode\"\n   }\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						}
					]
				},
				{
					"name": "services",
					"item": [
						{
							"name": "{service Id}",
							"item": [
								{
									"name": "Delete Managed Service",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/services/:serviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services",
												":serviceId"
											],
											"variable": [
												{
													"key": "serviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Managed Service to access."
												}
											]
										},
										"description": "Deletes a Managed Service.  This service will no longer be monitored by Linode Managed.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Service deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Managed Service",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/services/:serviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services",
												":serviceId"
											],
											"variable": [
												{
													"key": "serviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Managed Service to access."
												}
											]
										},
										"description": "Returns information about a single Managed Service on your Account.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "The requested Managed Service.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"https://example.org\",\n \"body\": \"it worked\",\n \"consultation_group\": \"on-call\",\n \"created\": \"1986-04-28T18:17:24.379Z\",\n \"credentials\": [\n  9991,\n  9991\n ],\n \"id\": 9944,\n \"label\": \"prod-1\",\n \"notes\": \"The service name is my-cool-application\",\n \"region\": \"ipsum enim irure\",\n \"service_type\": \"url\",\n \"status\": \"ok\",\n \"timeout\": 30,\n \"updated\": \"1966-06-06T09:35:24.085Z\"\n}"
										}
									]
								},
								{
									"name": "Update Managed Service",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"<string>\",\n    \"body\": \"<string>\",\n    \"consultation_group\": \"<string>\",\n    \"credentials\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"label\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"region\": \"<string>\",\n    \"service_type\": \"<string>\",\n    \"timeout\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/services/:serviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services",
												":serviceId"
											],
											"variable": [
												{
													"key": "serviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Managed Service to access."
												}
											]
										},
										"description": "Updates information about a Managed Service.\n"
									},
									"response": [
										{
											"name": "Service updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"address\": \"https://example.org\",\n    \"body\": \"it worked\",\n    \"consultation_group\": \"on-call\",\n    \"credentials\": [\n        9991,\n        9991\n    ],\n    \"label\": \"prod-1\",\n    \"notes\": \"The service name is my-cool-application\",\n    \"region\": \"<string>\",\n    \"service_type\": \"url\",\n    \"timeout\": 30\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"https://example.org\",\n \"body\": \"it worked\",\n \"consultation_group\": \"on-call\",\n \"created\": \"1960-09-18T23:37:37.529Z\",\n \"credentials\": [\n  9991,\n  9991\n ],\n \"id\": 9944,\n \"label\": \"prod-1\",\n \"notes\": \"The service name is my-cool-application\",\n \"region\": \"<string>\",\n \"service_type\": \"url\",\n \"status\": \"ok\",\n \"timeout\": 30,\n \"updated\": \"1988-01-28T03:18:39.472Z\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"address\": \"https://example.org\",\n    \"body\": \"it worked\",\n    \"consultation_group\": \"on-call\",\n    \"credentials\": [\n        9991,\n        9991\n    ],\n    \"label\": \"prod-1\",\n    \"notes\": \"The service name is my-cool-application\",\n    \"region\": \"<string>\",\n    \"service_type\": \"url\",\n    \"timeout\": 30\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Disable Managed Service",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/services/:serviceId/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services",
												":serviceId",
												"disable"
											],
											"variable": [
												{
													"key": "serviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Managed Service to disable."
												}
											]
										},
										"description": "Temporarily disables monitoring of a Managed Service.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId",
														"disable"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Service disabled.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId",
														"disable"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"https://example.org\",\n \"body\": \"it worked\",\n \"consultation_group\": \"on-call\",\n \"created\": \"1960-09-18T23:37:37.529Z\",\n \"credentials\": [\n  9991,\n  9991\n ],\n \"id\": 9944,\n \"label\": \"prod-1\",\n \"notes\": \"The service name is my-cool-application\",\n \"region\": \"<string>\",\n \"service_type\": \"url\",\n \"status\": \"ok\",\n \"timeout\": 30,\n \"updated\": \"1988-01-28T03:18:39.472Z\"\n}"
										}
									]
								},
								{
									"name": "Enable Managed Service",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed/services/:serviceId/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services",
												":serviceId",
												"enable"
											],
											"variable": [
												{
													"key": "serviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Managed Service to enable."
												}
											]
										},
										"description": "Enables monitoring of a Managed Service.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId",
														"enable"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Service enabled.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/managed/services/:serviceId/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed",
														"services",
														":serviceId",
														"enable"
													],
													"variable": [
														{
															"key": "serviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"https://example.org\",\n \"body\": \"it worked\",\n \"consultation_group\": \"on-call\",\n \"created\": \"1960-09-18T23:37:37.529Z\",\n \"credentials\": [\n  9991,\n  9991\n ],\n \"id\": 9944,\n \"label\": \"prod-1\",\n \"notes\": \"The service name is my-cool-application\",\n \"region\": \"<string>\",\n \"service_type\": \"url\",\n \"status\": \"ok\",\n \"timeout\": 30,\n \"updated\": \"1988-01-28T03:18:39.472Z\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Managed Services",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"services"
									]
								},
								"description": "Returns a paginated list of Managed Services on your Account. These are the services Linode Managed is monitoring and will report and attempt to resolve issues with.\n"
							},
							"response": [
								{
									"name": "A paginated list of Managed Services",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"address\": \"https://example.org\",\n   \"body\": \"it worked\",\n   \"consultation_group\": \"on-call\",\n   \"created\": \"1960-12-11T23:00:53.462Z\",\n   \"credentials\": [\n    9991,\n    9991\n   ],\n   \"id\": 9944,\n   \"label\": \"prod-1\",\n   \"notes\": \"The service name is my-cool-application\",\n   \"region\": \"esse enim in\",\n   \"service_type\": \"url\",\n   \"status\": \"ok\",\n   \"timeout\": 30,\n   \"updated\": \"1969-04-11T12:04:13.377Z\"\n  },\n  {\n   \"address\": \"https://example.org\",\n   \"body\": \"it worked\",\n   \"consultation_group\": \"on-call\",\n   \"created\": \"1982-06-08T21:27:28.989Z\",\n   \"credentials\": [\n    9991,\n    9991\n   ],\n   \"id\": 9944,\n   \"label\": \"prod-1\",\n   \"notes\": \"The service name is my-cool-application\",\n   \"region\": \"proident\",\n   \"service_type\": \"url\",\n   \"status\": \"ok\",\n   \"timeout\": 30,\n   \"updated\": \"1951-05-27T10:06:30.400Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managed/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Managed Service",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": \"qui ut do\",\n    \"body\": \"Duis\",\n    \"consultation_group\": \"anim\",\n    \"created\": \"1965-10-16T12:00:16.657Z\",\n    \"credentials\": [\n        -76136080,\n        -12814182\n    ],\n    \"id\": -12084326,\n    \"label\": \"lqlu\",\n    \"notes\": \"Lorem tempor deserunt elit\",\n    \"region\": \"ipsum magna\",\n    \"service_type\": \"tcp\",\n    \"status\": \"disabled\",\n    \"timeout\": 80,\n    \"updated\": \"1967-09-09T02:02:45.824Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/managed/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed",
										"services"
									]
								},
								"description": "Creates a Managed Service. Linode Managed will begin monitoring this service and reporting and attempting to resolve any Issues.\n"
							},
							"response": [
								{
									"name": "Service created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"https://example.org\",\n    \"body\": \"it worked\",\n    \"consultation_group\": \"on-call\",\n    \"created\": \"1978-12-10T23:21:42.769Z\",\n    \"credentials\": [\n        9991,\n        9991\n    ],\n    \"id\": 9944,\n    \"label\": \"prod-1\",\n    \"notes\": \"The service name is my-cool-application\",\n    \"region\": \"esse o\",\n    \"service_type\": \"url\",\n    \"status\": \"ok\",\n    \"timeout\": 30,\n    \"updated\": \"2007-12-18T12:17:03.399Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"https://example.org\",\n \"body\": \"it worked\",\n \"consultation_group\": \"on-call\",\n \"created\": \"1986-04-28T18:17:24.379Z\",\n \"credentials\": [\n  9991,\n  9991\n ],\n \"id\": 9944,\n \"label\": \"prod-1\",\n \"notes\": \"The service name is my-cool-application\",\n \"region\": \"ipsum enim irure\",\n \"service_type\": \"url\",\n \"status\": \"ok\",\n \"timeout\": 30,\n \"updated\": \"1966-06-06T09:35:24.085Z\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"https://example.org\",\n    \"body\": \"it worked\",\n    \"consultation_group\": \"on-call\",\n    \"created\": \"1978-12-10T23:21:42.769Z\",\n    \"credentials\": [\n        9991,\n        9991\n    ],\n    \"id\": 9944,\n    \"label\": \"prod-1\",\n    \"notes\": \"The service name is my-cool-application\",\n    \"region\": \"esse o\",\n    \"service_type\": \"url\",\n    \"status\": \"ok\",\n    \"timeout\": 30,\n    \"updated\": \"2007-12-18T12:17:03.399Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/managed/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed",
												"services"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "networking",
			"item": [
				{
					"name": "ips",
					"item": [
						{
							"name": "{address}",
							"item": [
								{
									"name": "View IP Address",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/networking/ips/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips",
												":address"
											],
											"variable": [
												{
													"key": "address",
													"value": "<ip>",
													"type": "string",
													"description": "(Required) The address to operate on."
												}
											]
										},
										"description": "Returns information about a single IP Address on your Account.\n"
									},
									"response": [
										{
											"name": "The requested IP Address.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networking/ips/:address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networking",
														"ips",
														":address"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networking/ips/:address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networking",
														"ips",
														":address"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update IP Address RDNS",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"rdns\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ips/:address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips",
												":address"
											],
											"variable": [
												{
													"key": "address",
													"value": "<ip>",
													"type": "string",
													"description": "(Required) The address to operate on."
												}
											]
										},
										"description": "Sets RDNS on an IP Address. Forward DNS must already be set up for reverse DNS to be applied. If you set the RDNS to `null` for public IPv4 addresses, it will be reset to the default _members.linode.com_ RDNS value.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"rdns\": \"test.example.org\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/networking/ips/:address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networking",
														"ips",
														":address"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "RDNS set successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"rdns\": \"test.example.org\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/networking/ips/:address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networking",
														"ips",
														":address"
													],
													"variable": [
														{
															"key": "address"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List IP Addresses",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networking/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ips"
									]
								},
								"description": "Returns a paginated list of IP Addresses on your Account, excluding private addresses.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of IP Addresses.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"address\": \"97.107.143.141\",\n   \"gateway\": \"97.107.143.1\",\n   \"linode_id\": 123,\n   \"prefix\": 24,\n   \"public\": true,\n   \"rdns\": \"test.example.org\",\n   \"region\": \"us-east\",\n   \"subnet_mask\": \"255.255.255.0\",\n   \"type\": \"ipv4\"\n  },\n  {\n   \"address\": \"97.107.143.141\",\n   \"gateway\": \"97.107.143.1\",\n   \"linode_id\": 123,\n   \"prefix\": 24,\n   \"public\": true,\n   \"rdns\": \"test.example.org\",\n   \"region\": \"us-east\",\n   \"subnet_mask\": \"255.255.255.0\",\n   \"type\": \"ipv4\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "Allocate IP Address",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"linode_id\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networking/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ips"
									]
								},
								"description": "Allocates a new IPv4 Address on your Account. The Linode must be configured to support additional addresses - please [open a support ticket](/api/v4/support-tickets/#post) requesting additional addresses before attempting allocation.\n"
							},
							"response": [
								{
									"name": "IP Address allocated successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"ipv4\",\n    \"public\": true,\n    \"linode_id\": 123\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"address\": \"97.107.143.141\",\n \"gateway\": \"97.107.143.1\",\n \"linode_id\": 123,\n \"prefix\": 24,\n \"public\": true,\n \"rdns\": \"test.example.org\",\n \"region\": \"us-east\",\n \"subnet_mask\": \"255.255.255.0\",\n \"type\": \"ipv4\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"ipv4\",\n    \"public\": true,\n    \"linode_id\": 123\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ips"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "ipv4",
					"item": [
						{
							"name": "Assign IPs to Linodes",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"<string>\",\n    \"assignments\": [\n        {\n            \"address\": \"<ip>\",\n            \"linode_id\": \"<integer>\"\n        },\n        {\n            \"address\": \"<ip>\",\n            \"linode_id\": \"<integer>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networking/ipv4/assign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ipv4",
										"assign"
									]
								},
								"description": "Assign multiple IPs to multiple Linodes in one Region. This allows swapping, shuffling, or otherwise reorganizing IPv4 Addresses to your Linodes.  When the assignment is finished, all Linodes must end up with at least one public IPv4 and no more than one private IPv4.\n"
							},
							"response": [
								{
									"name": "All assignments completed successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"region\": \"us-east\",\n    \"assignments\": [\n        {\n            \"address\": \"12.34.56.78\",\n            \"linode_id\": 123\n        },\n        {\n            \"address\": \"12.34.56.78\",\n            \"linode_id\": 123\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ipv4/assign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv4",
												"assign"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"region\": \"us-east\",\n    \"assignments\": [\n        {\n            \"address\": \"12.34.56.78\",\n            \"linode_id\": 123\n        },\n        {\n            \"address\": \"12.34.56.78\",\n            \"linode_id\": 123\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ipv4/assign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv4",
												"assign"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Configure IP Sharing",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"linode_id\": \"<integer>\",\n    \"ips\": [\n        \"<ip>\",\n        \"<ip>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networking/ipv4/share",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ipv4",
										"share"
									]
								},
								"description": "Configure shared IPs.  A shared IP may be brought up on a Linode other than the one it lists in its response.  This can be used to allow one Linode to begin serving requests should another become unresponsive.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"linode_id\": 123,\n    \"ips\": [\n        \"12.34.56.78\",\n        \"12.34.56.78\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ipv4/share",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv4",
												"share"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Sharing configured successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"linode_id\": 123,\n    \"ips\": [\n        \"12.34.56.78\",\n        \"12.34.56.78\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networking/ipv4/share",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv4",
												"share"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "ipv6",
					"item": [
						{
							"name": "List IPv6 Pools",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networking/ipv6/pools?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ipv6",
										"pools"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Displays the IPv6 pools on your Account.\n"
							},
							"response": [
								{
									"name": "The IPv6 pools on your Account.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ipv6/pools?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv6",
												"pools"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"prefix\": 124,\n   \"range\": \"2600:3c01::02:5000::\",\n   \"region\": \"us-east\"\n  },\n  {\n   \"prefix\": 124,\n   \"range\": \"2600:3c01::02:5000::\",\n   \"region\": \"us-east\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ipv6/pools?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv6",
												"pools"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "List IPv6 Ranges",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networking/ipv6/ranges?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networking",
										"ipv6",
										"ranges"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Displays the IPv6 ranges on your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ipv6/ranges?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv6",
												"ranges"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The IPv6 ranges on your Account.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networking/ipv6/ranges?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networking",
												"ipv6",
												"ranges"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"range\": \"2600:3c01::02:5000::\",\n   \"region\": \"us-east\"\n  },\n  {\n   \"range\": \"2600:3c01::02:5000::\",\n   \"region\": \"us-east\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "nodebalancers",
			"item": [
				{
					"name": "{node Balancer Id}",
					"item": [
						{
							"name": "configs",
							"item": [
								{
									"name": "{config Id}",
									"item": [
										{
											"name": "nodes",
											"item": [
												{
													"name": "{node Id}",
													"item": [
														{
															"name": "Delete Node",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the NodeBalancer to access."
																		},
																		{
																			"key": "configId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Config to access"
																		},
																		{
																			"key": "nodeId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Node to access"
																		}
																	]
																},
																"description": "Deletes a Node from this Config. This backend will no longer receive traffic for the configured port of this NodeBalancer.\n\nThis does not change or remove the Linode whose address was used in the creation of this Node.\n"
															},
															"response": [
																{
																	"name": "Error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
																},
																{
																	"name": "Node deleted successfully.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "View Node",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the NodeBalancer to access."
																		},
																		{
																			"key": "configId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Config to access"
																		},
																		{
																			"key": "nodeId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Node to access"
																		}
																	]
																},
																"description": "Returns information about a single Node, a backend for this NodeBalancer's configured port.\n"
															},
															"response": [
																{
																	"name": "Error",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
																},
																{
																	"name": "A paginated list of NodeBalancer nodes.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"address\": \"192.168.210.120:80\",\n \"config_id\": 4567,\n \"id\": 54321,\n \"label\": \"node54321\",\n \"mode\": \"accept\",\n \"nodebalancer_id\": 12345,\n \"status\": \"UP\",\n \"weight\": 50\n}"
																}
															]
														},
														{
															"name": "Update Node",
															"request": {
																"auth": {
																	"type": "oauth2"
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"address\": \"<ip>\",\n    \"label\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"weight\": \"<integer>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the NodeBalancer to access."
																		},
																		{
																			"key": "configId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Config to access"
																		},
																		{
																			"key": "nodeId",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the Node to access"
																		}
																	]
																},
																"description": "Updates information about a Node, a backend for this NodeBalancer's configured port.\n"
															},
															"response": [
																{
																	"name": "Error",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"address\": \"192.168.210.120:80\",\n    \"label\": \"node54321\",\n    \"mode\": \"accept\",\n    \"weight\": 50\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
																},
																{
																	"name": "Node updated successfully.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "<token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"address\": \"192.168.210.120:80\",\n    \"label\": \"node54321\",\n    \"mode\": \"accept\",\n    \"weight\": 50\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"nodebalancers",
																				":nodeBalancerId",
																				"configs",
																				":configId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeBalancerId"
																				},
																				{
																					"key": "configId"
																				},
																				{
																					"key": "nodeId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"address\": \"192.168.210.120:80\",\n \"config_id\": 4567,\n \"id\": 54321,\n \"label\": \"node54321\",\n \"mode\": \"accept\",\n \"nodebalancer_id\": 12345,\n \"status\": \"UP\",\n \"weight\": 50\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Nodes",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes?page=1&page_size=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1",
																	"description": "The page of a collection to return."
																},
																{
																	"key": "page_size",
																	"value": "100",
																	"description": "The number of items to return per page."
																}
															],
															"variable": [
																{
																	"key": "nodeBalancerId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the NodeBalancer to access."
																},
																{
																	"key": "configId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the NodeBalancer config to access."
																}
															]
														},
														"description": "Returns a paginated list of NodeBalancer nodes associated with this Config. These are the backends that will be sent traffic for this port.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes?page=1&page_size=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "1"
																		},
																		{
																			"key": "page_size",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "A paginated list of NodeBalancer nodes.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes?page=1&page_size=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "1"
																		},
																		{
																			"key": "page_size",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"data\": [\n  {\n   \"address\": \"192.168.210.120:80\",\n   \"label\": \"node54321\",\n   \"mode\": \"accept\",\n   \"weight\": 50\n  },\n  {\n   \"address\": \"192.168.210.120:80\",\n   \"label\": \"node54321\",\n   \"mode\": \"accept\",\n   \"weight\": 50\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
														}
													]
												},
												{
													"name": "Create Node",
													"request": {
														"auth": {
															"type": "oauth2"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"address\": \"<ip>\",\n    \"label\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"weight\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId",
																"nodes"
															],
															"variable": [
																{
																	"key": "nodeBalancerId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the NodeBalancer to access."
																},
																{
																	"key": "configId",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the NodeBalancer config to access."
																}
															]
														},
														"description": "Creates a NodeBalancer Node, a backend that can accept traffic for this NodeBalancer Config. Nodes are routed requests on the configured port based on their status.\n"
													},
													"response": [
														{
															"name": "Error",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"address\": \"192.168.210.120:80\",\n    \"label\": \"node54321\",\n    \"mode\": \"accept\",\n    \"weight\": 50\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes"
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
														},
														{
															"name": "Node created successfully.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"address\": \"192.168.210.120:80\",\n    \"label\": \"node54321\",\n    \"mode\": \"accept\",\n    \"weight\": 50\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/nodes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"nodebalancers",
																		":nodeBalancerId",
																		"configs",
																		":configId",
																		"nodes"
																	],
																	"variable": [
																		{
																			"key": "nodeBalancerId"
																		},
																		{
																			"key": "configId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"address\": \"192.168.210.120:80\",\n \"config_id\": 4567,\n \"id\": 54321,\n \"label\": \"node54321\",\n \"mode\": \"accept\",\n \"nodebalancer_id\": 12345,\n \"status\": \"UP\",\n \"weight\": 50\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Config",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs",
														":configId"
													],
													"variable": [
														{
															"key": "nodeBalancerId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the NodeBalancer to access."
														},
														{
															"key": "configId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the config to access."
														}
													]
												},
												"description": "Deletes the Config for a port of this NodeBalancer.\n\n**This cannot be undone.**\n\nOnce completed, this NodeBalancer will no longer respond to requests on the given port. This also deletes all associated NodeBalancerNodes, but the Linodes they were routing traffic to will be unchanged and will not be removed.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "NodeBalancer Config deleted successfully.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "View Config",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs",
														":configId"
													],
													"variable": [
														{
															"key": "nodeBalancerId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the NodeBalancer to access."
														},
														{
															"key": "configId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the config to access."
														}
													]
												},
												"description": "Returns configuration information for a single port of this NodeBalancer.\n"
											},
											"response": [
												{
													"name": "The requested NodeBalancer config.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"algorithm\": \"roundrobin\",\n \"check\": \"http_body\",\n \"check_attempts\": 3,\n \"check_body\": \"it works\",\n \"check_interval\": 90,\n \"check_passive\": true,\n \"check_path\": \"/test\",\n \"check_timeout\": 10,\n \"cipher_suite\": \"recommended\",\n \"id\": 4567,\n \"nodebalancer_id\": 12345,\n \"nodes_status\": {\n  \"down\": 0,\n  \"up\": 4\n },\n \"port\": 80,\n \"protocol\": \"http\",\n \"ssl_cert\": null,\n \"ssl_commonname\": \"ut laboris ci\",\n \"ssl_fingerprint\": \"qui nisi aliquip amet\",\n \"ssl_key\": null,\n \"stickiness\": \"http_cookie\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Update Config",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"<string>\",\n    \"check\": \"<string>\",\n    \"check_attempts\": \"<integer>\",\n    \"check_body\": \"<string>\",\n    \"check_interval\": \"<integer>\",\n    \"check_passive\": \"<boolean>\",\n    \"check_path\": \"<string>\",\n    \"check_timeout\": \"<integer>\",\n    \"cipher_suite\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"protocol\": \"<string>\",\n    \"ssl_cert\": \"<ssl-cert>\",\n    \"ssl_key\": \"<ssl-key>\",\n    \"stickiness\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs",
														":configId"
													],
													"variable": [
														{
															"key": "nodeBalancerId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the NodeBalancer to access."
														},
														{
															"key": "configId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the config to access."
														}
													]
												},
												"description": "Updates the configuration for a single port on a NodeBalancer.\n"
											},
											"response": [
												{
													"name": "Config updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"algorithm\": \"roundrobin\",\n    \"check\": \"http_body\",\n    \"check_attempts\": 3,\n    \"check_body\": \"it works\",\n    \"check_interval\": 90,\n    \"check_passive\": true,\n    \"check_path\": \"/test\",\n    \"check_timeout\": 10,\n    \"cipher_suite\": \"recommended\",\n    \"port\": 80,\n    \"protocol\": \"http\",\n    \"ssl_cert\": null,\n    \"ssl_key\": null,\n    \"stickiness\": \"http_cookie\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"algorithm\": \"roundrobin\",\n \"check\": \"http_body\",\n \"check_attempts\": 3,\n \"check_body\": \"it works\",\n \"check_interval\": 90,\n \"check_passive\": true,\n \"check_path\": \"/test\",\n \"check_timeout\": 10,\n \"cipher_suite\": \"recommended\",\n \"id\": 4567,\n \"nodebalancer_id\": 12345,\n \"nodes_status\": {\n  \"down\": 0,\n  \"up\": 4\n },\n \"port\": 80,\n \"protocol\": \"http\",\n \"ssl_cert\": null,\n \"ssl_commonname\": \"ut laboris ci\",\n \"ssl_fingerprint\": \"qui nisi aliquip amet\",\n \"ssl_key\": null,\n \"stickiness\": \"http_cookie\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"algorithm\": \"roundrobin\",\n    \"check\": \"http_body\",\n    \"check_attempts\": 3,\n    \"check_body\": \"it works\",\n    \"check_interval\": 90,\n    \"check_passive\": true,\n    \"check_path\": \"/test\",\n    \"check_timeout\": 10,\n    \"cipher_suite\": \"recommended\",\n    \"port\": 80,\n    \"protocol\": \"http\",\n    \"ssl_cert\": null,\n    \"ssl_key\": null,\n    \"stickiness\": \"http_cookie\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Rebuild Config",
											"request": {
												"auth": {
													"type": "oauth2"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"configs\": [\n        {\n            \"algorithm\": \"<string>\",\n            \"check\": \"<string>\",\n            \"check_attempts\": \"<integer>\",\n            \"check_body\": \"<string>\",\n            \"check_interval\": \"<integer>\",\n            \"check_passive\": \"<boolean>\",\n            \"check_path\": \"<string>\",\n            \"check_timeout\": \"<integer>\",\n            \"cipher_suite\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"protocol\": \"<string>\",\n            \"ssl_cert\": \"<ssl-cert>\",\n            \"ssl_key\": \"<ssl-key>\",\n            \"stickiness\": \"<string>\",\n            \"nodes\": [\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                },\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"<string>\",\n            \"check\": \"<string>\",\n            \"check_attempts\": \"<integer>\",\n            \"check_body\": \"<string>\",\n            \"check_interval\": \"<integer>\",\n            \"check_passive\": \"<boolean>\",\n            \"check_path\": \"<string>\",\n            \"check_timeout\": \"<integer>\",\n            \"cipher_suite\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"protocol\": \"<string>\",\n            \"ssl_cert\": \"<ssl-cert>\",\n            \"ssl_key\": \"<ssl-key>\",\n            \"stickiness\": \"<string>\",\n            \"nodes\": [\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                },\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/rebuild",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs",
														":configId",
														"rebuild"
													],
													"variable": [
														{
															"key": "nodeBalancerId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the NodeBalancer to access."
														},
														{
															"key": "configId",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the Config to access."
														}
													]
												},
												"description": "Rebuilds a NodeBalancer Config and its Nodes that you have permission to modify.\n"
											},
											"response": [
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"configs\": [\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/rebuild",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId",
																"rebuild"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
												},
												{
													"name": "NodeBalancer created successfully.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"configs\": [\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs/:configId/rebuild",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nodebalancers",
																":nodeBalancerId",
																"configs",
																":configId",
																"rebuild"
															],
															"variable": [
																{
																	"key": "nodeBalancerId"
																},
																{
																	"key": "configId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"client_conn_throttle\": 0,\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n \"id\": 12345,\n \"ipv4\": \"12.34.56.78\",\n \"ipv6\": null,\n \"label\": \"balancer12345\",\n \"region\": \"us-east\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"transfer\": {\n  \"in\": 28.91200828552246,\n  \"out\": 3.5487728118896484,\n  \"total\": 32.46078109741211\n },\n \"updated\": \"2018-03-01T00:01:01.000Z\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Configs",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId",
												"configs"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of a collection to return."
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "nodeBalancerId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the NodeBalancer to access."
												}
											]
										},
										"description": "Returns a paginated list of NodeBalancer Configs associated with this NodeBalancer. NodeBalancer Configs represent individual ports that this NodeBalancer will accept traffic on, one Config per port.\n\nFor example, if you wanted to accept standard HTTP traffic, you would need a Config listening on port 80.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "nodeBalancerId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "A paginted list of NodeBalancer Configs",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "nodeBalancerId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"algorithm\": \"roundrobin\",\n   \"check\": \"http_body\",\n   \"check_attempts\": 3,\n   \"check_body\": \"it works\",\n   \"check_interval\": 90,\n   \"check_passive\": true,\n   \"check_path\": \"/test\",\n   \"check_timeout\": 10,\n   \"cipher_suite\": \"recommended\",\n   \"port\": 80,\n   \"protocol\": \"http\",\n   \"ssl_cert\": null,\n   \"ssl_key\": null,\n   \"stickiness\": \"http_cookie\"\n  },\n  {\n   \"algorithm\": \"roundrobin\",\n   \"check\": \"http_body\",\n   \"check_attempts\": 3,\n   \"check_body\": \"it works\",\n   \"check_interval\": 90,\n   \"check_passive\": true,\n   \"check_path\": \"/test\",\n   \"check_timeout\": 10,\n   \"cipher_suite\": \"recommended\",\n   \"port\": 80,\n   \"protocol\": \"http\",\n   \"ssl_cert\": null,\n   \"ssl_key\": null,\n   \"stickiness\": \"http_cookie\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
										}
									]
								},
								{
									"name": "Create Config",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"algorithm\": \"<string>\",\n    \"check\": \"<string>\",\n    \"check_attempts\": \"<integer>\",\n    \"check_body\": \"<string>\",\n    \"check_interval\": \"<integer>\",\n    \"check_passive\": \"<boolean>\",\n    \"check_path\": \"<string>\",\n    \"check_timeout\": \"<integer>\",\n    \"cipher_suite\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"protocol\": \"<string>\",\n    \"ssl_cert\": \"<ssl-cert>\",\n    \"ssl_key\": \"<ssl-key>\",\n    \"stickiness\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId",
												"configs"
											],
											"variable": [
												{
													"key": "nodeBalancerId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the NodeBalancer to access."
												}
											]
										},
										"description": "Creates a NodeBalancer Config, which allows the NodeBalancer to accept traffic on a new port. You will need to add NodeBalancer Nodes to the new Config before it can actually serve requests.\n"
									},
									"response": [
										{
											"name": "Config created successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"roundrobin\",\n    \"check\": \"http_body\",\n    \"check_attempts\": 3,\n    \"check_body\": \"it works\",\n    \"check_interval\": 90,\n    \"check_passive\": true,\n    \"check_path\": \"/test\",\n    \"check_timeout\": 10,\n    \"cipher_suite\": \"recommended\",\n    \"port\": 80,\n    \"protocol\": \"http\",\n    \"ssl_cert\": null,\n    \"ssl_key\": null,\n    \"stickiness\": \"http_cookie\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs"
													],
													"variable": [
														{
															"key": "nodeBalancerId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"algorithm\": \"roundrobin\",\n \"check\": \"http_body\",\n \"check_attempts\": 3,\n \"check_body\": \"it works\",\n \"check_interval\": 90,\n \"check_passive\": true,\n \"check_path\": \"/test\",\n \"check_timeout\": 10,\n \"cipher_suite\": \"recommended\",\n \"id\": 4567,\n \"nodebalancer_id\": 12345,\n \"nodes_status\": {\n  \"down\": 0,\n  \"up\": 4\n },\n \"port\": 80,\n \"protocol\": \"http\",\n \"ssl_cert\": null,\n \"ssl_commonname\": \"ut laboris ci\",\n \"ssl_fingerprint\": \"qui nisi aliquip amet\",\n \"ssl_key\": null,\n \"stickiness\": \"http_cookie\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"roundrobin\",\n    \"check\": \"http_body\",\n    \"check_attempts\": 3,\n    \"check_body\": \"it works\",\n    \"check_interval\": 90,\n    \"check_passive\": true,\n    \"check_path\": \"/test\",\n    \"check_timeout\": 10,\n    \"cipher_suite\": \"recommended\",\n    \"port\": 80,\n    \"protocol\": \"http\",\n    \"ssl_cert\": null,\n    \"ssl_key\": null,\n    \"stickiness\": \"http_cookie\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nodebalancers",
														":nodeBalancerId",
														"configs"
													],
													"variable": [
														{
															"key": "nodeBalancerId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete NodeBalancer",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers",
										":nodeBalancerId"
									],
									"variable": [
										{
											"key": "nodeBalancerId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the NodeBalancer to access."
										}
									]
								},
								"description": "Deletes a NodeBalancer.\n\n**This is a destructive action and cannot be undone.**\n\nDeleting a NodeBalancer will also delete all associated Configs and Nodes, although the backend servers represented by the Nodes will not be changed or removed. Deleting a NodeBalancer will cause you to lose access to the IP Addresses assigned to this NodeBalancer.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "NodeBalancer deleted successfully.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "View NodeBalancer",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers",
										":nodeBalancerId"
									],
									"variable": [
										{
											"key": "nodeBalancerId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the NodeBalancer to access."
										}
									]
								},
								"description": "Returns a single NodeBalancer you can access.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The requested NodeBalancer object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"client_conn_throttle\": 0,\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n \"id\": 12345,\n \"ipv4\": \"12.34.56.78\",\n \"ipv6\": null,\n \"label\": \"balancer12345\",\n \"region\": \"us-east\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"transfer\": {\n  \"in\": 28.91200828552246,\n  \"out\": 3.5487728118896484,\n  \"total\": 32.46078109741211\n },\n \"updated\": \"2018-03-01T00:01:01.000Z\"\n}"
								}
							]
						},
						{
							"name": "Update NodeBalancer",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_conn_throttle\": \"<integer>\",\n    \"label\": \"<string>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"transfer\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers",
										":nodeBalancerId"
									],
									"variable": [
										{
											"key": "nodeBalancerId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the NodeBalancer to access."
										}
									]
								},
								"description": "Updates information about a NodeBalancer you can access.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"client_conn_throttle\": 0,\n    \"label\": \"balancer12345\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"transfer\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "NodeBalancer updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"client_conn_throttle\": 0,\n    \"label\": \"balancer12345\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"transfer\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"client_conn_throttle\": 0,\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n \"id\": 12345,\n \"ipv4\": \"12.34.56.78\",\n \"ipv6\": null,\n \"label\": \"balancer12345\",\n \"region\": \"us-east\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"transfer\": {\n  \"in\": 28.91200828552246,\n  \"out\": 3.5487728118896484,\n  \"total\": 32.46078109741211\n },\n \"updated\": \"2018-03-01T00:01:01.000Z\"\n}"
								}
							]
						},
						{
							"name": "View NodeBalancer Statistics",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers",
										":nodeBalancerId",
										"stats"
									],
									"variable": [
										{
											"key": "nodeBalancerId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the NodeBalancer to access."
										}
									]
								},
								"description": "Returns detailed statistics about the requested NodeBalancer.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId",
												"stats"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The requested stats.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/nodebalancers/:nodeBalancerId/stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nodebalancers",
												":nodeBalancerId",
												"stats"
											],
											"variable": [
												{
													"key": "nodeBalancerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": {\n  \"connections\": [\n   63757104.15319231,\n   -70468204.18124224\n  ],\n  \"traffic\": {\n   \"in\": [\n    -2885081.349632174,\n    6428089.232939675\n   ],\n   \"out\": [\n    25159520.445086867,\n    -92239152.20032573\n   ]\n  }\n },\n \"title\": \"linode.com - balancer12345 (12345) - day (5 min avg)\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List NodeBalancers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodebalancers?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodebalancers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "Returns a paginated list of NodeBalancers you have access to.\n"
					},
					"response": [
						{
							"name": "A paginated list of NodeBalancers.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodebalancers?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"client_conn_throttle\": 0,\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n   \"id\": 12345,\n   \"ipv4\": \"12.34.56.78\",\n   \"ipv6\": null,\n   \"label\": \"balancer12345\",\n   \"region\": \"us-east\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n   },\n   \"updated\": \"2018-03-01T00:01:01.000Z\"\n  },\n  {\n   \"client_conn_throttle\": 0,\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n   \"id\": 12345,\n   \"ipv4\": \"12.34.56.78\",\n   \"ipv6\": null,\n   \"label\": \"balancer12345\",\n   \"region\": \"us-east\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n   },\n   \"updated\": \"2018-03-01T00:01:01.000Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodebalancers?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create NodeBalancer",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"client_conn_throttle\": \"<integer>\",\n    \"configs\": [\n        {\n            \"algorithm\": \"<string>\",\n            \"check\": \"<string>\",\n            \"check_attempts\": \"<integer>\",\n            \"check_body\": \"<string>\",\n            \"check_interval\": \"<integer>\",\n            \"check_passive\": \"<boolean>\",\n            \"check_path\": \"<string>\",\n            \"check_timeout\": \"<integer>\",\n            \"cipher_suite\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"protocol\": \"<string>\",\n            \"ssl_cert\": \"<ssl-cert>\",\n            \"ssl_key\": \"<ssl-key>\",\n            \"stickiness\": \"<string>\",\n            \"nodes\": [\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                },\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"<string>\",\n            \"check\": \"<string>\",\n            \"check_attempts\": \"<integer>\",\n            \"check_body\": \"<string>\",\n            \"check_interval\": \"<integer>\",\n            \"check_passive\": \"<boolean>\",\n            \"check_path\": \"<string>\",\n            \"check_timeout\": \"<integer>\",\n            \"cipher_suite\": \"<string>\",\n            \"port\": \"<integer>\",\n            \"protocol\": \"<string>\",\n            \"ssl_cert\": \"<ssl-cert>\",\n            \"ssl_key\": \"<ssl-key>\",\n            \"stickiness\": \"<string>\",\n            \"nodes\": [\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                },\n                {\n                    \"address\": \"<ip>\",\n                    \"label\": \"<string>\",\n                    \"mode\": \"<string>\",\n                    \"weight\": \"<integer>\"\n                }\n            ]\n        }\n    ],\n    \"label\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/nodebalancers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodebalancers"
							]
						},
						"description": "Creates a NodeBalancer in the requested Region. This NodeBalancer will not start serving requests until it is configured.\n"
					},
					"response": [
						{
							"name": "NodeBalancer created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"us-east\",\n    \"client_conn_throttle\": 0,\n    \"configs\": [\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        }\n    ],\n    \"label\": \"balancer12345\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodebalancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"client_conn_throttle\": 0,\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n \"id\": 12345,\n \"ipv4\": \"12.34.56.78\",\n \"ipv6\": null,\n \"label\": \"balancer12345\",\n \"region\": \"us-east\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"transfer\": {\n  \"in\": 28.91200828552246,\n  \"out\": 3.5487728118896484,\n  \"total\": 32.46078109741211\n },\n \"updated\": \"2018-03-01T00:01:01.000Z\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"us-east\",\n    \"client_conn_throttle\": 0,\n    \"configs\": [\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        },\n        {\n            \"algorithm\": \"roundrobin\",\n            \"check\": \"http_body\",\n            \"check_attempts\": 3,\n            \"check_body\": \"it works\",\n            \"check_interval\": 90,\n            \"check_passive\": true,\n            \"check_path\": \"/test\",\n            \"check_timeout\": 10,\n            \"cipher_suite\": \"recommended\",\n            \"port\": 80,\n            \"protocol\": \"http\",\n            \"ssl_cert\": null,\n            \"ssl_key\": null,\n            \"stickiness\": \"http_cookie\",\n            \"nodes\": [\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                },\n                {\n                    \"address\": \"192.168.210.120:80\",\n                    \"label\": \"node54321\",\n                    \"mode\": \"accept\",\n                    \"weight\": 50\n                }\n            ]\n        }\n    ],\n    \"label\": \"balancer12345\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/nodebalancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodebalancers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "object-storage",
			"item": [
				{
					"name": "buckets",
					"item": [
						{
							"name": "{cluster Id}/{bucket}",
							"item": [
								{
									"name": "Remove Object Storage Bucket",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/buckets/:clusterId/:bucket?force=false",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"buckets",
												":clusterId",
												":bucket"
											],
											"query": [
												{
													"key": "force",
													"value": "false",
													"description": "If false, this operation will fail if the bucket is not empty. If true, this operation will attempt to remove the bucket and its contents; very large buckets may still return an error and require object deletion manually or through object lifecycle management. See [the S3 API docs](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#delete-bucket) for details.\n"
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the cluster this bucket exists in."
												},
												{
													"key": "bucket",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The bucket name."
												}
											]
										},
										"description": "Removes a single bucket. While buckets containing objects _may_ be deleted by including the `force` option in the request, such operations will fail if the bucket contains too many objects. The recommended way to empty large buckets is to use the [S3 API to configure lifecycle policies](https://docs.ceph.com/docs/master/radosgw/bucketpolicy/#) that remove all objects, then delete the bucket.\n\nThis endpoint is available for convenience. It is recommended that instead you use the more [fully- featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#delete-bucket) directly.\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with `/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking updates in the future. This notice will be removed when this endpoint is out of beta.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "undefined?force=false",
													"host": [
														"undefined"
													],
													"query": [
														{
															"key": "force",
															"value": "false"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Bucket deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "undefined?force=false",
													"host": [
														"undefined"
													],
													"query": [
														{
															"key": "force",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Object Storage Bucket",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/buckets/:clusterId/:bucket",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"buckets",
												":clusterId",
												":bucket"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the cluster this bucket exists in."
												},
												{
													"key": "bucket",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The bucket name."
												}
											]
										},
										"description": "Returns a single Object Storage Bucket.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#get-bucket) directly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "The requested bucket.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"cluster\": \"us-east-1\",\n \"created\": \"2019-01-01T01:23:45.000Z\",\n \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n \"label\": \"example-bucket\",\n \"objects\": 4,\n \"region\": \"us-east\",\n \"size\": 123\n}"
										}
									]
								},
								{
									"name": "Modify Object Storage Bucket Access",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"acl\": \"<string>\",\n    \"cors_enabled\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/buckets/:clusterId/:bucket/access",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"buckets",
												":clusterId",
												":bucket",
												"access"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the cluster this bucket exists in."
												},
												{
													"key": "bucket",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The bucket name."
												}
											]
										},
										"description": "Allows changing basic Cross-origin Resource Sharing (CORS) and Access Control Level (ACL) settings.\nOnly allows enabling/disabling CORS for all origins, and/or setting canned ACLs.\nFor more fine-grained control of both systems, please use the S3 API directly.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#put-bucket-acl) directly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "Access controls updated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acl\": \"private\",\n    \"cors_enabled\": true\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acl\": \"private\",\n    \"cors_enabled\": true\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "List Object Storage Bucket Contents",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/buckets/:clusterId/:bucket/object-list?marker=<string>&delimiter=<string>&prefix=<string>&page_size=100",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"buckets",
												":clusterId",
												":bucket",
												"object-list"
											],
											"query": [
												{
													"key": "marker",
													"value": "<string>",
													"description": "The \"marker\" for this request, which can be used to paginate through large buckets. Its value should be the value of the `next_marker` property returned with the last page. Listing bucket contents *does not* support arbitrary page access. See the `next_marker` property in the responses section for more details.\n"
												},
												{
													"key": "delimiter",
													"value": "<string>",
													"description": "The delimiter for object names; if given, object names will be returned up to the first occurrence of this character. This is most commonly used with the `/` character to allow bucket transversal in a manner similar to a filesystem, however any delimiter may be used. Use in conjunction with `prefix` to see object names past the first occurrence of the delimiter.\n"
												},
												{
													"key": "prefix",
													"value": "<string>",
													"description": "Filters objects returned to only those whose name start with the given prefix. Commonly used in conjunction with `delimiter` to allow transversal of bucket contents in a manner similar to a filesystem.\n"
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the cluster this bucket exists in."
												},
												{
													"key": "bucket",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The bucket name."
												}
											]
										},
										"description": "Returns the contents of a bucket. The contents are paginated using a `marker`,\nwhich is the name of the last object on the previous page.  Objects may\nbe filtered by `prefix` and `delimiter` as well; see Query Parameters for more\ninformation.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/luminous/radosgw/s3/bucketops/#get-bucket) directly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "undefined?marker=<string>&delimiter=<string>&prefix=<string>&page_size=100",
													"host": [
														"undefined"
													],
													"query": [
														{
															"key": "marker",
															"value": "<string>"
														},
														{
															"key": "delimiter",
															"value": "<string>"
														},
														{
															"key": "prefix",
															"value": "<string>"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "One page of the requested bucket's contents.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "undefined?marker=<string>&delimiter=<string>&prefix=<string>&page_size=100",
													"host": [
														"undefined"
													],
													"query": [
														{
															"key": "marker",
															"value": "<string>"
														},
														{
															"key": "delimiter",
															"value": "<string>"
														},
														{
															"key": "prefix",
															"value": "<string>"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"etag\": \"9f254c71e28e033bf9e0e5262e3e72ab\",\n   \"is_truncated\": true,\n   \"last_modified\": \"2019-01-01T01:23:45.000Z\",\n   \"name\": \"example\",\n   \"next_marker\": \"bd021c21-e734-4823-97a4-58b41c2cd4c8.892602.184\",\n   \"owner\": \"bfc70ab2-e3d4-42a4-ad55-83921822270c\",\n   \"size\": 123\n  },\n  {\n   \"etag\": \"9f254c71e28e033bf9e0e5262e3e72ab\",\n   \"is_truncated\": true,\n   \"last_modified\": \"2019-01-01T01:23:45.000Z\",\n   \"name\": \"example\",\n   \"next_marker\": \"bd021c21-e734-4823-97a4-58b41c2cd4c8.892602.184\",\n   \"owner\": \"bfc70ab2-e3d4-42a4-ad55-83921822270c\",\n   \"size\": 123\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Create Object Storage Object URL",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"method\": \"GET\",\n    \"content_type\": \"<string>\",\n    \"expires_in\": 3600\n}"
										},
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/buckets/:clusterId/:bucket/object-url",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"buckets",
												":clusterId",
												":bucket",
												"object-url"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the cluster this bucket exists in."
												},
												{
													"key": "bucket",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The bucket name."
												}
											]
										},
										"description": "Creates a pre-signed URL to access a single Object in a bucket. This\ncan be used to share objects, and also to create/delete objects by using\nthe appropriate HTTP method in your request body's `method` parameter.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/)\ndirectly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "The URL with which to access your object.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"example\",\n    \"method\": \"GET\",\n    \"content_type\": \"<string>\",\n    \"expires_in\": 3600\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"url\": \"https://us-east-1.linodeobjects.com/example-bucket/example?Signature=qr98TEucCntPgEG%2BsZQGDsJg93c%3D&Expires=1567609905&AWSAccessKeyId=G4YAF81XWY61DQM94SE0\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"example\",\n    \"method\": \"GET\",\n    \"content_type\": \"<string>\",\n    \"expires_in\": 3600\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Object Storage Buckets",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/buckets",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"buckets"
									]
								},
								"description": "Returns a paginated list of all Object Storage Buckets that you own.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/serviceops/) directly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "A paginated list of buckets you own.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"cluster\": \"us-east-1\",\n   \"created\": \"2019-01-01T01:23:45.000Z\",\n   \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n   \"label\": \"example-bucket\",\n   \"objects\": 4,\n   \"region\": \"us-east\",\n   \"size\": 123\n  },\n  {\n   \"cluster\": \"us-east-1\",\n   \"created\": \"2019-01-01T01:23:45.000Z\",\n   \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n   \"label\": \"example-bucket\",\n   \"objects\": 4,\n   \"region\": \"us-east\",\n   \"size\": 123\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Object Storage Bucket",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"<string>\",\n    \"cluster\": \"<string>\",\n    \"acl\": \"private\",\n    \"cors_enabled\": false\n}"
								},
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/buckets",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"buckets"
									]
								},
								"description": "Creates an Object Storage Bucket in the cluster specified. If the\nbucket already exists and is owned by you, this endpoint will return a\n`200` response with that bucket as if it had just been created.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#put-bucket) directly.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "The bucket created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"example-bucket\",\n    \"cluster\": \"us-east-1\",\n    \"acl\": \"private\",\n    \"cors_enabled\": true\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cluster\": \"us-east-1\",\n \"created\": \"2019-01-01T01:23:45.000Z\",\n \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n \"label\": \"example-bucket\",\n \"objects\": 4,\n \"region\": \"us-east\",\n \"size\": 123\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"example-bucket\",\n    \"cluster\": \"us-east-1\",\n    \"acl\": \"private\",\n    \"cors_enabled\": true\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "clusters",
					"item": [
						{
							"name": "List Clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/clusters",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"clusters"
									]
								},
								"description": "Returns a paginated list of Object Storage Clusters that are available for\nuse.  Users can connect to the clusters with third party clients to create buckets\nand upload objects.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of available clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"domain\": \"us-east-1.linodeobjects.com\",\n   \"id\": \"us-east-1\",\n   \"region\": \"us-east\",\n   \"static_site_domain\": \"website-us-east-1.linodeobjects.com\",\n   \"status\": \"available\"\n  },\n  {\n   \"domain\": \"us-east-1.linodeobjects.com\",\n   \"id\": \"us-east-1\",\n   \"region\": \"us-east\",\n   \"static_site_domain\": \"website-us-east-1.linodeobjects.com\",\n   \"status\": \"available\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "View Cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/clusters/:clusterId",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"clusters",
										":clusterId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the Cluster."
										}
									]
								},
								"description": "Returns a single Object Storage Cluster.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The requested Cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"domain\": \"us-east-1.linodeobjects.com\",\n \"id\": \"us-east-1\",\n \"region\": \"us-east\",\n \"static_site_domain\": \"website-us-east-1.linodeobjects.com\",\n \"status\": \"available\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "keys",
					"item": [
						{
							"name": "{key Id}",
							"item": [
								{
									"name": "Revoke Object Storage Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/keys/:keyId",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"keys",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The key to look up."
												}
											]
										},
										"description": "Revokes an Object Storage Key.  This keypair will no longer be usable by third-party clients.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Deletion successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Object Storage Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/keys/:keyId",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"keys",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The key to look up."
												}
											]
										},
										"description": "Returns a single Object Storage Key provisioned for your account.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "The keypair",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n \"id\": 123,\n \"label\": \"my-key\",\n \"secret_key\": \"[REDACTED]\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update an Object Storage Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\"\n}"
										},
										"url": {
											"raw": "https://api.linode.com/v4beta/object-storage/keys/:keyId",
											"protocol": "https",
											"host": [
												"api",
												"linode",
												"com"
											],
											"path": [
												"v4beta",
												"object-storage",
												"keys",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The key to look up."
												}
											]
										},
										"description": "Updates an Object Storage Key on your account.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future. This notice will be removed when this endpoint is out of\nbeta.\n"
									},
									"response": [
										{
											"name": "Update Successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"my-key\"\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n \"id\": 123,\n \"label\": \"my-key\",\n \"secret_key\": \"[REDACTED]\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"my-key\"\n}"
												},
												"url": {
													"raw": ""
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Object Storage Keys",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/keys",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"keys"
									]
								},
								"description": "Returns a paginated list of Object Storage Keys for authenticating to\nthe Object Storage S3 API.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of Object Storage Keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n   \"id\": 123,\n   \"label\": \"my-key\",\n   \"secret_key\": \"[REDACTED]\"\n  },\n  {\n   \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n   \"id\": 123,\n   \"label\": \"my-key\",\n   \"secret_key\": \"[REDACTED]\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						},
						{
							"name": "Create an Object Storage Key",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"<string>\"\n}"
								},
								"url": {
									"raw": "https://api.linode.com/v4beta/object-storage/keys",
									"protocol": "https",
									"host": [
										"api",
										"linode",
										"com"
									],
									"path": [
										"v4beta",
										"object-storage",
										"keys"
									]
								},
								"description": "Provisions a new Object Storage Key on your account.\n\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receiving breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-key\"\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "The new keypair.  **This is the only time** the secret key is returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-key\"\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "profile",
			"item": [
				{
					"name": "apps",
					"item": [
						{
							"name": "{app Id}",
							"item": [
								{
									"name": "Revoke App Access",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/apps/:appId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"apps",
												":appId"
											],
											"variable": [
												{
													"key": "appId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The authorized app ID to manage."
												}
											]
										},
										"description": "Expires this app token. This token may no longer be used to access your Account.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/apps/:appId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"apps",
														":appId"
													],
													"variable": [
														{
															"key": "appId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "App's authorization has been revoked.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/apps/:appId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"apps",
														":appId"
													],
													"variable": [
														{
															"key": "appId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Authorized App",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/apps/:appId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"apps",
												":appId"
											],
											"variable": [
												{
													"key": "appId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The authorized app ID to manage."
												}
											]
										},
										"description": "Returns information about a single app you've authorized to access your Account.\n"
									},
									"response": [
										{
											"name": "The app requested.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/apps/:appId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"apps",
														":appId"
													],
													"variable": [
														{
															"key": "appId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1968-10-26T19:11:29.657Z\",\n \"expiry\": \"1978-01-30T10:40:49.235Z\",\n \"id\": 123,\n \"label\": \"example-app\",\n \"scopes\": \"linodes:read_only\",\n \"thumbnail_url\": \"ex sed cupidatat ea\",\n \"website\": \"example.org\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/apps/:appId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"apps",
														":appId"
													],
													"variable": [
														{
															"key": "appId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Authorized Apps",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profile/apps?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"apps"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "This is a collection of OAuth apps that you've given access to your Account, and includes the level of access granted.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/apps?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"apps"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "A paginated list of apps you've authorized.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/apps?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"apps"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"1973-08-09T05:58:44.710Z\",\n   \"expiry\": \"1961-09-09T19:38:00.214Z\",\n   \"id\": 123,\n   \"label\": \"example-app\",\n   \"scopes\": \"linodes:read_only\",\n   \"thumbnail_url\": \"esse cillum sunt deserunt\",\n   \"website\": \"example.org\"\n  },\n  {\n   \"created\": \"2005-09-02T05:01:06.198Z\",\n   \"expiry\": \"1982-05-03T19:42:36.273Z\",\n   \"id\": 123,\n   \"label\": \"example-app\",\n   \"scopes\": \"linodes:read_only\",\n   \"thumbnail_url\": \"sint\",\n   \"website\": \"example.org\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								}
							]
						}
					]
				},
				{
					"name": "devices",
					"item": [
						{
							"name": "{device Id}",
							"item": [
								{
									"name": "Revoke Trusted Device",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the TrustedDevice"
												}
											]
										},
										"description": "Revoke an active TrustedDevice for your User.  Once a TrustedDevice is revoked, this device will have to log in again before accessing your Linode account.\n"
									},
									"response": [
										{
											"name": "Session revoked successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View Trusted Device",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the TrustedDevice"
												}
											]
										},
										"description": "Returns a single active TrustedDevice for your User.\n"
									},
									"response": [
										{
											"name": "The requested TrustedDevice object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1956-08-27T23:42:54.628Z\",\n \"expiry\": \"2009-06-26T10:26:50.188Z\",\n \"id\": 123,\n \"last_authenticated\": \"1953-08-08T16:57:12.014Z\",\n \"last_remote_addr\": \"12.34.56.78\",\n \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\\n\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Trusted Devices",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profile/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"devices"
									]
								},
								"description": "Returns a paginated list of active TrustedDevices for your User. Browsers with an active Remember Me Session are logged into your account until the session expires or is revoked.\n"
							},
							"response": [
								{
									"name": "Returns a paginated list of TrustedDevice objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"1994-11-28T11:45:37.557Z\",\n   \"expiry\": \"2005-12-07T13:31:32.450Z\",\n   \"id\": 123,\n   \"last_authenticated\": \"1972-08-23T22:24:35.504Z\",\n   \"last_remote_addr\": \"12.34.56.78\",\n   \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\\n\"\n  },\n  {\n   \"created\": \"2003-09-04T02:19:06.105Z\",\n   \"expiry\": \"2003-01-31T03:27:03.523Z\",\n   \"id\": 123,\n   \"last_authenticated\": \"2012-10-27T14:16:11.809Z\",\n   \"last_remote_addr\": \"12.34.56.78\",\n   \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\\n\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"devices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "preferences",
					"item": [
						{
							"name": "View User Preferences",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profile/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"preferences"
									]
								},
								"description": "View a list of user preferences tied to the OAuth client that generated\nthe token making the request. The user preferences endpoints allow\nconsumers of the API to store arbitrary JSON data, such as a user's font\nsize preference or preferred display name. User preferences are available\nfor each OAuth client registered to your account, and as such an account can\nhave multiple user preferences.\n"
							},
							"response": [
								{
									"name": "Returns an object of user preferences.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"preferences"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key1\": \"value1\",\n \"key2\": \"value2\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"preferences"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update User Preferences",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<object>\""
								},
								"url": {
									"raw": "{{baseUrl}}/profile/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"preferences"
									]
								},
								"description": "Updates a user's preferences. These preferences are tied to the OAuth client that generated the token making the request. The user preferences endpoints allow consumers of the API to store arbitrary JSON data, such as a user's font size preference or preferred display name. An account may have multiple preferences. Preferences, and the pertaining request body, may contain any arbitrary JSON data that the user would like to store.\n"
							},
							"response": [
								{
									"name": "Returns an object of user preferences.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<object>\""
										},
										"url": {
											"raw": "{{baseUrl}}/profile/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"preferences"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key1\": \"value1\",\n \"key2\": \"value2\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<object>\""
										},
										"url": {
											"raw": "{{baseUrl}}/profile/preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"preferences"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "sshkeys",
					"item": [
						{
							"name": "{ssh Key Id}",
							"item": [
								{
									"name": "Delete SSH Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys",
												":sshKeyId"
											],
											"variable": [
												{
													"key": "sshKeyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the SSHKey"
												}
											]
										},
										"description": "Deletes an SSH Key you have access to.\n\n**Note:** deleting an SSH Key will *not* remove it from any Linode or Disk that was deployed with `authorized_keys`. In those cases, the keys must be manually deleted on the Linode or Disk. This endpoint will only delete the key's association from your Profile.\n"
									},
									"response": [
										{
											"name": "SSH Key deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "View SSH Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys",
												":sshKeyId"
											],
											"variable": [
												{
													"key": "sshKeyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the SSHKey"
												}
											]
										},
										"description": "Returns a single SSH Key object identified by `id` that you have access to view.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "An SSH Key object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1964-02-24T07:11:14.025Z\",\n \"id\": 42,\n \"label\": \"My SSH Key\",\n \"ssh_key\": \"ullamco aute sunt proident\"\n}"
										}
									]
								},
								{
									"name": "Update SSH Key",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys",
												":sshKeyId"
											],
											"variable": [
												{
													"key": "sshKeyId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the SSHKey"
												}
											]
										},
										"description": "Updates an SSH Key that you have permission to `read_write`.\n"
									},
									"response": [
										{
											"name": "SSH Key updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"My SSH Key\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"2015-04-03T14:23:42.678Z\",\n \"id\": 42,\n \"label\": \"My SSH Key\",\n \"ssh_key\": \"laborum sit consequat incididunt id\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"My SSH Key\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/profile/sshkeys/:sshKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"sshkeys",
														":sshKeyId"
													],
													"variable": [
														{
															"key": "sshKeyId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List SSH Keys",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profile/sshkeys?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"sshkeys"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									]
								},
								"description": "Returns a collection of SSH Keys you've added to your Profile.\n"
							},
							"response": [
								{
									"name": "Returns a paginated list of SSH Key objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"1944-05-28T10:29:07.833Z\",\n   \"id\": 42,\n   \"label\": \"My SSH Key\",\n   \"ssh_key\": \"enim tempor aliqua cupidatat ipsum\"\n  },\n  {\n   \"created\": \"2012-07-06T14:17:51.681Z\",\n   \"id\": 42,\n   \"label\": \"My SSH Key\",\n   \"ssh_key\": \"deserunt minim labore adipisicing\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Add SSH Key",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"<string>\",\n    \"ssh_key\": \"<ssh-key>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile/sshkeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"sshkeys"
									]
								},
								"description": "Adds an SSH Key to your Account profile.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"My SSH Key\",\n    \"ssh_key\": \"<ssh-key>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "SSH Key associated successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"My SSH Key\",\n    \"ssh_key\": \"<ssh-key>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/sshkeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"sshkeys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"1964-02-24T07:11:14.025Z\",\n \"id\": 42,\n \"label\": \"My SSH Key\",\n \"ssh_key\": \"ullamco aute sunt proident\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "tokens",
					"item": [
						{
							"name": "{token Id}",
							"item": [
								{
									"name": "Revoke Personal Access Token",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/tokens/:tokenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens",
												":tokenId"
											],
											"variable": [
												{
													"key": "tokenId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the token to access."
												}
											]
										},
										"description": "Revokes a Personal Access Token. The token will be invalidated immediately, and requests using that token will fail with a 401. It is possible to revoke access to the token making the request to revoke a token, but keep in mind that doing so could lose you access to the api and require you to create a new token through some other means.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Token revoked successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "View Personal Access Token",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profile/tokens/:tokenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens",
												":tokenId"
											],
											"variable": [
												{
													"key": "tokenId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the token to access."
												}
											]
										},
										"description": "Returns a single Personal Access Token.\n"
									},
									"response": [
										{
											"name": "The requested token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"expiry\": \"1998-09-20T16:26:09.148Z\",\n \"id\": 123,\n \"label\": \"linode-cli\",\n \"scopes\": \"*\",\n \"token\": \"abcdefghijklmnop\"\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Update Personal Access Token",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/tokens/:tokenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens",
												":tokenId"
											],
											"variable": [
												{
													"key": "tokenId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the token to access."
												}
											]
										},
										"description": "Updates a Personal Access Token.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"linode-cli\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Token updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"label\": \"linode-cli\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/profile/tokens/:tokenId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"profile",
														"tokens",
														":tokenId"
													],
													"variable": [
														{
															"key": "tokenId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"expiry\": \"1998-09-20T16:26:09.148Z\",\n \"id\": 123,\n \"label\": \"linode-cli\",\n \"scopes\": \"*\",\n \"token\": \"abcdefghijklmnop\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Personal Access Tokens",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profile/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tokens"
									]
								},
								"description": "Returns a paginated list of Personal Access Tokens currently active for your User.\n"
							},
							"response": [
								{
									"name": "A paginated list of active tokens.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"expiry\": \"2000-06-08T02:01:08.392Z\",\n   \"id\": 123,\n   \"label\": \"linode-cli\",\n   \"scopes\": \"*\",\n   \"token\": \"abcdefghijklmnop\"\n  },\n  {\n   \"created\": \"2018-01-01T00:01:01.000Z\",\n   \"expiry\": \"1958-08-20T16:29:15.897Z\",\n   \"id\": 123,\n   \"label\": \"linode-cli\",\n   \"scopes\": \"*\",\n   \"token\": \"abcdefghijklmnop\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/profile/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create Personal Access Token",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expiry\": \"<dateTime>\",\n    \"label\": \"<string>\",\n    \"scopes\": \"<oauth-scope>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tokens"
									]
								},
								"description": "Creates a Personal Access Token for your User. The raw token will be returned in the response, but will never be returned again afterward so be sure to take note of it. You may create a token with _at most_ the scopes of your current token. The created token will be able to access your Account until the given expiry, or until it is revoked.\n"
							},
							"response": [
								{
									"name": "Token created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expiry\": \"<dateTime>\",\n    \"label\": \"linode-cli\",\n    \"scopes\": \"*\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created\": \"2018-01-01T00:01:01.000Z\",\n \"expiry\": \"1998-09-20T16:26:09.148Z\",\n \"id\": 123,\n \"label\": \"linode-cli\",\n \"scopes\": \"*\",\n \"token\": \"abcdefghijklmnop\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expiry\": \"<dateTime>\",\n    \"label\": \"linode-cli\",\n    \"scopes\": \"*\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/profile/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profile",
												"tokens"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "View Profile",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile"
							]
						},
						"description": "Returns information about the current User. This can be used to see who is acting in applications where more than one token is managed. For example, in third-party OAuth applications.\n\nThis endpoint is always accessible, no matter what OAuth scopes the acting token has.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Profile response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorized_keys\": null,\n \"email\": \"example-user@gmail.com\",\n \"email_notifications\": true,\n \"ip_whitelist_enabled\": false,\n \"lish_auth_method\": \"keys_only\",\n \"referrals\": {\n  \"code\": \"871be32f49c1411b14f29f618aaf0c14637fb8d3\",\n  \"completed\": 0,\n  \"credit\": 0,\n  \"pending\": 0,\n  \"total\": 0,\n  \"url\": \"https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3\"\n },\n \"restricted\": false,\n \"timezone\": \"US/Eastern\",\n \"two_factor_auth\": true,\n \"uid\": 1234,\n \"username\": \"exampleUser\"\n}"
						}
					]
				},
				{
					"name": "Update Profile",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"authorized_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"email\": \"<email>\",\n    \"email_notifications\": \"<boolean>\",\n    \"ip_whitelist_enabled\": \"<boolean>\",\n    \"lish_auth_method\": \"<string>\",\n    \"restricted\": \"<boolean>\",\n    \"timezone\": \"<string>\",\n    \"two_factor_auth\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile"
							]
						},
						"description": "Update information in your Profile.  This endpoint requires the \"account:read_write\" OAuth Scope.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorized_keys\": null,\n    \"email\": \"example-user@gmail.com\",\n    \"email_notifications\": true,\n    \"ip_whitelist_enabled\": false,\n    \"lish_auth_method\": \"keys_only\",\n    \"restricted\": false,\n    \"timezone\": \"US/Eastern\",\n    \"two_factor_auth\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Profile updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorized_keys\": null,\n    \"email\": \"example-user@gmail.com\",\n    \"email_notifications\": true,\n    \"ip_whitelist_enabled\": false,\n    \"lish_auth_method\": \"keys_only\",\n    \"restricted\": false,\n    \"timezone\": \"US/Eastern\",\n    \"two_factor_auth\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorized_keys\": null,\n \"email\": \"example-user@gmail.com\",\n \"email_notifications\": true,\n \"ip_whitelist_enabled\": false,\n \"lish_auth_method\": \"keys_only\",\n \"referrals\": {\n  \"code\": \"871be32f49c1411b14f29f618aaf0c14637fb8d3\",\n  \"completed\": 0,\n  \"credit\": 0,\n  \"pending\": 0,\n  \"total\": 0,\n  \"url\": \"https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3\"\n },\n \"restricted\": false,\n \"timezone\": \"US/Eastern\",\n \"two_factor_auth\": true,\n \"uid\": 1234,\n \"username\": \"exampleUser\"\n}"
						}
					]
				},
				{
					"name": "List Grants",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/grants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"grants"
							]
						},
						"description": "This returns a GrantsResponse describing what the acting User has been granted access to.  For unrestricted users, this will return a  204 and no body because unrestricted users have access to everything without grants.  This will not return information about entities you do not have access to.  This endpoint is useful when writing third-party OAuth applications to see what options you should present to the acting User.\n\nFor example, if they do not have `global.add_linodes`, you might not display a button to deploy a new Linode.\n\nAny client may access this endpoint; no OAuth scopes are required.\n"
					},
					"response": [
						{
							"name": "This is an unrestricted User, who has no grants. This User can access everything on the Account.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"grants"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"grants"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "GrantsResponse",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/grants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"grants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domain\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"global\": {\n  \"account_access\": \"read_only\",\n  \"add_domains\": true,\n  \"add_images\": true,\n  \"add_linodes\": true,\n  \"add_longview\": true,\n  \"add_nodebalancers\": true,\n  \"add_stackscripts\": true,\n  \"add_volumes\": true,\n  \"cancel_account\": false,\n  \"longview_subscription\": true\n },\n \"image\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"linode\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"longview\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"nodebalancer\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"stackscript\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ],\n \"volume\": [\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  },\n  {\n   \"id\": 123,\n   \"label\": \"example-entity\",\n   \"permissions\": \"read_only\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Disable Two Factor Authentication",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/tfa-disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"tfa-disable"
							]
						},
						"description": "Disables Two Factor Authentication for your User. Once successful, login attempts from untrusted computers will only require a password before being successful. This is less secure, and is discouraged.\n"
					},
					"response": [
						{
							"name": "TFA disabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-disable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-disable"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create Two Factor Secret",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profile/tfa-enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"tfa-enable"
							]
						},
						"description": "Generates a Two Factor secret for your User. TFA will not be enabled until you have successfully confirmed the code you were given with [tfa-enable-confirm](/api/v4/profile-tfa-enable-confirm/#post) (see below). Once enabled, logins from untrusted computers will be required to provide a TFA code before they are successful.\n"
					},
					"response": [
						{
							"name": "Two Factor secret generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-enable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"expiry\": \"2018-03-01T00:01:01.000Z\",\n \"secret\": \"5FXX6KLACOC33GTC\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-enable"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Confirm/Enable Two Factor Authentication",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tfa_code\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/profile/tfa-enable-confirm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profile",
								"tfa-enable-confirm"
							]
						},
						"description": "Confirms that you can successfully generate Two Factor codes and enables TFA on your Account. Once this is complete, login attempts from untrusted computers will be required to provide a Two Factor code before they are successful.\n"
					},
					"response": [
						{
							"name": "TFA enabled successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tfa_code\": \"213456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-enable-confirm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-enable-confirm"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"scratch\": \"sample two factor scratch\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tfa_code\": \"213456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profile/tfa-enable-confirm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profile",
										"tfa-enable-confirm"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "regions",
			"item": [
				{
					"name": "List Regions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/regions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"regions"
							]
						},
						"description": "Lists the Regions available for Linode services. Not all services are guaranteed to be\navailable in all Regions.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Returns an array of Regions.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"capabilities\": [\n    \"aute eu labore\",\n    \"aliquip minim laboris\"\n   ],\n   \"country\": \"us\",\n   \"id\": \"us-east\"\n  },\n  {\n   \"capabilities\": [\n    \"exercitation nisi\",\n    \"minim voluptate\"\n   ],\n   \"country\": \"us\",\n   \"id\": \"us-east\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "View Region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/regions/:regionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"regions",
								":regionId"
							],
							"variable": [
								{
									"key": "regionId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) ID of the Region to look up."
								}
							]
						},
						"description": "Returns a single Region.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/regions/:regionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions",
										":regionId"
									],
									"variable": [
										{
											"key": "regionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "A single Region object.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/regions/:regionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions",
										":regionId"
									],
									"variable": [
										{
											"key": "regionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"capabilities\": [\n  \"Ut\",\n  \"sunt minim in consectetur\"\n ],\n \"country\": \"us\",\n \"id\": \"us-east\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "support/tickets",
			"item": [
				{
					"name": "{ticket Id}",
					"item": [
						{
							"name": "replies",
							"item": [
								{
									"name": "List Replies",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/replies?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"replies"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of a collection to return."
												},
												{
													"key": "page_size",
													"value": "100",
													"description": "The number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "ticketId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Support Ticket."
												}
											]
										},
										"description": "Returns a collection of replies to a Support Ticket on your Account.\n"
									},
									"response": [
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support/tickets/:ticketId/replies?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"tickets",
														":ticketId",
														"replies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "ticketId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										},
										{
											"name": "Returns a paginated list of SupportTicketReply objects.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/support/tickets/:ticketId/replies?page=1&page_size=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"tickets",
														":ticketId",
														"replies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "page_size",
															"value": "100"
														}
													],
													"variable": [
														{
															"key": "ticketId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"data\": [\n  {\n   \"created\": \"1979-09-29T06:30:39.503Z\",\n   \"created_by\": \"John Q. Linode\",\n   \"description\": \"Hello,\\\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\\\n \\\\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\\\n\\\\nIf you have, please reply with any additional steps you have also taken.\\\\n\\\\nRegards, Linode Support Team\\n\",\n   \"from_linode\": true,\n   \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n   \"id\": 11223345\n  },\n  {\n   \"created\": \"2012-02-07T21:01:37.779Z\",\n   \"created_by\": \"John Q. Linode\",\n   \"description\": \"Hello,\\\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\\\n \\\\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\\\n\\\\nIf you have, please reply with any additional steps you have also taken.\\\\n\\\\nRegards, Linode Support Team\\n\",\n   \"from_linode\": true,\n   \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n   \"id\": 11223345\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
										}
									]
								},
								{
									"name": "Create Reply",
									"request": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/replies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"replies"
											],
											"variable": [
												{
													"key": "ticketId",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the Support Ticket."
												}
											]
										},
										"description": "Adds a reply to an existing Support Ticket.\n"
									},
									"response": [
										{
											"name": "Reply created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\\n\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/support/tickets/:ticketId/replies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"tickets",
														":ticketId",
														"replies"
													],
													"variable": [
														{
															"key": "ticketId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created\": \"1962-03-03T13:38:55.019Z\",\n \"created_by\": \"John Q. Linode\",\n \"description\": \"Hello,\\\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\\\n \\\\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\\\n\\\\nIf you have, please reply with any additional steps you have also taken.\\\\n\\\\nRegards, Linode Support Team\\n\",\n \"from_linode\": true,\n \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n \"id\": 11223345\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\\n\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/support/tickets/:ticketId/replies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"tickets",
														":ticketId",
														"replies"
													],
													"variable": [
														{
															"key": "ticketId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "View Support Ticket",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/support/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Support Ticket."
										}
									]
								},
								"description": "Returns a Support Ticket under your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Returns a single SupportTicket object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"attachments\": [\n  \"nostrud\",\n  \"nulla sed\"\n ],\n \"closable\": false,\n \"closed\": \"1964-03-11T22:34:08.097Z\",\n \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n \"entity\": {\n  \"id\": 10400,\n  \"label\": \"linode123456\",\n  \"type\": \"linode\",\n  \"url\": \"/v4/linode/instances/123456\"\n },\n \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n \"id\": 11223344,\n \"opened\": \"1960-10-29T18:54:28.868Z\",\n \"opened_by\": \"some_user\",\n \"status\": \"open\",\n \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n \"updated\": \"1968-09-15T19:28:19.060Z\",\n \"updated_by\": \"some_other_user\"\n}"
								}
							]
						},
						{
							"name": "Create Ticket Attachment",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "The local, absolute path to the file you want to attach to your Support Ticket.\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/support/tickets/:ticketId/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets",
										":ticketId",
										"attachments"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Support Ticket."
										}
									]
								},
								"description": "Adds a file attachment to an existing Support Ticket on your Account. File attachments are used to assist our Support team in resolving your Ticket. Examples of attachments are screen shots and text files that provide additional information.\nNote: Accepted file extensions include: .gif, .jpg, .jpeg, .pjpg, .pjpeg, .tif, .tiff, .png, .pdf, or .txt.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "/Users/LinodeGuy/pictures/screen_shot.jpg",
													"description": {
														"content": "The local, absolute path to the file you want to attach to your Support Ticket.\n",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"attachments"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Attachment created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "/Users/LinodeGuy/pictures/screen_shot.jpg",
													"description": {
														"content": "The local, absolute path to the file you want to attach to your Support Ticket.\n",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"attachments"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Close Support Ticket",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/support/tickets/:ticketId/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets",
										":ticketId",
										"close"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the Support Ticket."
										}
									]
								},
								"description": "Closes a Support Ticket you have access to modify.\n"
							},
							"response": [
								{
									"name": "Support Ticket closed successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"close"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/support/tickets/:ticketId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"tickets",
												":ticketId",
												"close"
											],
											"variable": [
												{
													"key": "ticketId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Support Tickets",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/support/tickets?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"support",
								"tickets"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "Returns a collection of Support Tickets on your Account. Support Tickets can be both tickets you open with Linode for support, as well as tickets generated by Linode regarding your Account.\nThis collection includes all Support Tickets generated on your Account, with open tickets returned first.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/support/tickets?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Returns a paginated list of SupportTicket objects.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/support/tickets?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attachments\": [\n    \"dolore eiusmod amet adipisicing\",\n    \"elit en\"\n   ],\n   \"closable\": false,\n   \"closed\": \"1994-05-22T07:23:39.434Z\",\n   \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n   \"entity\": {\n    \"id\": 10400,\n    \"label\": \"linode123456\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/123456\"\n   },\n   \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n   \"id\": 11223344,\n   \"opened\": \"1966-05-13T12:30:11.642Z\",\n   \"opened_by\": \"some_user\",\n   \"status\": \"open\",\n   \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n   \"updated\": \"1998-09-04T08:00:55.816Z\",\n   \"updated_by\": \"some_other_user\"\n  },\n  {\n   \"attachments\": [\n    \"commodo nulla\",\n    \"elit\"\n   ],\n   \"closable\": false,\n   \"closed\": \"2002-12-21T18:20:41.370Z\",\n   \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n   \"entity\": {\n    \"id\": 10400,\n    \"label\": \"linode123456\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/123456\"\n   },\n   \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n   \"id\": 11223344,\n   \"opened\": \"1958-03-30T01:17:53.411Z\",\n   \"opened_by\": \"some_user\",\n   \"status\": \"open\",\n   \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n   \"updated\": \"1996-05-24T05:02:19.027Z\",\n   \"updated_by\": \"some_other_user\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "Open Support Ticket",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"domain_id\": \"<integer>\",\n    \"linode_id\": \"<integer>\",\n    \"longviewclient_id\": \"<integer>\",\n    \"nodebalancer_id\": \"<integer>\",\n    \"volume_id\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/support/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"support",
								"tickets"
							]
						},
						"description": "Open a Support Ticket.\nOnly one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.\n"
					},
					"response": [
						{
							"name": "Support Ticket opened.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n    \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n    \"domain_id\": \"<integer>\",\n    \"linode_id\": 123,\n    \"longviewclient_id\": \"<integer>\",\n    \"nodebalancer_id\": \"<integer>\",\n    \"volume_id\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/support/tickets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"attachments\": [\n  \"nostrud\",\n  \"nulla sed\"\n ],\n \"closable\": false,\n \"closed\": \"1964-03-11T22:34:08.097Z\",\n \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n \"entity\": {\n  \"id\": 10400,\n  \"label\": \"linode123456\",\n  \"type\": \"linode\",\n  \"url\": \"/v4/linode/instances/123456\"\n },\n \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n \"id\": 11223344,\n \"opened\": \"1960-10-29T18:54:28.868Z\",\n \"opened_by\": \"some_user\",\n \"status\": \"open\",\n \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n \"updated\": \"1968-09-15T19:28:19.060Z\",\n \"updated_by\": \"some_other_user\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n    \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n    \"domain_id\": \"<integer>\",\n    \"linode_id\": 123,\n    \"longviewclient_id\": \"<integer>\",\n    \"nodebalancer_id\": \"<integer>\",\n    \"volume_id\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/support/tickets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"tickets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "{label}",
					"item": [
						{
							"name": "Delete a Tag",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags/:label",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":label"
									],
									"variable": [
										{
											"key": "label",
											"value": "<string>",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Remove a Tag from all objects and delete it.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n"
							},
							"response": [
								{
									"name": "Tag deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:label",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":label"
											],
											"variable": [
												{
													"key": "label"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:label",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":label"
											],
											"variable": [
												{
													"key": "label"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "List Tagged Objects",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags/:label?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":label"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									],
									"variable": [
										{
											"key": "label",
											"value": "<string>",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Returns a paginated list of all objects you've tagged with the requested Tag. This is a mixed collection of all object types.\n"
							},
							"response": [
								{
									"name": "A paginated list of objects, organized by type, that have been tagged with the requested Tag.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:label?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":label"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "label"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"data\": {\n    \"group\": \"Linode-Group\",\n    \"label\": \"M09s\",\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n   },\n   \"type\": \"linode\"\n  },\n  {\n   \"data\": {\n    \"group\": \"Linode-Group\",\n    \"label\": \"E_uu\",\n    \"region\": \"us-east\",\n    \"type\": \"g6-standard-2\"\n   },\n   \"type\": \"linode\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:label?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":label"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "label"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Tags",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "Tags are User-defined labels attached to objects in your Account, such as Linodes. They are used for specifying and grouping attributes of objects that are relevant to the User.\n\nThis endpoint returns a paginated list of Tags on your account.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "A paginated list of Tags",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"label\": \"example tag\"\n  },\n  {\n   \"label\": \"example tag\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "Create New Tag",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"<string>\",\n    \"domains\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"linodes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"nodebalancers\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"volumes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Creates a new Tag and optionally tags requested objects with it immediately.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"example tag\",\n    \"domains\": [\n        564,\n        565\n    ],\n    \"linodes\": [\n        123,\n        456\n    ],\n    \"nodebalancers\": [\n        10301,\n        10501\n    ],\n    \"volumes\": [\n        9082,\n        10003\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "The new Tag.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"example tag\",\n    \"domains\": [\n        564,\n        565\n    ],\n    \"linodes\": [\n        123,\n        456\n    ],\n    \"nodebalancers\": [\n        10301,\n        10501\n    ],\n    \"volumes\": [\n        9082,\n        10003\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"label\": \"example tag\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "volumes",
			"item": [
				{
					"name": "{volume Id}",
					"item": [
						{
							"name": "Delete Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to look up."
										}
									]
								},
								"description": "Deletes a Volume you have permission to `read_write`.\n\n**Deleting a Volume is a destructive action and cannot be undone.**\n\nDeleting stops billing for the Volume. You will be billed for time used within\nthe billing period the Volume was active.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Volume deletion successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "View Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of a collection to return."
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items to return per page."
										}
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to look up."
										}
									]
								},
								"description": "Get information about a single Volume.\n"
							},
							"response": [
								{
									"name": "Returns a single Volume object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"label\": \"my-volume\",\n \"created\": \"2013-03-28T14:54:47.221Z\",\n \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n \"id\": 12345,\n \"linode_id\": 12346,\n \"region\": \"us-east\",\n \"size\": 30,\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"updated\": \"2016-04-30T11:03:45.232Z\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId?page=1&page_size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Fc F\",\n    \"created\": \"1966-05-29T02:36:54.207Z\",\n    \"filesystem_path\": \"dolor in esse\",\n    \"id\": 20321038,\n    \"linode_id\": -42308003,\n    \"region\": \"cillum amet eiusmod in\",\n    \"size\": -1360020,\n    \"status\": \"resizing\",\n    \"tags\": [\n        \"exercitation nulla ea commodo nisi\",\n        \"esse Lorem\"\n    ],\n    \"updated\": \"1992-01-16T00:41:33.320Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to look up."
										}
									]
								},
								"description": "Updates a Volume that you have permission to `read_write`.\n"
							},
							"response": [
								{
									"name": "The updated Volume.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-volume\",\n    \"created\": \"2014-03-07T21:34:09.311Z\",\n    \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n    \"id\": 12345,\n    \"linode_id\": 12346,\n    \"region\": \"us-east\",\n    \"size\": 30,\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"updated\": \"1990-12-14T18:41:59.026Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"label\": \"my-volume\",\n \"created\": \"2013-03-28T14:54:47.221Z\",\n \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n \"id\": 12345,\n \"linode_id\": 12346,\n \"region\": \"us-east\",\n \"size\": 30,\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"updated\": \"2016-04-30T11:03:45.232Z\"\n}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-volume\",\n    \"created\": \"2014-03-07T21:34:09.311Z\",\n    \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n    \"id\": 12345,\n    \"linode_id\": 12346,\n    \"region\": \"us-east\",\n    \"size\": 30,\n    \"status\": \"active\",\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ],\n    \"updated\": \"1990-12-14T18:41:59.026Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Attach Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"config_id\": \"<integer>\",\n    \"linode_id\": \"<integer>\",\n    \"persist_across_boots\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId",
										"attach"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to attach."
										}
									]
								},
								"description": "Attaches a Volume on your Account to an existing Linode on your Account. In order for this request to complete successfully, your User must have `read_only` or `read_write` permission to the Volume and `read_write` permission to the Linode. Additionally, the Volume and Linode must be located in the same Region.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\": 23456,\n    \"linode_id\": 12346,\n    \"persist_across_boots\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/attach",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"attach"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Volume was attached to a Linode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\": 23456,\n    \"linode_id\": 12346,\n    \"persist_across_boots\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/attach",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"attach"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"label\": \"my-volume\",\n \"created\": \"1953-12-08T13:14:41.885Z\",\n \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n \"id\": 12345,\n \"linode_id\": 12346,\n \"region\": \"us-east\",\n \"size\": 30,\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"updated\": \"2003-12-15T20:01:24.270Z\"\n}"
								}
							]
						},
						{
							"name": "Clone Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId",
										"clone"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to clone."
										}
									]
								},
								"description": "Creates a Volume on your Account. In order for this request to complete successfully, your User must have the `add_volumes` grant. The new Volume will have the same size and data as the source Volume. Creating a new Volume will incur a charge on your Account.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-volume\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"clone"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Clone started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"my-volume\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"clone"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Detach Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId",
										"detach"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to detach."
										}
									]
								},
								"description": "Detaches a Volume on your Account from a Linode on your Account. In order for this request to complete successfully, your User must have `read_write` access to the Volume and `read_write` access to the Linode.\n"
							},
							"response": [
								{
									"name": "Volume was detached from a Linode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/detach",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"detach"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/detach",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"detach"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Resize Volume",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"size\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes/:volumeId/resize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes",
										":volumeId",
										"resize"
									],
									"variable": [
										{
											"key": "volumeId",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) ID of the Volume to resize."
										}
									]
								},
								"description": "Resize an existing Volume on your Account. In order for this request to complete successfully, your User must have the `read_write` permissions to the Volume.\n* Volumes can only be resized up.\n"
							},
							"response": [
								{
									"name": "Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"size\": 30\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/resize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"resize"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
								},
								{
									"name": "Volume resize started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"size\": 30\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/volumes/:volumeId/resize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volumes",
												":volumeId",
												"resize"
											],
											"variable": [
												{
													"key": "volumeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "List Volumes",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/volumes?page=1&page_size=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"volumes"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page of a collection to return."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "The number of items to return per page."
								}
							]
						},
						"description": "Returns a paginated list of Volumes you have permission to view.\n"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/volumes?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						},
						{
							"name": "Returns an array of all Volumes on your Account.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/volumes?page=1&page_size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"label\": \"my-volume\",\n   \"created\": \"1949-10-02T09:10:51.146Z\",\n   \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n   \"id\": 12345,\n   \"linode_id\": 12346,\n   \"region\": \"us-east\",\n   \"size\": 30,\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"updated\": \"1993-09-09T22:53:49.372Z\"\n  },\n  {\n   \"label\": \"my-volume\",\n   \"created\": \"2006-03-04T20:31:08.817Z\",\n   \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n   \"id\": 12345,\n   \"linode_id\": 12346,\n   \"region\": \"us-east\",\n   \"size\": 30,\n   \"status\": \"active\",\n   \"tags\": [\n    \"example tag\",\n    \"another example\"\n   ],\n   \"updated\": \"1994-09-21T18:17:25.398Z\"\n  }\n ],\n \"page\": 1,\n \"pages\": 1,\n \"results\": 1\n}"
						}
					]
				},
				{
					"name": "Create Volume",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config_id\": \"<integer>\",\n    \"label\": \"<string>\",\n    \"linode_id\": \"<integer>\",\n    \"region\": \"<string>\",\n    \"size\": 20,\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/volumes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"volumes"
							]
						},
						"description": "Creates a Volume on your Account. In order for this to complete successfully, your User must have the `add_volumes` grant. Creating a new Volume will start accruing additional charges on your account.\n"
					},
					"response": [
						{
							"name": "Creating Volume.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"config_id\": 23456,\n    \"label\": \"my-volume\",\n    \"linode_id\": 123,\n    \"region\": \"<string>\",\n    \"size\": 20,\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"label\": \"my-volume\",\n \"created\": \"2013-03-28T14:54:47.221Z\",\n \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n \"id\": 12345,\n \"linode_id\": 12346,\n \"region\": \"us-east\",\n \"size\": 30,\n \"status\": \"active\",\n \"tags\": [\n  \"example tag\",\n  \"another example\"\n ],\n \"updated\": \"2016-04-30T11:03:45.232Z\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"config_id\": 23456,\n    \"label\": \"my-volume\",\n    \"linode_id\": 123,\n    \"region\": \"<string>\",\n    \"size\": 20,\n    \"tags\": [\n        \"example tag\",\n        \"another example\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volumes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  },\n  {\n   \"field\": \"fieldname\",\n   \"reason\": \"fieldname must be a valid value\"\n  }\n ]\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.linode.com/v4",
			"type": "string"
		}
	]
}